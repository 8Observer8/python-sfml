/* Generated by Cython 0.16 on Wed May 30 20:36:28 2012 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif

#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif

#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif

#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif

#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif

#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCFunction_Call PyObject_Call
#else
  #define __Pyx_PyCFunction_Call PyCFunction_Call
#endif

#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_AsInt(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
#endif

#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)

  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif

#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif

#if PY_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif

#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif

#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif


#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_GET_LENGTH)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_GET_LENGTH(u) PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_GET_LENGTH(u) PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif

#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)

#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif

#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif

#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__sfml__network__network
#define __PYX_HAVE_API__sfml__network__network
#include "stdlib.h"
#include <string>
#include <vector>
#include "SFML/System.hpp"
#include "SFML/Graphics.hpp"
#include "SFML/Network.hpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif


/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))

#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "network.pyx",
};

/*--- Type declarations ---*/
struct __pyx_obj_4sfml_7network_7network_FtpResponse;
struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse;
struct __pyx_obj_4sfml_7network_7network_Socket;
struct __pyx_obj_4sfml_7network_7network_UdpSocket;
struct __pyx_obj_4sfml_7network_7network_FtpListingResponse;
struct __pyx_obj_4sfml_7network_7network_Http;
struct __pyx_obj_4sfml_7network_7network_HttpRequest;
struct __pyx_obj_4sfml_7network_7network_SocketSelector;
struct __pyx_obj_4sfml_7network_7network_TcpListener;
struct __pyx_obj_4sfml_7network_7network_Ftp;
struct __pyx_obj_4sfml_7network_7network_TcpSocket;
struct __pyx_obj_4sfml_7network_7network_IpAddress;
struct __pyx_obj_4sfml_7network_7network_HttpResponse;

/* "sfml/network/network.pyx":318
 * 
 * 
 * cdef class FtpResponse:             # <<<<<<<<<<<<<<
 * 	RESTART_MARKER_REPLY = dnetwork.ftp.response.RestartMarkerReply
 * 	SERVICE_READY_SOON = dnetwork.ftp.response.ServiceReadySoon
 */
struct __pyx_obj_4sfml_7network_7network_FtpResponse {
  PyObject_HEAD
  sf::Ftp::Response *p_response;
};


/* "sfml/network/network.pyx":383
 * 			return self.p_response.getMessage().c_str()
 * 
 * cdef class FtpDirectoryResponse(FtpResponse):             # <<<<<<<<<<<<<<
 * 	cdef dnetwork.ftp.DirectoryResponse *p_this
 * 
 */
struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse {
  struct __pyx_obj_4sfml_7network_7network_FtpResponse __pyx_base;
  sf::Ftp::DirectoryResponse *p_this;
};


/* "sfml/network/network.pyx":86
 * 	return r
 * 
 * cdef class Socket:             # <<<<<<<<<<<<<<
 * 	DONE = dnetwork.socket.Done
 * 	NOT_READY = dnetwork.socket.NotReady
 */
struct __pyx_obj_4sfml_7network_7network_Socket {
  PyObject_HEAD
  sf::Socket *p_socket;
};


/* "sfml/network/network.pyx":234
 * 
 * 
 * cdef class UdpSocket(Socket):             # <<<<<<<<<<<<<<
 * 	cdef dnetwork.UdpSocket *p_this
 * 
 */
struct __pyx_obj_4sfml_7network_7network_UdpSocket {
  struct __pyx_obj_4sfml_7network_7network_Socket __pyx_base;
  sf::UdpSocket *p_this;
};


/* "sfml/network/network.pyx":396
 * 
 * 
 * cdef class FtpListingResponse(FtpResponse):             # <<<<<<<<<<<<<<
 * 	cdef dnetwork.ftp.ListingResponse *p_this
 * 
 */
struct __pyx_obj_4sfml_7network_7network_FtpListingResponse {
  struct __pyx_obj_4sfml_7network_7network_FtpResponse __pyx_base;
  sf::Ftp::ListingResponse *p_this;
};


/* "sfml/network/network.pyx":675
 * 	return r
 * 
 * cdef class Http:             # <<<<<<<<<<<<<<
 * 	cdef dnetwork.Http *p_this
 * 
 */
struct __pyx_obj_4sfml_7network_7network_Http {
  PyObject_HEAD
  sf::Http *p_this;
};


/* "sfml/network/network.pyx":580
 * 
 * 
 * cdef class HttpRequest:             # <<<<<<<<<<<<<<
 * 	GET = dnetwork.http.request.Get
 * 	POST = dnetwork.http.request.Post
 */
struct __pyx_obj_4sfml_7network_7network_HttpRequest {
  PyObject_HEAD
  sf::Http::Request *p_this;
};


/* "sfml/network/network.pyx":293
 * 
 * 
 * cdef class SocketSelector:             # <<<<<<<<<<<<<<
 * 	cdef dnetwork.SocketSelector *p_this
 * 
 */
struct __pyx_obj_4sfml_7network_7network_SocketSelector {
  PyObject_HEAD
  sf::SocketSelector *p_this;
};


/* "sfml/network/network.pyx":114
 * 
 * 
 * cdef class TcpListener(Socket):             # <<<<<<<<<<<<<<
 * 	cdef dnetwork.TcpListener *p_this
 * 
 */
struct __pyx_obj_4sfml_7network_7network_TcpListener {
  struct __pyx_obj_4sfml_7network_7network_Socket __pyx_base;
  sf::TcpListener *p_this;
};


/* "sfml/network/network.pyx":437
 * 	return r
 * 
 * cdef class Ftp:             # <<<<<<<<<<<<<<
 * 	BINARY = dnetwork.ftp.Binary
 * 	ASCII = dnetwork.ftp.Ascii
 */
struct __pyx_obj_4sfml_7network_7network_Ftp {
  PyObject_HEAD
  sf::Ftp *p_this;
};


/* "sfml/network/network.pyx":163
 * 
 * 
 * cdef class TcpSocket(Socket):             # <<<<<<<<<<<<<<
 * 	cdef dnetwork.TcpSocket *p_this
 * 
 */
struct __pyx_obj_4sfml_7network_7network_TcpSocket {
  struct __pyx_obj_4sfml_7network_7network_Socket __pyx_base;
  sf::TcpSocket *p_this;
};


/* "sfml/network/network.pyx":23
 * 
 * 
 * cdef class IpAddress:             # <<<<<<<<<<<<<<
 * 	cdef dnetwork.IpAddress *p_this
 * 
 */
struct __pyx_obj_4sfml_7network_7network_IpAddress {
  PyObject_HEAD
  sf::IpAddress *p_this;
};


/* "sfml/network/network.pyx":618
 * 
 * 
 * cdef class HttpResponse:             # <<<<<<<<<<<<<<
 * 	OK = dnetwork.http.response.Ok
 * 	CREATED = dnetwork.http.response.Created
 */
struct __pyx_obj_4sfml_7network_7network_HttpResponse {
  PyObject_HEAD
  sf::Http::Response *p_this;
};

#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static CYTHON_INLINE PyObject* __Pyx_tp_new(PyObject* type_obj) {
    return (PyObject*) (((PyTypeObject*)(type_obj))->tp_new(
        (PyTypeObject*)(type_obj), __pyx_empty_tuple, NULL));
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
#define __Pyx_GetItemInt_List(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}
#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}
#define __Pyx_GetItemInt(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i) {
    if (PyList_CheckExact(o)) {
        Py_ssize_t n = (likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if (likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = (likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if (likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (likely(i >= 0)) {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            return m->sq_item(o, i);
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#include "descrobject.h"
static PyObject* __Pyx_Method_ClassMethod(PyObject *method); /*proto*/

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases); /*proto*/

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *modname); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_sf__Uint32(sf::Uint32);

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static CYTHON_INLINE sf::Uint32 __Pyx_PyInt_from_py_sf__Uint32(PyObject *);

static CYTHON_INLINE sf::Uint8 __Pyx_PyInt_from_py_sf__Uint8(PyObject *);

static int __Pyx_check_binary_version(void);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'time' */

/* Module declarations from 'dsystem' */

/* Module declarations from 'sfml.network.ipaddress' */

/* Module declarations from 'sfml.network.socket' */

/* Module declarations from 'sfml.network.udpsocket' */

/* Module declarations from 'sfml.network.ftp.response' */

/* Module declarations from 'sfml.network.ftp' */

/* Module declarations from 'sfml.network.http.request' */

/* Module declarations from 'sfml.network.http.response' */

/* Module declarations from 'sfml.network.http' */

/* Module declarations from 'sfml.network.dnetwork' */

/* Module declarations from 'sfml.network.network' */
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_IpAddress = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_Socket = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_TcpListener = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_TcpSocket = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_UdpSocket = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_SocketSelector = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_FtpResponse = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_FtpDirectoryResponse = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_FtpListingResponse = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_Ftp = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_HttpRequest = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_HttpResponse = 0;
static PyTypeObject *__pyx_ptype_4sfml_7network_7network_Http = 0;
static PyObject *__pyx_f_4sfml_7network_7network_wrap_ipaddress(sf::IpAddress *); /*proto*/
static PyObject *__pyx_f_4sfml_7network_7network_wrap_ftpresponse(sf::Ftp::Response *); /*proto*/
static PyObject *__pyx_f_4sfml_7network_7network_wrap_ftpdirectoryresponse(sf::Ftp::DirectoryResponse *); /*proto*/
static PyObject *__pyx_f_4sfml_7network_7network_wrap_ftplistingresponse(sf::Ftp::ListingResponse *); /*proto*/
static PyObject *__pyx_f_4sfml_7network_7network_wrap_httpresponse(sf::Http::Response *); /*proto*/
#define __Pyx_MODULE_NAME "sfml.network.network"
int __pyx_module_is_main_sfml__network__network = 0;

/* Implementation of 'sfml.network.network' */
static PyObject *__pyx_builtin_Exception;
static PyObject *__pyx_builtin_NotImplementedError;
static int __pyx_pf_4sfml_7network_7network_9IpAddress___init__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_9IpAddress_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_4__repr__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_6__str__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_8from_string(CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v__string); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_10from_integer(CYTHON_UNUSED PyObject *__pyx_v_self, sf::Uint32 __pyx_v_address); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_12from_bytes(CYTHON_UNUSED PyObject *__pyx_v_self, sf::Uint8 __pyx_v_b1, sf::Uint8 __pyx_v_b2, sf::Uint8 __pyx_v_b3, sf::Uint8 __pyx_v_b4); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_6string___get__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_7integer___get__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_14get_local_address(CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_16get_public_address(CYTHON_UNUSED PyObject *__pyx_v_self, sf::Uint32 __pyx_v_timeout); /* proto */
static int __pyx_pf_4sfml_7network_7network_6Socket___init__(struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_6Socket_8blocking___get__(struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_self); /* proto */
static int __pyx_pf_4sfml_7network_7network_6Socket_8blocking_2__set__(struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_self, int __pyx_v_blocking); /* proto */
static int __pyx_pf_4sfml_7network_7network_11TcpListener___init__(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_11TcpListener_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_4__repr__(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_6__str__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_10local_port___get__(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_8listen(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self, unsigned short __pyx_v_port); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_10close(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_12accept(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self); /* proto */
static int __pyx_pf_4sfml_7network_7network_9TcpSocket___init__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_9TcpSocket_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_4__repr__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_6__str__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_10local_port___get__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_14remote_address___get__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_11remote_port___get__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_8connect(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_remote_address, unsigned short __pyx_v_remote_port, sf::Uint32 __pyx_v_timeout); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_10disconnect(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_12send(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self, PyObject *__pyx_v_data); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_14receive(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self, size_t __pyx_v_size); /* proto */
static int __pyx_pf_4sfml_7network_7network_9UdpSocket___init__(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_9UdpSocket_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_10local_port___get__(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_4bind(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self, unsigned short __pyx_v_port); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_6unbind(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_8send(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self, PyObject *__pyx_v_data, struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_remote_address, unsigned short __pyx_v_remote_port); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_10receive(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self, size_t __pyx_v_size); /* proto */
static int __pyx_pf_4sfml_7network_7network_14SocketSelector___init__(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_14SocketSelector_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_4add(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_socket); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_6remove(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_socket); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_8clear(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_10wait(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self, sf::Uint32 __pyx_v_timeout); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_12is_ready(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_socket); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse___repr__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse_2__str__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse_2ok___get__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse_6status___get__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse_7message___get__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self); /* proto */
static int __pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse___init__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse_4get_directory(struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *__pyx_v_self); /* proto */
static int __pyx_pf_4sfml_7network_7network_18FtpListingResponse___init__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_18FtpListingResponse_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_18FtpListingResponse_9filenames___get__(struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *__pyx_v_self); /* proto */
static int __pyx_pf_4sfml_7network_7network_3Ftp___init__(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_3Ftp_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_4connect(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_server, unsigned short __pyx_v_port, sf::Uint32 __pyx_v_timeout); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_6disconnect(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_8login(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_message); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_10keep_alive(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_12get_working_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_14get_directory_listing(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_directory); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_16change_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_directory); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_18parent_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_20create_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_22delete_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_24rename_file(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_newname); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_26delete_file(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_28download(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_remotefile, PyObject *__pyx_v_localpath, enum sf::Ftp::TransferMode __pyx_v_mode); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_30upload(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_localfile, PyObject *__pyx_v_remotepath, enum sf::Ftp::TransferMode __pyx_v_mode); /* proto */
static int __pyx_pf_4sfml_7network_7network_11HttpRequest___init__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_uri, enum sf::Http::Request::Method __pyx_v_method, PyObject *__pyx_v_body); /* proto */
static void __pyx_pf_4sfml_7network_7network_11HttpRequest_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self); /* proto */
static int __pyx_pf_4sfml_7network_7network_11HttpRequest_5field___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_v); /* proto */
static int __pyx_pf_4sfml_7network_7network_11HttpRequest_6method___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, enum sf::Http::Request::Method __pyx_v_method); /* proto */
static int __pyx_pf_4sfml_7network_7network_11HttpRequest_3uri___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_uri); /* proto */
static int __pyx_pf_4sfml_7network_7network_11HttpRequest_12http_version___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_4sfml_7network_7network_11HttpRequest_4body___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_body); /* proto */
static int __pyx_pf_4sfml_7network_7network_12HttpResponse___init__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self); /* proto */
static void __pyx_pf_4sfml_7network_7network_12HttpResponse_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_4get_field(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self, PyObject *__pyx_v_field); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_6status___get__(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_18major_http_version___get__(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_18minor_http_version___get__(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_4body___get__(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self); /* proto */
static int __pyx_pf_4sfml_7network_7network_4Http___init__(struct __pyx_obj_4sfml_7network_7network_Http *__pyx_v_self, PyObject *__pyx_v_host, unsigned short __pyx_v_port); /* proto */
static void __pyx_pf_4sfml_7network_7network_4Http_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_Http *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4sfml_7network_7network_4Http_4send_request(struct __pyx_obj_4sfml_7network_7network_Http *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_request, sf::Uint32 __pyx_v_timeout); /* proto */
static char __pyx_k_1[] = "sf.IpAddress({0})";
static char __pyx_k_2[] = "utf-8";
static char __pyx_k_4[] = "UTF-8";
static char __pyx_k_6[] = "Socket is abstact";
static char __pyx_k_8[] = "sf.TcpListener({0})";
static char __pyx_k_9[] = "TcpSocket({0})";
static char __pyx_k_10[] = "sf.FtpResponse({0})";
static char __pyx_k_11[] = "Status: {0} - {1}";
static char __pyx_k_12[] = "Not meant to be instantiated";
static char __pyx_k_15[] = "";
static char __pyx_k_31[] = "/";
static char __pyx_k_33[] = "Not meant to be instantiated!";
static char __pyx_k_35[] = "sfml.network.network";
static char __pyx_k_36[] = "RESTART_MARKER_REPLY";
static char __pyx_k_37[] = "DATA_CONNECTION_ALREADY_OPENED";
static char __pyx_k_38[] = "OPENING_DATA_CONNECTION";
static char __pyx_k_39[] = "DATA_CONNECTION_OPENED";
static char __pyx_k_40[] = "CLOSING_DATA_CONNECTION";
static char __pyx_k_41[] = "ENTERING_PASSIVE_MODE";
static char __pyx_k_42[] = "NEED_ACCOUNT_TO_LOG_IN";
static char __pyx_k_43[] = "DATA_CONNECTION_UNAVAILABLE";
static char __pyx_k_44[] = "INSUFFICIENT_STORAGE_SPACE";
static char __pyx_k_45[] = "COMMAND_NOT_IMPLEMENTED";
static char __pyx_k_46[] = "BAD_COMMAND_SEQUENCE";
static char __pyx_k_47[] = "PARAMETER_NOT_IMPLEMENTED";
static char __pyx_k_48[] = "NEED_ACCOUNT_TO_STORE";
static char __pyx_k_49[] = "FILENAME_NOT_ALLOWED";
static char __pyx_k_50[] = "RANGE_NOT_SATISFIABLE";
static char __pyx_k_51[] = "INTERNAL_SERVER_ERROR";
static char __pyx_k_52[] = "SERVICE_NOT_AVAILABLE";
static char __pyx_k_53[] = "VERSION_NOT_SUPPORTED";
static char __pyx_k__OK[] = "OK";
static char __pyx_k__b1[] = "b1";
static char __pyx_k__b2[] = "b2";
static char __pyx_k__b3[] = "b3";
static char __pyx_k__b4[] = "b4";
static char __pyx_k__GET[] = "GET";
static char __pyx_k__uri[] = "uri";
static char __pyx_k__DONE[] = "DONE";
static char __pyx_k__HEAD[] = "HEAD";
static char __pyx_k__NONE[] = "NONE";
static char __pyx_k__POST[] = "POST";
static char __pyx_k__body[] = "body";
static char __pyx_k__data[] = "data";
static char __pyx_k__host[] = "host";
static char __pyx_k__mode[] = "mode";
static char __pyx_k__name[] = "name";
static char __pyx_k__port[] = "port";
static char __pyx_k__ASCII[] = "ASCII";
static char __pyx_k__ERROR[] = "ERROR";
static char __pyx_k__BINARY[] = "BINARY";
static char __pyx_k__EBCDIC[] = "EBCDIC";
static char __pyx_k__decode[] = "decode";
static char __pyx_k__encode[] = "encode";
static char __pyx_k__format[] = "format";
static char __pyx_k__method[] = "method";
static char __pyx_k__server[] = "server";
static char __pyx_k__status[] = "status";
static char __pyx_k__string[] = "string";
static char __pyx_k__CREATED[] = "CREATED";
static char __pyx_k__message[] = "message";
static char __pyx_k__newname[] = "newname";
static char __pyx_k__request[] = "request";
static char __pyx_k__timeout[] = "timeout";
static char __pyx_k__ACCEPTED[] = "ACCEPTED";
static char __pyx_k__ANY_PORT[] = "ANY_PORT";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__filename[] = "filename";
static char __pyx_k__BROADCAST[] = "BROADCAST";
static char __pyx_k__Exception[] = "Exception";
static char __pyx_k__FORBIDDEN[] = "FORBIDDEN";
static char __pyx_k__LOGGED_IN[] = "LOGGED_IN";
static char __pyx_k__NOT_FOUND[] = "NOT_FOUND";
static char __pyx_k__NOT_READY[] = "NOT_READY";
static char __pyx_k____class__[] = "__class__";
static char __pyx_k__directory[] = "directory";
static char __pyx_k__localfile[] = "localfile";
static char __pyx_k__localpath[] = "localpath";
static char __pyx_k__LOCAL_HOST[] = "LOCAL_HOST";
static char __pyx_k__NO_CONTENT[] = "NO_CONTENT";
static char __pyx_k__from_bytes[] = "from_bytes";
static char __pyx_k__remotefile[] = "remotefile";
static char __pyx_k__remotepath[] = "remotepath";
static char __pyx_k__BAD_GATEWAY[] = "BAD_GATEWAY";
static char __pyx_k__BAD_REQUEST[] = "BAD_REQUEST";
static char __pyx_k__FILE_STATUS[] = "FILE_STATUS";
static char __pyx_k__LOCAL_ERROR[] = "LOCAL_ERROR";
static char __pyx_k__SYSTEM_TYPE[] = "SYSTEM_TYPE";
static char __pyx_k__SocketError[] = "SocketError";
static char __pyx_k__from_string[] = "from_string";
static char __pyx_k__remote_port[] = "remote_port";
static char __pyx_k__DIRECTORY_OK[] = "DIRECTORY_OK";
static char __pyx_k__DISCONNECTED[] = "DISCONNECTED";
static char __pyx_k__HELP_MESSAGE[] = "HELP_MESSAGE";
static char __pyx_k__INVALID_FILE[] = "INVALID_FILE";
static char __pyx_k__NOT_MODIFIED[] = "NOT_MODIFIED";
static char __pyx_k__UNAUTHORIZED[] = "UNAUTHORIZED";
static char __pyx_k__from_integer[] = "from_integer";
static char __pyx_k__NEED_PASSWORD[] = "NEED_PASSWORD";
static char __pyx_k__NOT_LOGGED_IN[] = "NOT_LOGGED_IN";
static char __pyx_k__RESET_CONTENT[] = "RESET_CONTENT";
static char __pyx_k__SERVICE_READY[] = "SERVICE_READY";
static char __pyx_k__SYSTEM_STATUS[] = "SYSTEM_STATUS";
static char __pyx_k__FILE_ACTION_OK[] = "FILE_ACTION_OK";
static char __pyx_k__SocketNotReady[] = "SocketNotReady";
static char __pyx_k__remote_address[] = "remote_address";
static char __pyx_k__COMMAND_UNKNOWN[] = "COMMAND_UNKNOWN";
static char __pyx_k__GATEWAY_TIMEOUT[] = "GATEWAY_TIMEOUT";
static char __pyx_k__NOT_IMPLEMENTED[] = "NOT_IMPLEMENTED";
static char __pyx_k__PARTIAL_CONTENT[] = "PARTIAL_CONTENT";
static char __pyx_k__SocketException[] = "SocketException";
static char __pyx_k__DIRECTORY_STATUS[] = "DIRECTORY_STATUS";
static char __pyx_k__FILE_UNAVAILABLE[] = "FILE_UNAVAILABLE";
static char __pyx_k__INVALID_RESPONSE[] = "INVALID_RESPONSE";
static char __pyx_k__MULTIPLE_CHOICES[] = "MULTIPLE_CHOICES";
static char __pyx_k__NEED_INFORMATION[] = "NEED_INFORMATION";
static char __pyx_k__TRANSFER_ABORTED[] = "TRANSFER_ABORTED";
static char __pyx_k__CONNECTION_CLOSED[] = "CONNECTION_CLOSED";
static char __pyx_k__CONNECTION_FAILED[] = "CONNECTION_FAILED";
static char __pyx_k__MAX_DATAGRAM_SIZE[] = "MAX_DATAGRAM_SIZE";
static char __pyx_k__MOVED_PERMANENTLY[] = "MOVED_PERMANENTLY";
static char __pyx_k__MOVED_TEMPORARILY[] = "MOVED_TEMPORARILY";
static char __pyx_k__NOT_ENOUGH_MEMORY[] = "NOT_ENOUGH_MEMORY";
static char __pyx_k__PAGE_TYPE_UNKNOWN[] = "PAGE_TYPE_UNKNOWN";
static char __pyx_k__POINTLESS_COMMAND[] = "POINTLESS_COMMAND";
static char __pyx_k__get_local_address[] = "get_local_address";
static char __pyx_k__CLOSING_CONNECTION[] = "CLOSING_CONNECTION";
static char __pyx_k__PARAMETERS_UNKNOWN[] = "PARAMETERS_UNKNOWN";
static char __pyx_k__SERVICE_READY_SOON[] = "SERVICE_READY_SOON";
static char __pyx_k__SocketDisconnected[] = "SocketDisconnected";
static char __pyx_k__get_public_address[] = "get_public_address";
static char __pyx_k__FILE_ACTION_ABORTED[] = "FILE_ACTION_ABORTED";
static char __pyx_k__NotImplementedError[] = "NotImplementedError";
static char __pyx_k__SERVICE_UNAVAILABLE[] = "SERVICE_UNAVAILABLE";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_10;
static PyObject *__pyx_kp_s_11;
static PyObject *__pyx_kp_s_12;
static PyObject *__pyx_kp_b_15;
static PyObject *__pyx_kp_s_15;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_kp_b_31;
static PyObject *__pyx_kp_s_33;
static PyObject *__pyx_n_s_35;
static PyObject *__pyx_n_s_36;
static PyObject *__pyx_n_s_37;
static PyObject *__pyx_n_s_38;
static PyObject *__pyx_n_s_39;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_n_s_40;
static PyObject *__pyx_n_s_41;
static PyObject *__pyx_n_s_42;
static PyObject *__pyx_n_s_43;
static PyObject *__pyx_n_s_44;
static PyObject *__pyx_n_s_45;
static PyObject *__pyx_n_s_46;
static PyObject *__pyx_n_s_47;
static PyObject *__pyx_n_s_48;
static PyObject *__pyx_n_s_49;
static PyObject *__pyx_n_s_50;
static PyObject *__pyx_n_s_51;
static PyObject *__pyx_n_s_52;
static PyObject *__pyx_n_s_53;
static PyObject *__pyx_kp_s_6;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_kp_s_9;
static PyObject *__pyx_n_s__ACCEPTED;
static PyObject *__pyx_n_s__ANY_PORT;
static PyObject *__pyx_n_s__ASCII;
static PyObject *__pyx_n_s__BAD_GATEWAY;
static PyObject *__pyx_n_s__BAD_REQUEST;
static PyObject *__pyx_n_s__BINARY;
static PyObject *__pyx_n_s__BROADCAST;
static PyObject *__pyx_n_s__CLOSING_CONNECTION;
static PyObject *__pyx_n_s__COMMAND_UNKNOWN;
static PyObject *__pyx_n_s__CONNECTION_CLOSED;
static PyObject *__pyx_n_s__CONNECTION_FAILED;
static PyObject *__pyx_n_s__CREATED;
static PyObject *__pyx_n_s__DIRECTORY_OK;
static PyObject *__pyx_n_s__DIRECTORY_STATUS;
static PyObject *__pyx_n_s__DISCONNECTED;
static PyObject *__pyx_n_s__DONE;
static PyObject *__pyx_n_s__EBCDIC;
static PyObject *__pyx_n_s__ERROR;
static PyObject *__pyx_n_s__Exception;
static PyObject *__pyx_n_s__FILE_ACTION_ABORTED;
static PyObject *__pyx_n_s__FILE_ACTION_OK;
static PyObject *__pyx_n_s__FILE_STATUS;
static PyObject *__pyx_n_s__FILE_UNAVAILABLE;
static PyObject *__pyx_n_s__FORBIDDEN;
static PyObject *__pyx_n_s__GATEWAY_TIMEOUT;
static PyObject *__pyx_n_s__GET;
static PyObject *__pyx_n_s__HEAD;
static PyObject *__pyx_n_s__HELP_MESSAGE;
static PyObject *__pyx_n_s__INVALID_FILE;
static PyObject *__pyx_n_s__INVALID_RESPONSE;
static PyObject *__pyx_n_s__LOCAL_ERROR;
static PyObject *__pyx_n_s__LOCAL_HOST;
static PyObject *__pyx_n_s__LOGGED_IN;
static PyObject *__pyx_n_s__MAX_DATAGRAM_SIZE;
static PyObject *__pyx_n_s__MOVED_PERMANENTLY;
static PyObject *__pyx_n_s__MOVED_TEMPORARILY;
static PyObject *__pyx_n_s__MULTIPLE_CHOICES;
static PyObject *__pyx_n_s__NEED_INFORMATION;
static PyObject *__pyx_n_s__NEED_PASSWORD;
static PyObject *__pyx_n_s__NONE;
static PyObject *__pyx_n_s__NOT_ENOUGH_MEMORY;
static PyObject *__pyx_n_s__NOT_FOUND;
static PyObject *__pyx_n_s__NOT_IMPLEMENTED;
static PyObject *__pyx_n_s__NOT_LOGGED_IN;
static PyObject *__pyx_n_s__NOT_MODIFIED;
static PyObject *__pyx_n_s__NOT_READY;
static PyObject *__pyx_n_s__NO_CONTENT;
static PyObject *__pyx_n_s__NotImplementedError;
static PyObject *__pyx_n_s__OK;
static PyObject *__pyx_n_s__PAGE_TYPE_UNKNOWN;
static PyObject *__pyx_n_s__PARAMETERS_UNKNOWN;
static PyObject *__pyx_n_s__PARTIAL_CONTENT;
static PyObject *__pyx_n_s__POINTLESS_COMMAND;
static PyObject *__pyx_n_s__POST;
static PyObject *__pyx_n_s__RESET_CONTENT;
static PyObject *__pyx_n_s__SERVICE_READY;
static PyObject *__pyx_n_s__SERVICE_READY_SOON;
static PyObject *__pyx_n_s__SERVICE_UNAVAILABLE;
static PyObject *__pyx_n_s__SYSTEM_STATUS;
static PyObject *__pyx_n_s__SYSTEM_TYPE;
static PyObject *__pyx_n_s__SocketDisconnected;
static PyObject *__pyx_n_s__SocketError;
static PyObject *__pyx_n_s__SocketException;
static PyObject *__pyx_n_s__SocketNotReady;
static PyObject *__pyx_n_s__TRANSFER_ABORTED;
static PyObject *__pyx_n_s__UNAUTHORIZED;
static PyObject *__pyx_n_s____class__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s__b1;
static PyObject *__pyx_n_s__b2;
static PyObject *__pyx_n_s__b3;
static PyObject *__pyx_n_s__b4;
static PyObject *__pyx_n_s__body;
static PyObject *__pyx_n_s__data;
static PyObject *__pyx_n_s__decode;
static PyObject *__pyx_n_s__directory;
static PyObject *__pyx_n_s__encode;
static PyObject *__pyx_n_s__filename;
static PyObject *__pyx_n_s__format;
static PyObject *__pyx_n_s__from_bytes;
static PyObject *__pyx_n_s__from_integer;
static PyObject *__pyx_n_s__from_string;
static PyObject *__pyx_n_s__get_local_address;
static PyObject *__pyx_n_s__get_public_address;
static PyObject *__pyx_n_s__host;
static PyObject *__pyx_n_s__localfile;
static PyObject *__pyx_n_s__localpath;
static PyObject *__pyx_n_s__message;
static PyObject *__pyx_n_s__method;
static PyObject *__pyx_n_s__mode;
static PyObject *__pyx_n_s__name;
static PyObject *__pyx_n_s__newname;
static PyObject *__pyx_n_s__port;
static PyObject *__pyx_n_s__remote_address;
static PyObject *__pyx_n_s__remote_port;
static PyObject *__pyx_n_s__remotefile;
static PyObject *__pyx_n_s__remotepath;
static PyObject *__pyx_n_s__request;
static PyObject *__pyx_n_s__server;
static PyObject *__pyx_n_s__status;
static PyObject *__pyx_n_s__string;
static PyObject *__pyx_n_s__timeout;
static PyObject *__pyx_n_s__uri;
static enum sf::Ftp::TransferMode __pyx_k_25;
static enum sf::Ftp::TransferMode __pyx_k_28;
static enum sf::Http::Request::Method __pyx_k_32;
static PyObject *__pyx_k_tuple_3;
static PyObject *__pyx_k_tuple_5;
static PyObject *__pyx_k_tuple_7;
static PyObject *__pyx_k_tuple_13;
static PyObject *__pyx_k_tuple_14;
static PyObject *__pyx_k_tuple_16;
static PyObject *__pyx_k_tuple_17;
static PyObject *__pyx_k_tuple_18;
static PyObject *__pyx_k_tuple_19;
static PyObject *__pyx_k_tuple_20;
static PyObject *__pyx_k_tuple_21;
static PyObject *__pyx_k_tuple_22;
static PyObject *__pyx_k_tuple_23;
static PyObject *__pyx_k_tuple_24;
static PyObject *__pyx_k_tuple_26;
static PyObject *__pyx_k_tuple_27;
static PyObject *__pyx_k_tuple_29;
static PyObject *__pyx_k_tuple_30;
static PyObject *__pyx_k_tuple_34;

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_9IpAddress_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_9IpAddress_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress___init__(((struct __pyx_obj_4sfml_7network_7network_IpAddress *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":30
 * 	BROADCAST = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.Broadcast)
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.IpAddress()
 * 
 */

static int __pyx_pf_4sfml_7network_7network_9IpAddress___init__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":31
 * 
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.IpAddress()             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->p_this = new sf::IpAddress();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_9IpAddress_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_9IpAddress_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_9IpAddress_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_IpAddress *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":33
 * 		self.p_this = new dnetwork.IpAddress()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_9IpAddress_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":34
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def __repr__(self):
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_4__repr__(((struct __pyx_obj_4sfml_7network_7network_IpAddress *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":36
 * 		del self.p_this
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return "sf.IpAddress({0})".format(self)
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_4__repr__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "sfml/network/network.pyx":37
 * 
 * 	def __repr__(self):
 * 		return "sf.IpAddress({0})".format(self)             # <<<<<<<<<<<<<<
 * 
 * 	def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_7__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_7__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_6__str__(((struct __pyx_obj_4sfml_7network_7network_IpAddress *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":39
 * 		return "sf.IpAddress({0})".format(self)
 * 
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		return self.string.decode('utf-8')
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_6__str__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "sfml/network/network.pyx":40
 * 
 * 	def __str__(self):
 * 		return self.string.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 * 	@classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__string); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__decode); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_9from_string(PyObject *__pyx_v_self, PyObject *__pyx_v__string); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_9from_string(PyObject *__pyx_v_self, PyObject *__pyx_v__string) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_string (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_8from_string(((PyObject*)__pyx_v_self), ((PyObject *)__pyx_v__string));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":43
 * 
 * 	@classmethod
 * 	def from_string(self, _string):             # <<<<<<<<<<<<<<
 * 		cdef string encoded_string
 * 		encoded_string_temporary = _string.encode('UTF-8')
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_8from_string(CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v__string) {
  std::string __pyx_v_encoded_string;
  PyObject *__pyx_v_encoded_string_temporary = NULL;
  sf::IpAddress *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_string", 0);

  /* "sfml/network/network.pyx":45
 * 	def from_string(self, _string):
 * 		cdef string encoded_string
 * 		encoded_string_temporary = _string.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_string = string(<char*>encoded_string_temporary)
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v__string, __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_5), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_string_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":46
 * 		cdef string encoded_string
 * 		encoded_string_temporary = _string.encode('UTF-8')
 * 		encoded_string = string(<char*>encoded_string_temporary)             # <<<<<<<<<<<<<<
 * 
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(encoded_string)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_string_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_string = std::string(((char *)__pyx_t_3));

  /* "sfml/network/network.pyx":48
 * 		encoded_string = string(<char*>encoded_string_temporary)
 * 
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(encoded_string)             # <<<<<<<<<<<<<<
 * 		return wrap_ipaddress(p)
 * 
 */
  __pyx_v_p = new sf::IpAddress(__pyx_v_encoded_string);

  /* "sfml/network/network.pyx":49
 * 
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(encoded_string)
 * 		return wrap_ipaddress(p)             # <<<<<<<<<<<<<<
 * 
 * 	@classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(__pyx_v_p); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 49; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.from_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_string_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_11from_integer(PyObject *__pyx_v_self, PyObject *__pyx_arg_address); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_11from_integer(PyObject *__pyx_v_self, PyObject *__pyx_arg_address) {
  sf::Uint32 __pyx_v_address;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_integer (wrapper)", 0);
  assert(__pyx_arg_address); {
    __pyx_v_address = __Pyx_PyInt_from_py_sf__Uint32(__pyx_arg_address); if (unlikely((__pyx_v_address == (sf::Uint32)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.IpAddress.from_integer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_10from_integer(((PyObject*)__pyx_v_self), ((sf::Uint32)__pyx_v_address));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":52
 * 
 * 	@classmethod
 * 	def from_integer(self, Uint32 address):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(address)
 * 		return wrap_ipaddress(p)
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_10from_integer(CYTHON_UNUSED PyObject *__pyx_v_self, sf::Uint32 __pyx_v_address) {
  sf::IpAddress *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_integer", 0);

  /* "sfml/network/network.pyx":53
 * 	@classmethod
 * 	def from_integer(self, Uint32 address):
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(address)             # <<<<<<<<<<<<<<
 * 		return wrap_ipaddress(p)
 * 
 */
  __pyx_v_p = new sf::IpAddress(__pyx_v_address);

  /* "sfml/network/network.pyx":54
 * 	def from_integer(self, Uint32 address):
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(address)
 * 		return wrap_ipaddress(p)             # <<<<<<<<<<<<<<
 * 
 * 	@classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 54; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.from_integer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_13from_bytes(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_13from_bytes(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  sf::Uint8 __pyx_v_b1;
  sf::Uint8 __pyx_v_b2;
  sf::Uint8 __pyx_v_b3;
  sf::Uint8 __pyx_v_b4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__b1,&__pyx_n_s__b2,&__pyx_n_s__b3,&__pyx_n_s__b4,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_bytes (wrapper)", 0);
  {
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b1);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b2);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("from_bytes", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b3);
        if (likely(values[2])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("from_bytes", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b4);
        if (likely(values[3])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("from_bytes", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "from_bytes") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_b1 = __Pyx_PyInt_from_py_sf__Uint8(values[0]); if (unlikely((__pyx_v_b1 == (sf::Uint8)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b2 = __Pyx_PyInt_from_py_sf__Uint8(values[1]); if (unlikely((__pyx_v_b2 == (sf::Uint8)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b3 = __Pyx_PyInt_from_py_sf__Uint8(values[2]); if (unlikely((__pyx_v_b3 == (sf::Uint8)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b4 = __Pyx_PyInt_from_py_sf__Uint8(values[3]); if (unlikely((__pyx_v_b4 == (sf::Uint8)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_bytes", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.IpAddress.from_bytes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_12from_bytes(((PyObject*)__pyx_v_self), __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_b4);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":57
 * 
 * 	@classmethod
 * 	def from_bytes(self, Uint8 b1, Uint8 b2, Uint8 b3, Uint8 b4):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(b1, b2, b3, b4)
 * 		return wrap_ipaddress(p)
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_12from_bytes(CYTHON_UNUSED PyObject *__pyx_v_self, sf::Uint8 __pyx_v_b1, sf::Uint8 __pyx_v_b2, sf::Uint8 __pyx_v_b3, sf::Uint8 __pyx_v_b4) {
  sf::IpAddress *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_bytes", 0);

  /* "sfml/network/network.pyx":58
 * 	@classmethod
 * 	def from_bytes(self, Uint8 b1, Uint8 b2, Uint8 b3, Uint8 b4):
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(b1, b2, b3, b4)             # <<<<<<<<<<<<<<
 * 		return wrap_ipaddress(p)
 * 
 */
  __pyx_v_p = new sf::IpAddress(__pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_b4);

  /* "sfml/network/network.pyx":59
 * 	def from_bytes(self, Uint8 b1, Uint8 b2, Uint8 b3, Uint8 b4):
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(b1, b2, b3, b4)
 * 		return wrap_ipaddress(p)             # <<<<<<<<<<<<<<
 * 
 * 	property string:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.from_bytes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_6string_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_6string_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_6string___get__(((struct __pyx_obj_4sfml_7network_7network_IpAddress *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":62
 * 
 * 	property string:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.toString().c_str()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_6string___get__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":63
 * 	property string:
 * 		def __get__(self):
 * 			return self.p_this.toString().c_str()             # <<<<<<<<<<<<<<
 * 
 * 	property integer:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_self->p_this->toString().c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.string.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_7integer_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_7integer_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_7integer___get__(((struct __pyx_obj_4sfml_7network_7network_IpAddress *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":66
 * 
 * 	property integer:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.toInteger()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_7integer___get__(struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":67
 * 	property integer:
 * 		def __get__(self):
 * 			return self.p_this.toInteger()             # <<<<<<<<<<<<<<
 * 
 * 	@classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_to_py_sf__Uint32(__pyx_v_self->p_this->toInteger()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.integer.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_15get_local_address(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_15get_local_address(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_local_address (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_14get_local_address(((PyObject*)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":70
 * 
 * 	@classmethod
 * 	def get_local_address(self):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()
 * 		p[0] = dnetwork.ipaddress.getLocalAddress()
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_14get_local_address(CYTHON_UNUSED PyObject *__pyx_v_self) {
  sf::IpAddress *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_local_address", 0);

  /* "sfml/network/network.pyx":71
 * 	@classmethod
 * 	def get_local_address(self):
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()             # <<<<<<<<<<<<<<
 * 		p[0] = dnetwork.ipaddress.getLocalAddress()
 * 		return wrap_ipaddress(p)
 */
  __pyx_v_p = new sf::IpAddress();

  /* "sfml/network/network.pyx":72
 * 	def get_local_address(self):
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()
 * 		p[0] = dnetwork.ipaddress.getLocalAddress()             # <<<<<<<<<<<<<<
 * 		return wrap_ipaddress(p)
 * 
 */
  (__pyx_v_p[0]) = sf::IpAddress::getLocalAddress();

  /* "sfml/network/network.pyx":73
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()
 * 		p[0] = dnetwork.ipaddress.getLocalAddress()
 * 		return wrap_ipaddress(p)             # <<<<<<<<<<<<<<
 * 
 * 	@classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.get_local_address", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_17get_public_address(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9IpAddress_17get_public_address(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  sf::Uint32 __pyx_v_timeout;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__timeout,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_public_address (wrapper)", 0);
  {
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__timeout);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_public_address") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[0]) {
      } else {
        __pyx_v_timeout = ((sf::Uint32)0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_timeout = __Pyx_PyInt_from_py_sf__Uint32(values[0]); if (unlikely((__pyx_v_timeout == (sf::Uint32)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_timeout = ((sf::Uint32)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_public_address", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.IpAddress.get_public_address", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9IpAddress_16get_public_address(((PyObject*)__pyx_v_self), __pyx_v_timeout);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":76
 * 
 * 	@classmethod
 * 	def get_public_address(self, Uint32 timeout=0):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()
 * 		p[0] = dnetwork.ipaddress.getPublicAddress(dsystem.milliseconds(timeout))
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9IpAddress_16get_public_address(CYTHON_UNUSED PyObject *__pyx_v_self, sf::Uint32 __pyx_v_timeout) {
  sf::IpAddress *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_public_address", 0);

  /* "sfml/network/network.pyx":77
 * 	@classmethod
 * 	def get_public_address(self, Uint32 timeout=0):
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()             # <<<<<<<<<<<<<<
 * 		p[0] = dnetwork.ipaddress.getPublicAddress(dsystem.milliseconds(timeout))
 * 		return wrap_ipaddress(p)
 */
  __pyx_v_p = new sf::IpAddress();

  /* "sfml/network/network.pyx":78
 * 	def get_public_address(self, Uint32 timeout=0):
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()
 * 		p[0] = dnetwork.ipaddress.getPublicAddress(dsystem.milliseconds(timeout))             # <<<<<<<<<<<<<<
 * 		return wrap_ipaddress(p)
 * 
 */
  (__pyx_v_p[0]) = sf::IpAddress::getPublicAddress(sf::milliseconds(__pyx_v_timeout));

  /* "sfml/network/network.pyx":79
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()
 * 		p[0] = dnetwork.ipaddress.getPublicAddress(dsystem.milliseconds(timeout))
 * 		return wrap_ipaddress(p)             # <<<<<<<<<<<<<<
 * 
 * cdef wrap_ipaddress(dnetwork.IpAddress* p):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.IpAddress.get_public_address", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":81
 * 		return wrap_ipaddress(p)
 * 
 * cdef wrap_ipaddress(dnetwork.IpAddress* p):             # <<<<<<<<<<<<<<
 * 	cdef IpAddress r = IpAddress.__new__(IpAddress)
 * 	r.p_this = p
 */

static PyObject *__pyx_f_4sfml_7network_7network_wrap_ipaddress(sf::IpAddress *__pyx_v_p) {
  struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_r = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap_ipaddress", 0);

  /* "sfml/network/network.pyx":82
 * 
 * cdef wrap_ipaddress(dnetwork.IpAddress* p):
 * 	cdef IpAddress r = IpAddress.__new__(IpAddress)             # <<<<<<<<<<<<<<
 * 	r.p_this = p
 * 	return r
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_4sfml_7network_7network_IpAddress)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_4sfml_7network_7network_IpAddress)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_r = ((struct __pyx_obj_4sfml_7network_7network_IpAddress *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":83
 * cdef wrap_ipaddress(dnetwork.IpAddress* p):
 * 	cdef IpAddress r = IpAddress.__new__(IpAddress)
 * 	r.p_this = p             # <<<<<<<<<<<<<<
 * 	return r
 * 
 */
  __pyx_v_r->p_this = __pyx_v_p;

  /* "sfml/network/network.pyx":84
 * 	cdef IpAddress r = IpAddress.__new__(IpAddress)
 * 	r.p_this = p
 * 	return r             # <<<<<<<<<<<<<<
 * 
 * cdef class Socket:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_r));
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.wrap_ipaddress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_6Socket_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_6Socket_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_6Socket___init__(((struct __pyx_obj_4sfml_7network_7network_Socket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":96
 * 	cdef dnetwork.Socket *p_socket
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		if self.__class__ == Socket:
 * 			raise NotImplementedError('Socket is abstact')
 */

static int __pyx_pf_4sfml_7network_7network_6Socket___init__(struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":97
 * 
 * 	def __init__(self):
 * 		if self.__class__ == Socket:             # <<<<<<<<<<<<<<
 * 			raise NotImplementedError('Socket is abstact')
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s____class__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, ((PyObject *)((PyObject*)__pyx_ptype_4sfml_7network_7network_Socket)), Py_EQ); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "sfml/network/network.pyx":98
 * 	def __init__(self):
 * 		if self.__class__ == Socket:
 * 			raise NotImplementedError('Socket is abstact')             # <<<<<<<<<<<<<<
 * 
 * 	property blocking:
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_7), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Socket.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_6Socket_8blocking_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_6Socket_8blocking_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_6Socket_8blocking___get__(((struct __pyx_obj_4sfml_7network_7network_Socket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":101
 * 
 * 	property blocking:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_socket.isBlocking()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_6Socket_8blocking___get__(struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":102
 * 	property blocking:
 * 		def __get__(self):
 * 			return self.p_socket.isBlocking()             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, bint blocking):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->p_socket->isBlocking()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.Socket.blocking.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_6Socket_8blocking_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_blocking); /*proto*/
static int __pyx_pw_4sfml_7network_7network_6Socket_8blocking_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_blocking) {
  int __pyx_v_blocking;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_blocking); {
    __pyx_v_blocking = __Pyx_PyObject_IsTrue(__pyx_arg_blocking); if (unlikely((__pyx_v_blocking == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Socket.blocking.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_6Socket_8blocking_2__set__(((struct __pyx_obj_4sfml_7network_7network_Socket *)__pyx_v_self), ((int)__pyx_v_blocking));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":104
 * 			return self.p_socket.isBlocking()
 * 
 * 		def __set__(self, bint blocking):             # <<<<<<<<<<<<<<
 * 			self.p_socket.setBlocking(blocking)
 * 
 */

static int __pyx_pf_4sfml_7network_7network_6Socket_8blocking_2__set__(struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_self, int __pyx_v_blocking) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "sfml/network/network.pyx":105
 * 
 * 		def __set__(self, bint blocking):
 * 			self.p_socket.setBlocking(blocking)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->p_socket->setBlocking(__pyx_v_blocking);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_11TcpListener_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_11TcpListener_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_11TcpListener___init__(((struct __pyx_obj_4sfml_7network_7network_TcpListener *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":117
 * 	cdef dnetwork.TcpListener *p_this
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.TcpListener()
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 */

static int __pyx_pf_4sfml_7network_7network_11TcpListener___init__(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":118
 * 
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.TcpListener()             # <<<<<<<<<<<<<<
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 * 
 */
  __pyx_v_self->p_this = new sf::TcpListener();

  /* "sfml/network/network.pyx":119
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.TcpListener()
 * 		self.p_socket = <dnetwork.Socket*>self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.p_socket = ((sf::Socket *)__pyx_v_self->p_this);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_11TcpListener_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_11TcpListener_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_11TcpListener_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_TcpListener *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":121
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_11TcpListener_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":122
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def __repr__(self):
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11TcpListener_4__repr__(((struct __pyx_obj_4sfml_7network_7network_TcpListener *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":124
 * 		del self.p_this
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return "sf.TcpListener({0})".format(self)
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_4__repr__(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "sfml/network/network.pyx":125
 * 
 * 	def __repr__(self):
 * 		return "sf.TcpListener({0})".format(self)             # <<<<<<<<<<<<<<
 * 
 * 	def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_8), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.TcpListener.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_7__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_7__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11TcpListener_6__str__(((struct __pyx_obj_4sfml_7network_7network_TcpListener *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":127
 * 		return "sf.TcpListener({0})".format(self)
 * 
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		return str()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_6__str__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "sfml/network/network.pyx":128
 * 
 * 	def __str__(self):
 * 		return str()             # <<<<<<<<<<<<<<
 * 
 * 	property local_port:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.TcpListener.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_10local_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_10local_port_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11TcpListener_10local_port___get__(((struct __pyx_obj_4sfml_7network_7network_TcpListener *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":131
 * 
 * 	property local_port:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.getLocalPort()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_10local_port___get__(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":132
 * 	property local_port:
 * 		def __get__(self):
 * 			return self.p_this.getLocalPort()             # <<<<<<<<<<<<<<
 * 
 * 	def listen(self, unsigned short port):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->p_this->getLocalPort()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.TcpListener.local_port.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_9listen(PyObject *__pyx_v_self, PyObject *__pyx_arg_port); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_9listen(PyObject *__pyx_v_self, PyObject *__pyx_arg_port) {
  unsigned short __pyx_v_port;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("listen (wrapper)", 0);
  assert(__pyx_arg_port); {
    __pyx_v_port = __Pyx_PyInt_AsUnsignedShort(__pyx_arg_port); if (unlikely((__pyx_v_port == (unsigned short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.TcpListener.listen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_11TcpListener_8listen(((struct __pyx_obj_4sfml_7network_7network_TcpListener *)__pyx_v_self), ((unsigned short)__pyx_v_port));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":134
 * 			return self.p_this.getLocalPort()
 * 
 * 	def listen(self, unsigned short port):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.socket.Status status = self.p_this.listen(port)
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_8listen(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self, unsigned short __pyx_v_port) {
  enum sf::Socket::Status __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("listen", 0);

  /* "sfml/network/network.pyx":135
 * 
 * 	def listen(self, unsigned short port):
 * 		cdef dnetwork.socket.Status status = self.p_this.listen(port)             # <<<<<<<<<<<<<<
 * 
 * 		if status is not dnetwork.socket.Done:
 */
  __pyx_v_status = __pyx_v_self->p_this->listen(__pyx_v_port);

  /* "sfml/network/network.pyx":137
 * 		cdef dnetwork.socket.Status status = self.p_this.listen(port)
 * 
 * 		if status is not dnetwork.socket.Done:             # <<<<<<<<<<<<<<
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 */
  __pyx_t_1 = (__pyx_v_status != sf::Socket::Done);
  if (__pyx_t_1) {

    /* "sfml/network/network.pyx":138
 * 
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:             # <<<<<<<<<<<<<<
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::NotReady);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":139
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketNotReady); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":140
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:             # <<<<<<<<<<<<<<
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::Disconnected);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":141
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()
 */
      __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketDisconnected); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":142
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:             # <<<<<<<<<<<<<<
 * 				raise SocketError()
 * 
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::Error);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":143
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()             # <<<<<<<<<<<<<<
 * 
 * 	def close(self):
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.TcpListener.listen", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_11close(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_11close(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("close (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11TcpListener_10close(((struct __pyx_obj_4sfml_7network_7network_TcpListener *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":145
 * 				raise SocketError()
 * 
 * 	def close(self):             # <<<<<<<<<<<<<<
 * 		self.p_this.close()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_10close(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("close", 0);

  /* "sfml/network/network.pyx":146
 * 
 * 	def close(self):
 * 		self.p_this.close()             # <<<<<<<<<<<<<<
 * 
 * 	def accept(self):
 */
  __pyx_v_self->p_this->close();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_13accept(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11TcpListener_13accept(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("accept (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11TcpListener_12accept(((struct __pyx_obj_4sfml_7network_7network_TcpListener *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":148
 * 		self.p_this.close()
 * 
 * 	def accept(self):             # <<<<<<<<<<<<<<
 * 		cdef TcpSocket socket = TcpSocket()
 * 		cdef dnetwork.socket.Status status = self.p_this.accept(socket.p_this[0])
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11TcpListener_12accept(struct __pyx_obj_4sfml_7network_7network_TcpListener *__pyx_v_self) {
  struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_socket = 0;
  enum sf::Socket::Status __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("accept", 0);

  /* "sfml/network/network.pyx":149
 * 
 * 	def accept(self):
 * 		cdef TcpSocket socket = TcpSocket()             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.socket.Status status = self.p_this.accept(socket.p_this[0])
 * 
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_4sfml_7network_7network_TcpSocket)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_socket = ((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":150
 * 	def accept(self):
 * 		cdef TcpSocket socket = TcpSocket()
 * 		cdef dnetwork.socket.Status status = self.p_this.accept(socket.p_this[0])             # <<<<<<<<<<<<<<
 * 
 * 		if status is not dnetwork.socket.Done:
 */
  __pyx_v_status = __pyx_v_self->p_this->accept((__pyx_v_socket->p_this[0]));

  /* "sfml/network/network.pyx":152
 * 		cdef dnetwork.socket.Status status = self.p_this.accept(socket.p_this[0])
 * 
 * 		if status is not dnetwork.socket.Done:             # <<<<<<<<<<<<<<
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 */
  __pyx_t_2 = (__pyx_v_status != sf::Socket::Done);
  if (__pyx_t_2) {

    /* "sfml/network/network.pyx":153
 * 
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:             # <<<<<<<<<<<<<<
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 */
    __pyx_t_2 = (__pyx_v_status == sf::Socket::NotReady);
    if (__pyx_t_2) {

      /* "sfml/network/network.pyx":154
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 */
      __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketNotReady); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":155
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:             # <<<<<<<<<<<<<<
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 */
    __pyx_t_2 = (__pyx_v_status == sf::Socket::Disconnected);
    if (__pyx_t_2) {

      /* "sfml/network/network.pyx":156
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()
 */
      __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketDisconnected); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":157
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:             # <<<<<<<<<<<<<<
 * 				raise SocketError()
 * 
 */
    __pyx_t_2 = (__pyx_v_status == sf::Socket::Error);
    if (__pyx_t_2) {

      /* "sfml/network/network.pyx":158
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()             # <<<<<<<<<<<<<<
 * 
 * 		return socket
 */
      __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "sfml/network/network.pyx":160
 * 				raise SocketError()
 * 
 * 		return socket             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_socket));
  __pyx_r = ((PyObject *)__pyx_v_socket);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.TcpListener.accept", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_socket);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_9TcpSocket_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_9TcpSocket_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket___init__(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":166
 * 	cdef dnetwork.TcpSocket *p_this
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.TcpSocket()
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 */

static int __pyx_pf_4sfml_7network_7network_9TcpSocket___init__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":167
 * 
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.TcpSocket()             # <<<<<<<<<<<<<<
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 * 
 */
  __pyx_v_self->p_this = new sf::TcpSocket();

  /* "sfml/network/network.pyx":168
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.TcpSocket()
 * 		self.p_socket = <dnetwork.Socket*>self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.p_socket = ((sf::Socket *)__pyx_v_self->p_this);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_9TcpSocket_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_9TcpSocket_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_9TcpSocket_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":170
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_9TcpSocket_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":171
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def __repr__(self):
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_5__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_4__repr__(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":173
 * 		del self.p_this
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return "TcpSocket({0})".format(self)
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_4__repr__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "sfml/network/network.pyx":174
 * 
 * 	def __repr__(self):
 * 		return "TcpSocket({0})".format(self)             # <<<<<<<<<<<<<<
 * 
 * 	def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_9), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_7__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_7__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_6__str__(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":176
 * 		return "TcpSocket({0})".format(self)
 * 
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		return str()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_6__str__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "sfml/network/network.pyx":177
 * 
 * 	def __str__(self):
 * 		return str()             # <<<<<<<<<<<<<<
 * 
 * 	property local_port:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_10local_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_10local_port_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_10local_port___get__(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":180
 * 
 * 	property local_port:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.getLocalPort()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_10local_port___get__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":181
 * 	property local_port:
 * 		def __get__(self):
 * 			return self.p_this.getLocalPort()             # <<<<<<<<<<<<<<
 * 
 * 	property remote_address:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->p_this->getLocalPort()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.local_port.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_14remote_address_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_14remote_address_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_14remote_address___get__(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":184
 * 
 * 	property remote_address:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			cdef dnetwork.IpAddress *p = new dnetwork.IpAddress()
 * 			p[0] = self.p_this.getRemoteAddress()
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_14remote_address___get__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self) {
  sf::IpAddress *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":185
 * 	property remote_address:
 * 		def __get__(self):
 * 			cdef dnetwork.IpAddress *p = new dnetwork.IpAddress()             # <<<<<<<<<<<<<<
 * 			p[0] = self.p_this.getRemoteAddress()
 * 			return wrap_ipaddress(p)
 */
  __pyx_v_p = new sf::IpAddress();

  /* "sfml/network/network.pyx":186
 * 		def __get__(self):
 * 			cdef dnetwork.IpAddress *p = new dnetwork.IpAddress()
 * 			p[0] = self.p_this.getRemoteAddress()             # <<<<<<<<<<<<<<
 * 			return wrap_ipaddress(p)
 * 
 */
  (__pyx_v_p[0]) = __pyx_v_self->p_this->getRemoteAddress();

  /* "sfml/network/network.pyx":187
 * 			cdef dnetwork.IpAddress *p = new dnetwork.IpAddress()
 * 			p[0] = self.p_this.getRemoteAddress()
 * 			return wrap_ipaddress(p)             # <<<<<<<<<<<<<<
 * 
 * 	property remote_port:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.remote_address.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_11remote_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_11remote_port_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_11remote_port___get__(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":190
 * 
 * 	property remote_port:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.getRemotePort()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_11remote_port___get__(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":191
 * 	property remote_port:
 * 		def __get__(self):
 * 			return self.p_this.getRemotePort()             # <<<<<<<<<<<<<<
 * 
 * 	def connect(self, IpAddress remote_address, unsigned short remote_port, Uint32 timeout=0):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->p_this->getRemotePort()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.remote_port.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_9connect(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_9connect(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_remote_address = 0;
  unsigned short __pyx_v_remote_port;
  sf::Uint32 __pyx_v_timeout;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__remote_address,&__pyx_n_s__remote_port,&__pyx_n_s__timeout,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("connect (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__remote_address);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__remote_port);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("connect", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__timeout);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "connect") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[2]) {
      } else {
        __pyx_v_timeout = ((sf::Uint32)0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_remote_address = ((struct __pyx_obj_4sfml_7network_7network_IpAddress *)values[0]);
    __pyx_v_remote_port = __Pyx_PyInt_AsUnsignedShort(values[1]); if (unlikely((__pyx_v_remote_port == (unsigned short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[2]) {
      __pyx_v_timeout = __Pyx_PyInt_from_py_sf__Uint32(values[2]); if (unlikely((__pyx_v_timeout == (sf::Uint32)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_timeout = ((sf::Uint32)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("connect", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.connect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_remote_address), __pyx_ptype_4sfml_7network_7network_IpAddress, 1, "remote_address", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_8connect(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self), __pyx_v_remote_address, __pyx_v_remote_port, __pyx_v_timeout);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":193
 * 			return self.p_this.getRemotePort()
 * 
 * 	def connect(self, IpAddress remote_address, unsigned short remote_port, Uint32 timeout=0):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.socket.Status status = self.p_this.connect(remote_address.p_this[0], remote_port, dsystem.milliseconds(timeout))
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_8connect(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_remote_address, unsigned short __pyx_v_remote_port, sf::Uint32 __pyx_v_timeout) {
  enum sf::Socket::Status __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("connect", 0);

  /* "sfml/network/network.pyx":194
 * 
 * 	def connect(self, IpAddress remote_address, unsigned short remote_port, Uint32 timeout=0):
 * 		cdef dnetwork.socket.Status status = self.p_this.connect(remote_address.p_this[0], remote_port, dsystem.milliseconds(timeout))             # <<<<<<<<<<<<<<
 * 
 * 		if status is not dnetwork.socket.Done:
 */
  __pyx_v_status = __pyx_v_self->p_this->connect((__pyx_v_remote_address->p_this[0]), __pyx_v_remote_port, sf::milliseconds(__pyx_v_timeout));

  /* "sfml/network/network.pyx":196
 * 		cdef dnetwork.socket.Status status = self.p_this.connect(remote_address.p_this[0], remote_port, dsystem.milliseconds(timeout))
 * 
 * 		if status is not dnetwork.socket.Done:             # <<<<<<<<<<<<<<
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 */
  __pyx_t_1 = (__pyx_v_status != sf::Socket::Done);
  if (__pyx_t_1) {

    /* "sfml/network/network.pyx":197
 * 
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:             # <<<<<<<<<<<<<<
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::NotReady);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":198
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketNotReady); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":199
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:             # <<<<<<<<<<<<<<
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::Disconnected);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":200
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()
 */
      __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketDisconnected); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":201
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:             # <<<<<<<<<<<<<<
 * 				raise SocketError()
 * 
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::Error);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":202
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()             # <<<<<<<<<<<<<<
 * 
 * 	def disconnect(self):
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.connect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_11disconnect(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_11disconnect(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("disconnect (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_10disconnect(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":204
 * 				raise SocketError()
 * 
 * 	def disconnect(self):             # <<<<<<<<<<<<<<
 * 		self.p_this.disconnect()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_10disconnect(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("disconnect", 0);

  /* "sfml/network/network.pyx":205
 * 
 * 	def disconnect(self):
 * 		self.p_this.disconnect()             # <<<<<<<<<<<<<<
 * 
 * 	def send(self, bytes data):
 */
  __pyx_v_self->p_this->disconnect();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_13send(PyObject *__pyx_v_self, PyObject *__pyx_v_data); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_13send(PyObject *__pyx_v_self, PyObject *__pyx_v_data) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("send (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_data), (&PyBytes_Type), 1, "data", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_12send(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self), ((PyObject*)__pyx_v_data));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":207
 * 		self.p_this.disconnect()
 * 
 * 	def send(self, bytes data):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.socket.Status status = self.p_this.send(<char*>data, len(data))
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_12send(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self, PyObject *__pyx_v_data) {
  enum sf::Socket::Status __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("send", 0);

  /* "sfml/network/network.pyx":208
 * 
 * 	def send(self, bytes data):
 * 		cdef dnetwork.socket.Status status = self.p_this.send(<char*>data, len(data))             # <<<<<<<<<<<<<<
 * 
 * 		if status is not dnetwork.socket.Done:
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_data)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(((PyObject *)__pyx_v_data) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_2 = PyBytes_GET_SIZE(((PyObject *)__pyx_v_data)); 
  __pyx_v_status = __pyx_v_self->p_this->send(((char *)__pyx_t_1), __pyx_t_2);

  /* "sfml/network/network.pyx":210
 * 		cdef dnetwork.socket.Status status = self.p_this.send(<char*>data, len(data))
 * 
 * 		if status is not dnetwork.socket.Done:             # <<<<<<<<<<<<<<
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 */
  __pyx_t_3 = (__pyx_v_status != sf::Socket::Done);
  if (__pyx_t_3) {

    /* "sfml/network/network.pyx":211
 * 
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:             # <<<<<<<<<<<<<<
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 */
    __pyx_t_3 = (__pyx_v_status == sf::Socket::NotReady);
    if (__pyx_t_3) {

      /* "sfml/network/network.pyx":212
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 */
      __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketNotReady); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":213
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:             # <<<<<<<<<<<<<<
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 */
    __pyx_t_3 = (__pyx_v_status == sf::Socket::Disconnected);
    if (__pyx_t_3) {

      /* "sfml/network/network.pyx":214
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()
 */
      __pyx_t_5 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketDisconnected); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":215
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:             # <<<<<<<<<<<<<<
 * 				raise SocketError()
 * 
 */
    __pyx_t_3 = (__pyx_v_status == sf::Socket::Error);
    if (__pyx_t_3) {

      /* "sfml/network/network.pyx":216
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()             # <<<<<<<<<<<<<<
 * 
 * 	def receive(self, size_t size):
 */
      __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketError); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.send", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_15receive(PyObject *__pyx_v_self, PyObject *__pyx_arg_size); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9TcpSocket_15receive(PyObject *__pyx_v_self, PyObject *__pyx_arg_size) {
  size_t __pyx_v_size;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("receive (wrapper)", 0);
  assert(__pyx_arg_size); {
    __pyx_v_size = __Pyx_PyInt_AsSize_t(__pyx_arg_size); if (unlikely((__pyx_v_size == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.receive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9TcpSocket_14receive(((struct __pyx_obj_4sfml_7network_7network_TcpSocket *)__pyx_v_self), ((size_t)__pyx_v_size));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":218
 * 				raise SocketError()
 * 
 * 	def receive(self, size_t size):             # <<<<<<<<<<<<<<
 * 		cdef char* data = <char*>malloc(size * sizeof(char))
 * 		cdef size_t received = 0
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9TcpSocket_14receive(struct __pyx_obj_4sfml_7network_7network_TcpSocket *__pyx_v_self, size_t __pyx_v_size) {
  char *__pyx_v_data;
  size_t __pyx_v_received;
  enum sf::Socket::Status __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("receive", 0);

  /* "sfml/network/network.pyx":219
 * 
 * 	def receive(self, size_t size):
 * 		cdef char* data = <char*>malloc(size * sizeof(char))             # <<<<<<<<<<<<<<
 * 		cdef size_t received = 0
 * 		cdef dnetwork.socket.Status status = self.p_this.receive(data, size, received)
 */
  __pyx_v_data = ((char *)malloc((__pyx_v_size * (sizeof(char)))));

  /* "sfml/network/network.pyx":220
 * 	def receive(self, size_t size):
 * 		cdef char* data = <char*>malloc(size * sizeof(char))
 * 		cdef size_t received = 0             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.socket.Status status = self.p_this.receive(data, size, received)
 * 
 */
  __pyx_v_received = 0;

  /* "sfml/network/network.pyx":221
 * 		cdef char* data = <char*>malloc(size * sizeof(char))
 * 		cdef size_t received = 0
 * 		cdef dnetwork.socket.Status status = self.p_this.receive(data, size, received)             # <<<<<<<<<<<<<<
 * 
 * 		if status is not dnetwork.socket.Done:
 */
  __pyx_v_status = __pyx_v_self->p_this->receive(__pyx_v_data, __pyx_v_size, __pyx_v_received);

  /* "sfml/network/network.pyx":223
 * 		cdef dnetwork.socket.Status status = self.p_this.receive(data, size, received)
 * 
 * 		if status is not dnetwork.socket.Done:             # <<<<<<<<<<<<<<
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 */
  __pyx_t_1 = (__pyx_v_status != sf::Socket::Done);
  if (__pyx_t_1) {

    /* "sfml/network/network.pyx":224
 * 
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:             # <<<<<<<<<<<<<<
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::NotReady);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":225
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketNotReady); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":226
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:             # <<<<<<<<<<<<<<
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::Disconnected);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":227
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()
 */
      __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketDisconnected); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":228
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:             # <<<<<<<<<<<<<<
 * 				raise SocketError()
 * 
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::Error);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":229
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()             # <<<<<<<<<<<<<<
 * 
 * 		return <bytes>(data)[:received]
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "sfml/network/network.pyx":231
 * 				raise SocketError()
 * 
 * 		return <bytes>(data)[:received]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyBytes_FromStringAndSize(__pyx_v_data + 0, __pyx_v_received - 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_t_3)));
  __pyx_r = ((PyObject *)__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.TcpSocket.receive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_9UdpSocket_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_9UdpSocket_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9UdpSocket___init__(((struct __pyx_obj_4sfml_7network_7network_UdpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":239
 * 	MAX_DATAGRAM_SIZE = dnetwork.udpsocket.MaxDatagramSize
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.UdpSocket()
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 */

static int __pyx_pf_4sfml_7network_7network_9UdpSocket___init__(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":240
 * 
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.UdpSocket()             # <<<<<<<<<<<<<<
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 * 
 */
  __pyx_v_self->p_this = new sf::UdpSocket();

  /* "sfml/network/network.pyx":241
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.UdpSocket()
 * 		self.p_socket = <dnetwork.Socket*>self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.p_socket = ((sf::Socket *)__pyx_v_self->p_this);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_9UdpSocket_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_9UdpSocket_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_9UdpSocket_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_UdpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":243
 * 		self.p_socket = <dnetwork.Socket*>self.p_this
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_9UdpSocket_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":244
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	property local_port:
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_10local_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_10local_port_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9UdpSocket_10local_port___get__(((struct __pyx_obj_4sfml_7network_7network_UdpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":247
 * 
 * 	property local_port:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.getLocalPort()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_10local_port___get__(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":248
 * 	property local_port:
 * 		def __get__(self):
 * 			return self.p_this.getLocalPort()             # <<<<<<<<<<<<<<
 * 
 * 	def bind(self, unsigned short port):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->p_this->getLocalPort()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.UdpSocket.local_port.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_5bind(PyObject *__pyx_v_self, PyObject *__pyx_arg_port); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_5bind(PyObject *__pyx_v_self, PyObject *__pyx_arg_port) {
  unsigned short __pyx_v_port;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bind (wrapper)", 0);
  assert(__pyx_arg_port); {
    __pyx_v_port = __Pyx_PyInt_AsUnsignedShort(__pyx_arg_port); if (unlikely((__pyx_v_port == (unsigned short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.UdpSocket.bind", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9UdpSocket_4bind(((struct __pyx_obj_4sfml_7network_7network_UdpSocket *)__pyx_v_self), ((unsigned short)__pyx_v_port));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":250
 * 			return self.p_this.getLocalPort()
 * 
 * 	def bind(self, unsigned short port):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.socket.Status status = self.p_this.bind(port)
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_4bind(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self, unsigned short __pyx_v_port) {
  enum sf::Socket::Status __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bind", 0);

  /* "sfml/network/network.pyx":251
 * 
 * 	def bind(self, unsigned short port):
 * 		cdef dnetwork.socket.Status status = self.p_this.bind(port)             # <<<<<<<<<<<<<<
 * 
 * 		if status is not dnetwork.socket.Done:
 */
  __pyx_v_status = __pyx_v_self->p_this->bind(__pyx_v_port);

  /* "sfml/network/network.pyx":253
 * 		cdef dnetwork.socket.Status status = self.p_this.bind(port)
 * 
 * 		if status is not dnetwork.socket.Done:             # <<<<<<<<<<<<<<
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 */
  __pyx_t_1 = (__pyx_v_status != sf::Socket::Done);
  if (__pyx_t_1) {

    /* "sfml/network/network.pyx":254
 * 
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:             # <<<<<<<<<<<<<<
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::NotReady);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":255
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketNotReady); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":256
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:             # <<<<<<<<<<<<<<
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::Disconnected);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":257
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()
 */
      __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketDisconnected); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":258
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:             # <<<<<<<<<<<<<<
 * 				raise SocketError()
 * 
 */
    __pyx_t_1 = (__pyx_v_status == sf::Socket::Error);
    if (__pyx_t_1) {

      /* "sfml/network/network.pyx":259
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()             # <<<<<<<<<<<<<<
 * 
 * 	def unbind(self):
 */
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.UdpSocket.bind", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_7unbind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_7unbind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("unbind (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_9UdpSocket_6unbind(((struct __pyx_obj_4sfml_7network_7network_UdpSocket *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":261
 * 				raise SocketError()
 * 
 * 	def unbind(self):             # <<<<<<<<<<<<<<
 * 		self.p_this.unbind()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_6unbind(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("unbind", 0);

  /* "sfml/network/network.pyx":262
 * 
 * 	def unbind(self):
 * 		self.p_this.unbind()             # <<<<<<<<<<<<<<
 * 
 * 	def send(self, bytes data, IpAddress remote_address, unsigned short remote_port):
 */
  __pyx_v_self->p_this->unbind();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_9send(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_9send(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_data = 0;
  struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_remote_address = 0;
  unsigned short __pyx_v_remote_port;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__data,&__pyx_n_s__remote_address,&__pyx_n_s__remote_port,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("send (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__data);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__remote_address);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("send", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__remote_port);
        if (likely(values[2])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("send", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "send") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_data = ((PyObject*)values[0]);
    __pyx_v_remote_address = ((struct __pyx_obj_4sfml_7network_7network_IpAddress *)values[1]);
    __pyx_v_remote_port = __Pyx_PyInt_AsUnsignedShort(values[2]); if (unlikely((__pyx_v_remote_port == (unsigned short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("send", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.UdpSocket.send", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_data), (&PyBytes_Type), 1, "data", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_remote_address), __pyx_ptype_4sfml_7network_7network_IpAddress, 1, "remote_address", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_9UdpSocket_8send(((struct __pyx_obj_4sfml_7network_7network_UdpSocket *)__pyx_v_self), __pyx_v_data, __pyx_v_remote_address, __pyx_v_remote_port);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":264
 * 		self.p_this.unbind()
 * 
 * 	def send(self, bytes data, IpAddress remote_address, unsigned short remote_port):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.socket.Status status = self.p_this.send(<char*>data, len(data), remote_address.p_this[0], remote_port)
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_8send(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self, PyObject *__pyx_v_data, struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_remote_address, unsigned short __pyx_v_remote_port) {
  enum sf::Socket::Status __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("send", 0);

  /* "sfml/network/network.pyx":265
 * 
 * 	def send(self, bytes data, IpAddress remote_address, unsigned short remote_port):
 * 		cdef dnetwork.socket.Status status = self.p_this.send(<char*>data, len(data), remote_address.p_this[0], remote_port)             # <<<<<<<<<<<<<<
 * 
 * 		if status is not dnetwork.socket.Done:
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_data)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(((PyObject *)__pyx_v_data) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_2 = PyBytes_GET_SIZE(((PyObject *)__pyx_v_data)); 
  __pyx_v_status = __pyx_v_self->p_this->send(((char *)__pyx_t_1), __pyx_t_2, (__pyx_v_remote_address->p_this[0]), __pyx_v_remote_port);

  /* "sfml/network/network.pyx":267
 * 		cdef dnetwork.socket.Status status = self.p_this.send(<char*>data, len(data), remote_address.p_this[0], remote_port)
 * 
 * 		if status is not dnetwork.socket.Done:             # <<<<<<<<<<<<<<
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 */
  __pyx_t_3 = (__pyx_v_status != sf::Socket::Done);
  if (__pyx_t_3) {

    /* "sfml/network/network.pyx":268
 * 
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:             # <<<<<<<<<<<<<<
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 */
    __pyx_t_3 = (__pyx_v_status == sf::Socket::NotReady);
    if (__pyx_t_3) {

      /* "sfml/network/network.pyx":269
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 */
      __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketNotReady); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":270
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:             # <<<<<<<<<<<<<<
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 */
    __pyx_t_3 = (__pyx_v_status == sf::Socket::Disconnected);
    if (__pyx_t_3) {

      /* "sfml/network/network.pyx":271
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()
 */
      __pyx_t_5 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketDisconnected); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":272
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:             # <<<<<<<<<<<<<<
 * 				raise SocketError()
 * 
 */
    __pyx_t_3 = (__pyx_v_status == sf::Socket::Error);
    if (__pyx_t_3) {

      /* "sfml/network/network.pyx":273
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()             # <<<<<<<<<<<<<<
 * 
 * 	def receive(self, size_t size):
 */
      __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketError); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("sfml.network.network.UdpSocket.send", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_11receive(PyObject *__pyx_v_self, PyObject *__pyx_arg_size); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_9UdpSocket_11receive(PyObject *__pyx_v_self, PyObject *__pyx_arg_size) {
  size_t __pyx_v_size;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("receive (wrapper)", 0);
  assert(__pyx_arg_size); {
    __pyx_v_size = __Pyx_PyInt_AsSize_t(__pyx_arg_size); if (unlikely((__pyx_v_size == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.UdpSocket.receive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_9UdpSocket_10receive(((struct __pyx_obj_4sfml_7network_7network_UdpSocket *)__pyx_v_self), ((size_t)__pyx_v_size));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":275
 * 				raise SocketError()
 * 
 * 	def receive(self, size_t size):             # <<<<<<<<<<<<<<
 * 		cdef char* data = <char*>malloc(size * sizeof(char))
 * 		cdef size_t received = 0
 */

static PyObject *__pyx_pf_4sfml_7network_7network_9UdpSocket_10receive(struct __pyx_obj_4sfml_7network_7network_UdpSocket *__pyx_v_self, size_t __pyx_v_size) {
  char *__pyx_v_data;
  size_t __pyx_v_received;
  struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_remote_address = 0;
  unsigned short __pyx_v_port;
  enum sf::Socket::Status __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("receive", 0);

  /* "sfml/network/network.pyx":276
 * 
 * 	def receive(self, size_t size):
 * 		cdef char* data = <char*>malloc(size * sizeof(char))             # <<<<<<<<<<<<<<
 * 		cdef size_t received = 0
 * 		cdef IpAddress remote_address = IpAddress()
 */
  __pyx_v_data = ((char *)malloc((__pyx_v_size * (sizeof(char)))));

  /* "sfml/network/network.pyx":277
 * 	def receive(self, size_t size):
 * 		cdef char* data = <char*>malloc(size * sizeof(char))
 * 		cdef size_t received = 0             # <<<<<<<<<<<<<<
 * 		cdef IpAddress remote_address = IpAddress()
 * 		cdef unsigned short port = 0
 */
  __pyx_v_received = 0;

  /* "sfml/network/network.pyx":278
 * 		cdef char* data = <char*>malloc(size * sizeof(char))
 * 		cdef size_t received = 0
 * 		cdef IpAddress remote_address = IpAddress()             # <<<<<<<<<<<<<<
 * 		cdef unsigned short port = 0
 * 		cdef dnetwork.socket.Status status = self.p_this.receive(data, size, received, remote_address.p_this[0], port)
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_4sfml_7network_7network_IpAddress)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_remote_address = ((struct __pyx_obj_4sfml_7network_7network_IpAddress *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":279
 * 		cdef size_t received = 0
 * 		cdef IpAddress remote_address = IpAddress()
 * 		cdef unsigned short port = 0             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.socket.Status status = self.p_this.receive(data, size, received, remote_address.p_this[0], port)
 * 
 */
  __pyx_v_port = 0;

  /* "sfml/network/network.pyx":280
 * 		cdef IpAddress remote_address = IpAddress()
 * 		cdef unsigned short port = 0
 * 		cdef dnetwork.socket.Status status = self.p_this.receive(data, size, received, remote_address.p_this[0], port)             # <<<<<<<<<<<<<<
 * 
 * 		if status is not dnetwork.socket.Done:
 */
  __pyx_v_status = __pyx_v_self->p_this->receive(__pyx_v_data, __pyx_v_size, __pyx_v_received, (__pyx_v_remote_address->p_this[0]), __pyx_v_port);

  /* "sfml/network/network.pyx":282
 * 		cdef dnetwork.socket.Status status = self.p_this.receive(data, size, received, remote_address.p_this[0], port)
 * 
 * 		if status is not dnetwork.socket.Done:             # <<<<<<<<<<<<<<
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 */
  __pyx_t_2 = (__pyx_v_status != sf::Socket::Done);
  if (__pyx_t_2) {

    /* "sfml/network/network.pyx":283
 * 
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:             # <<<<<<<<<<<<<<
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 */
    __pyx_t_2 = (__pyx_v_status == sf::Socket::NotReady);
    if (__pyx_t_2) {

      /* "sfml/network/network.pyx":284
 * 		if status is not dnetwork.socket.Done:
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 */
      __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketNotReady); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":285
 * 			if status is dnetwork.socket.NotReady:
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:             # <<<<<<<<<<<<<<
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 */
    __pyx_t_2 = (__pyx_v_status == sf::Socket::Disconnected);
    if (__pyx_t_2) {

      /* "sfml/network/network.pyx":286
 * 				raise SocketNotReady()
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()             # <<<<<<<<<<<<<<
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()
 */
      __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketDisconnected); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }

    /* "sfml/network/network.pyx":287
 * 			elif status is dnetwork.socket.Disconnected:
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:             # <<<<<<<<<<<<<<
 * 				raise SocketError()
 * 
 */
    __pyx_t_2 = (__pyx_v_status == sf::Socket::Error);
    if (__pyx_t_2) {

      /* "sfml/network/network.pyx":288
 * 				raise SocketDisconnected()
 * 			elif status is dnetwork.socket.Error:
 * 				raise SocketError()             # <<<<<<<<<<<<<<
 * 
 * 		return (<bytes>(data)[:received], remote_address, port)
 */
      __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketError); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L4;
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "sfml/network/network.pyx":290
 * 				raise SocketError()
 * 
 * 		return (<bytes>(data)[:received], remote_address, port)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyBytes_FromStringAndSize(__pyx_v_data + 0, __pyx_v_received - 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __pyx_t_1 = PyInt_FromLong(__pyx_v_port); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(((PyObject *)((PyObject*)__pyx_t_3)));
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_3));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_3));
  __Pyx_INCREF(((PyObject *)__pyx_v_remote_address));
  PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)__pyx_v_remote_address));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_remote_address));
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_t_1 = 0;
  __pyx_r = ((PyObject *)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sfml.network.network.UdpSocket.receive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_remote_address);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_14SocketSelector_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_14SocketSelector_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_14SocketSelector___init__(((struct __pyx_obj_4sfml_7network_7network_SocketSelector *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":296
 * 	cdef dnetwork.SocketSelector *p_this
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.SocketSelector()
 * 
 */

static int __pyx_pf_4sfml_7network_7network_14SocketSelector___init__(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":297
 * 
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.SocketSelector()             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->p_this = new sf::SocketSelector();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_14SocketSelector_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_14SocketSelector_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_14SocketSelector_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_SocketSelector *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":299
 * 		self.p_this = new dnetwork.SocketSelector()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_14SocketSelector_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":300
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def add(self, Socket socket):
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_5add(PyObject *__pyx_v_self, PyObject *__pyx_v_socket); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_5add(PyObject *__pyx_v_self, PyObject *__pyx_v_socket) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_socket), __pyx_ptype_4sfml_7network_7network_Socket, 1, "socket", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_14SocketSelector_4add(((struct __pyx_obj_4sfml_7network_7network_SocketSelector *)__pyx_v_self), ((struct __pyx_obj_4sfml_7network_7network_Socket *)__pyx_v_socket));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":302
 * 		del self.p_this
 * 
 * 	def add(self, Socket socket):             # <<<<<<<<<<<<<<
 * 		self.p_this.add(socket.p_socket[0])
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_4add(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_socket) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add", 0);

  /* "sfml/network/network.pyx":303
 * 
 * 	def add(self, Socket socket):
 * 		self.p_this.add(socket.p_socket[0])             # <<<<<<<<<<<<<<
 * 
 * 	def remove(self, Socket socket):
 */
  __pyx_v_self->p_this->add((__pyx_v_socket->p_socket[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_7remove(PyObject *__pyx_v_self, PyObject *__pyx_v_socket); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_7remove(PyObject *__pyx_v_self, PyObject *__pyx_v_socket) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_socket), __pyx_ptype_4sfml_7network_7network_Socket, 1, "socket", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_14SocketSelector_6remove(((struct __pyx_obj_4sfml_7network_7network_SocketSelector *)__pyx_v_self), ((struct __pyx_obj_4sfml_7network_7network_Socket *)__pyx_v_socket));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":305
 * 		self.p_this.add(socket.p_socket[0])
 * 
 * 	def remove(self, Socket socket):             # <<<<<<<<<<<<<<
 * 		self.p_this.remove(socket.p_socket[0])
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_6remove(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_socket) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("remove", 0);

  /* "sfml/network/network.pyx":306
 * 
 * 	def remove(self, Socket socket):
 * 		self.p_this.remove(socket.p_socket[0])             # <<<<<<<<<<<<<<
 * 
 * 	def clear(self):
 */
  __pyx_v_self->p_this->remove((__pyx_v_socket->p_socket[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_9clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_9clear(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_14SocketSelector_8clear(((struct __pyx_obj_4sfml_7network_7network_SocketSelector *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":308
 * 		self.p_this.remove(socket.p_socket[0])
 * 
 * 	def clear(self):             # <<<<<<<<<<<<<<
 * 		self.p_this.clear()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_8clear(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear", 0);

  /* "sfml/network/network.pyx":309
 * 
 * 	def clear(self):
 * 		self.p_this.clear()             # <<<<<<<<<<<<<<
 * 
 * 	def wait(self, Uint32 timeout=0):
 */
  __pyx_v_self->p_this->clear();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_11wait(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_11wait(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  sf::Uint32 __pyx_v_timeout;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__timeout,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("wait (wrapper)", 0);
  {
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__timeout);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "wait") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[0]) {
      } else {
        __pyx_v_timeout = ((sf::Uint32)0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_timeout = __Pyx_PyInt_from_py_sf__Uint32(values[0]); if (unlikely((__pyx_v_timeout == (sf::Uint32)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_timeout = ((sf::Uint32)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("wait", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.SocketSelector.wait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_14SocketSelector_10wait(((struct __pyx_obj_4sfml_7network_7network_SocketSelector *)__pyx_v_self), __pyx_v_timeout);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":311
 * 		self.p_this.clear()
 * 
 * 	def wait(self, Uint32 timeout=0):             # <<<<<<<<<<<<<<
 * 		return self.p_this.wait(dsystem.milliseconds(timeout))
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_10wait(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self, sf::Uint32 __pyx_v_timeout) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wait", 0);

  /* "sfml/network/network.pyx":312
 * 
 * 	def wait(self, Uint32 timeout=0):
 * 		return self.p_this.wait(dsystem.milliseconds(timeout))             # <<<<<<<<<<<<<<
 * 
 * 	def is_ready(self, Socket socket):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->p_this->wait(sf::milliseconds(__pyx_v_timeout))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.SocketSelector.wait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_13is_ready(PyObject *__pyx_v_self, PyObject *__pyx_v_socket); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_14SocketSelector_13is_ready(PyObject *__pyx_v_self, PyObject *__pyx_v_socket) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_ready (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_socket), __pyx_ptype_4sfml_7network_7network_Socket, 1, "socket", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_14SocketSelector_12is_ready(((struct __pyx_obj_4sfml_7network_7network_SocketSelector *)__pyx_v_self), ((struct __pyx_obj_4sfml_7network_7network_Socket *)__pyx_v_socket));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":314
 * 		return self.p_this.wait(dsystem.milliseconds(timeout))
 * 
 * 	def is_ready(self, Socket socket):             # <<<<<<<<<<<<<<
 * 		return self.p_this.isReady(socket.p_socket[0])
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_14SocketSelector_12is_ready(struct __pyx_obj_4sfml_7network_7network_SocketSelector *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_Socket *__pyx_v_socket) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_ready", 0);

  /* "sfml/network/network.pyx":315
 * 
 * 	def is_ready(self, Socket socket):
 * 		return self.p_this.isReady(socket.p_socket[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->p_this->isReady((__pyx_v_socket->p_socket[0]))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.SocketSelector.is_ready", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_1__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_1__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11FtpResponse___repr__(((struct __pyx_obj_4sfml_7network_7network_FtpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":365
 * 	cdef dnetwork.ftp.Response *p_response
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return "sf.FtpResponse({0})".format(self)
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse___repr__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "sfml/network/network.pyx":366
 * 
 * 	def __repr__(self):
 * 		return "sf.FtpResponse({0})".format(self)             # <<<<<<<<<<<<<<
 * 
 * 	def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_10), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sfml.network.network.FtpResponse.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_3__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_3__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11FtpResponse_2__str__(((struct __pyx_obj_4sfml_7network_7network_FtpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":368
 * 		return "sf.FtpResponse({0})".format(self)
 * 
 * 	def __str__(self):             # <<<<<<<<<<<<<<
 * 		return "Status: {0} - {1}".format(self.status, self.message)
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse_2__str__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "sfml/network/network.pyx":369
 * 
 * 	def __str__(self):
 * 		return "Status: {0} - {1}".format(self.status, self.message)             # <<<<<<<<<<<<<<
 * 
 * 	property ok:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_11), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__status); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__message); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sfml.network.network.FtpResponse.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_2ok_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_2ok_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11FtpResponse_2ok___get__(((struct __pyx_obj_4sfml_7network_7network_FtpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":372
 * 
 * 	property ok:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_response.isOk()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse_2ok___get__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":373
 * 	property ok:
 * 		def __get__(self):
 * 			return self.p_response.isOk()             # <<<<<<<<<<<<<<
 * 
 * 	property status:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->p_response->isOk()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.FtpResponse.ok.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_6status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_6status_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11FtpResponse_6status___get__(((struct __pyx_obj_4sfml_7network_7network_FtpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":376
 * 
 * 	property status:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_response.getStatus()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse_6status___get__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":377
 * 	property status:
 * 		def __get__(self):
 * 			return self.p_response.getStatus()             # <<<<<<<<<<<<<<
 * 
 * 	property message:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->p_response->getStatus()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.FtpResponse.status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_7message_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_11FtpResponse_7message_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_11FtpResponse_7message___get__(((struct __pyx_obj_4sfml_7network_7network_FtpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":380
 * 
 * 	property message:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_response.getMessage().c_str()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_11FtpResponse_7message___get__(struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":381
 * 	property message:
 * 		def __get__(self):
 * 			return self.p_response.getMessage().c_str()             # <<<<<<<<<<<<<<
 * 
 * cdef class FtpDirectoryResponse(FtpResponse):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_self->p_response->getMessage().c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.FtpResponse.message.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse___init__(((struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":386
 * 	cdef dnetwork.ftp.DirectoryResponse *p_this
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		raise NotImplementedError("Not meant to be instantiated")
 * 
 */

static int __pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse___init__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":387
 * 
 * 	def __init__(self):
 * 		raise NotImplementedError("Not meant to be instantiated")             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_13), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.FtpDirectoryResponse.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":389
 * 		raise NotImplementedError("Not meant to be instantiated")
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":390
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def get_directory(self):
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_5get_directory(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_5get_directory(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_directory (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse_4get_directory(((struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":392
 * 		del self.p_this
 * 
 * 	def get_directory(self):             # <<<<<<<<<<<<<<
 * 		return self.p_this.getDirectory().c_str()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_20FtpDirectoryResponse_4get_directory(struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_directory", 0);

  /* "sfml/network/network.pyx":393
 * 
 * 	def get_directory(self):
 * 		return self.p_this.getDirectory().c_str()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_self->p_this->getDirectory().c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.FtpDirectoryResponse.get_directory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_18FtpListingResponse_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_18FtpListingResponse_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_18FtpListingResponse___init__(((struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":399
 * 	cdef dnetwork.ftp.ListingResponse *p_this
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		raise NotImplementedError("Not meant to be instantiated")
 * 
 */

static int __pyx_pf_4sfml_7network_7network_18FtpListingResponse___init__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":400
 * 
 * 	def __init__(self):
 * 		raise NotImplementedError("Not meant to be instantiated")             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_14), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.FtpListingResponse.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_18FtpListingResponse_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_18FtpListingResponse_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_18FtpListingResponse_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":402
 * 		raise NotImplementedError("Not meant to be instantiated")
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_18FtpListingResponse_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":403
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	property filenames:
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_18FtpListingResponse_9filenames_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_18FtpListingResponse_9filenames_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_18FtpListingResponse_9filenames___get__(((struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":406
 * 
 * 	property filenames:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			cdef list r = []
 * 			cdef vector[string]* filenames = <vector[string]*>&self.p_this.getFilenames()
 */

static PyObject *__pyx_pf_4sfml_7network_7network_18FtpListingResponse_9filenames___get__(struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *__pyx_v_self) {
  PyObject *__pyx_v_r = 0;
  std::vector<std::string> *__pyx_v_filenames;
  std::vector<std::string>::iterator __pyx_v_filename;
  std::string __pyx_v_temp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":407
 * 	property filenames:
 * 		def __get__(self):
 * 			cdef list r = []             # <<<<<<<<<<<<<<
 * 			cdef vector[string]* filenames = <vector[string]*>&self.p_this.getFilenames()
 * 			cdef vector[string].iterator filename = filenames.begin()
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_r = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":408
 * 		def __get__(self):
 * 			cdef list r = []
 * 			cdef vector[string]* filenames = <vector[string]*>&self.p_this.getFilenames()             # <<<<<<<<<<<<<<
 * 			cdef vector[string].iterator filename = filenames.begin()
 * 			cdef string temp
 */
  __pyx_v_filenames = ((std::vector<std::string> *)(&__pyx_v_self->p_this->getFilenames()));

  /* "sfml/network/network.pyx":409
 * 			cdef list r = []
 * 			cdef vector[string]* filenames = <vector[string]*>&self.p_this.getFilenames()
 * 			cdef vector[string].iterator filename = filenames.begin()             # <<<<<<<<<<<<<<
 * 			cdef string temp
 * 			while filename != filenames.end():
 */
  __pyx_v_filename = __pyx_v_filenames->begin();

  /* "sfml/network/network.pyx":411
 * 			cdef vector[string].iterator filename = filenames.begin()
 * 			cdef string temp
 * 			while filename != filenames.end():             # <<<<<<<<<<<<<<
 * 				temp = deref(filename)
 * 				r.append(temp.c_str())
 */
  while (1) {
    __pyx_t_2 = (__pyx_v_filename != __pyx_v_filenames->end());
    if (!__pyx_t_2) break;

    /* "sfml/network/network.pyx":412
 * 			cdef string temp
 * 			while filename != filenames.end():
 * 				temp = deref(filename)             # <<<<<<<<<<<<<<
 * 				r.append(temp.c_str())
 * 				inc(filename)
 */
    __pyx_v_temp = (*__pyx_v_filename);

    /* "sfml/network/network.pyx":413
 * 			while filename != filenames.end():
 * 				temp = deref(filename)
 * 				r.append(temp.c_str())             # <<<<<<<<<<<<<<
 * 				inc(filename)
 * 
 */
    __pyx_t_1 = PyBytes_FromString(__pyx_v_temp.c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    __pyx_t_3 = PyList_Append(__pyx_v_r, ((PyObject *)__pyx_t_1)); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

    /* "sfml/network/network.pyx":414
 * 				temp = deref(filename)
 * 				r.append(temp.c_str())
 * 				inc(filename)             # <<<<<<<<<<<<<<
 * 
 * 			return tuple(r)
 */
    (++__pyx_v_filename);
  }

  /* "sfml/network/network.pyx":416
 * 				inc(filename)
 * 
 * 			return tuple(r)             # <<<<<<<<<<<<<<
 * 
 * cdef wrap_ftpresponse(dnetwork.ftp.Response* p):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)PyList_AsTuple(__pyx_v_r)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.FtpListingResponse.filenames.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":418
 * 			return tuple(r)
 * 
 * cdef wrap_ftpresponse(dnetwork.ftp.Response* p):             # <<<<<<<<<<<<<<
 * 	cdef FtpResponse r = FtpResponse.__new__(FtpResponse)
 * 	r.p_response = p
 */

static PyObject *__pyx_f_4sfml_7network_7network_wrap_ftpresponse(sf::Ftp::Response *__pyx_v_p) {
  struct __pyx_obj_4sfml_7network_7network_FtpResponse *__pyx_v_r = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap_ftpresponse", 0);

  /* "sfml/network/network.pyx":419
 * 
 * cdef wrap_ftpresponse(dnetwork.ftp.Response* p):
 * 	cdef FtpResponse r = FtpResponse.__new__(FtpResponse)             # <<<<<<<<<<<<<<
 * 	r.p_response = p
 * 	return r
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_4sfml_7network_7network_FtpResponse)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_4sfml_7network_7network_FtpResponse)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_r = ((struct __pyx_obj_4sfml_7network_7network_FtpResponse *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":420
 * cdef wrap_ftpresponse(dnetwork.ftp.Response* p):
 * 	cdef FtpResponse r = FtpResponse.__new__(FtpResponse)
 * 	r.p_response = p             # <<<<<<<<<<<<<<
 * 	return r
 * 
 */
  __pyx_v_r->p_response = __pyx_v_p;

  /* "sfml/network/network.pyx":421
 * 	cdef FtpResponse r = FtpResponse.__new__(FtpResponse)
 * 	r.p_response = p
 * 	return r             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_r));
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.wrap_ftpresponse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":424
 * 
 * 
 * cdef wrap_ftpdirectoryresponse(dnetwork.ftp.DirectoryResponse* p):             # <<<<<<<<<<<<<<
 * 	cdef FtpDirectoryResponse r = FtpDirectoryResponse.__new__(FtpDirectoryResponse)
 * 	r.p_this = p
 */

static PyObject *__pyx_f_4sfml_7network_7network_wrap_ftpdirectoryresponse(sf::Ftp::DirectoryResponse *__pyx_v_p) {
  struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *__pyx_v_r = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap_ftpdirectoryresponse", 0);

  /* "sfml/network/network.pyx":425
 * 
 * cdef wrap_ftpdirectoryresponse(dnetwork.ftp.DirectoryResponse* p):
 * 	cdef FtpDirectoryResponse r = FtpDirectoryResponse.__new__(FtpDirectoryResponse)             # <<<<<<<<<<<<<<
 * 	r.p_this = p
 * 	r.p_response = <dnetwork.ftp.Response*>p
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_4sfml_7network_7network_FtpDirectoryResponse)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_4sfml_7network_7network_FtpDirectoryResponse)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_r = ((struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":426
 * cdef wrap_ftpdirectoryresponse(dnetwork.ftp.DirectoryResponse* p):
 * 	cdef FtpDirectoryResponse r = FtpDirectoryResponse.__new__(FtpDirectoryResponse)
 * 	r.p_this = p             # <<<<<<<<<<<<<<
 * 	r.p_response = <dnetwork.ftp.Response*>p
 * 	return r
 */
  __pyx_v_r->p_this = __pyx_v_p;

  /* "sfml/network/network.pyx":427
 * 	cdef FtpDirectoryResponse r = FtpDirectoryResponse.__new__(FtpDirectoryResponse)
 * 	r.p_this = p
 * 	r.p_response = <dnetwork.ftp.Response*>p             # <<<<<<<<<<<<<<
 * 	return r
 * 
 */
  __pyx_v_r->__pyx_base.p_response = ((sf::Ftp::Response *)__pyx_v_p);

  /* "sfml/network/network.pyx":428
 * 	r.p_this = p
 * 	r.p_response = <dnetwork.ftp.Response*>p
 * 	return r             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_r));
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.wrap_ftpdirectoryresponse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":431
 * 
 * 
 * cdef wrap_ftplistingresponse(dnetwork.ftp.ListingResponse* p):             # <<<<<<<<<<<<<<
 * 	cdef FtpListingResponse r = FtpListingResponse.__new__(FtpListingResponse)
 * 	r.p_this = p
 */

static PyObject *__pyx_f_4sfml_7network_7network_wrap_ftplistingresponse(sf::Ftp::ListingResponse *__pyx_v_p) {
  struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *__pyx_v_r = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap_ftplistingresponse", 0);

  /* "sfml/network/network.pyx":432
 * 
 * cdef wrap_ftplistingresponse(dnetwork.ftp.ListingResponse* p):
 * 	cdef FtpListingResponse r = FtpListingResponse.__new__(FtpListingResponse)             # <<<<<<<<<<<<<<
 * 	r.p_this = p
 * 	r.p_response = <dnetwork.ftp.Response*>p
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_4sfml_7network_7network_FtpListingResponse)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_4sfml_7network_7network_FtpListingResponse)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_r = ((struct __pyx_obj_4sfml_7network_7network_FtpListingResponse *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":433
 * cdef wrap_ftplistingresponse(dnetwork.ftp.ListingResponse* p):
 * 	cdef FtpListingResponse r = FtpListingResponse.__new__(FtpListingResponse)
 * 	r.p_this = p             # <<<<<<<<<<<<<<
 * 	r.p_response = <dnetwork.ftp.Response*>p
 * 	return r
 */
  __pyx_v_r->p_this = __pyx_v_p;

  /* "sfml/network/network.pyx":434
 * 	cdef FtpListingResponse r = FtpListingResponse.__new__(FtpListingResponse)
 * 	r.p_this = p
 * 	r.p_response = <dnetwork.ftp.Response*>p             # <<<<<<<<<<<<<<
 * 	return r
 * 
 */
  __pyx_v_r->__pyx_base.p_response = ((sf::Ftp::Response *)__pyx_v_p);

  /* "sfml/network/network.pyx":435
 * 	r.p_this = p
 * 	r.p_response = <dnetwork.ftp.Response*>p
 * 	return r             # <<<<<<<<<<<<<<
 * 
 * cdef class Ftp:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_r));
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.wrap_ftplistingresponse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_3Ftp_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_3Ftp_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp___init__(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":444
 * 	cdef dnetwork.Ftp *p_this
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.Ftp()
 * 
 */

static int __pyx_pf_4sfml_7network_7network_3Ftp___init__(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":445
 * 
 * 	def __init__(self):
 * 		self.p_this = new dnetwork.Ftp()             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->p_this = new sf::Ftp();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_3Ftp_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_3Ftp_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_3Ftp_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":447
 * 		self.p_this = new dnetwork.Ftp()
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_3Ftp_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":448
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def connect(self, IpAddress server, unsigned short port=21, Uint32 timeout=0):
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_5connect(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_5connect(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_server = 0;
  unsigned short __pyx_v_port;
  sf::Uint32 __pyx_v_timeout;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__server,&__pyx_n_s__port,&__pyx_n_s__timeout,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("connect (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__server);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__port);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__timeout);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "connect") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[1]) {
      } else {
        __pyx_v_port = ((unsigned short)21);
      }
      if (values[2]) {
      } else {
        __pyx_v_timeout = ((sf::Uint32)0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_server = ((struct __pyx_obj_4sfml_7network_7network_IpAddress *)values[0]);
    if (values[1]) {
      __pyx_v_port = __Pyx_PyInt_AsUnsignedShort(values[1]); if (unlikely((__pyx_v_port == (unsigned short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_port = ((unsigned short)21);
    }
    if (values[2]) {
      __pyx_v_timeout = __Pyx_PyInt_from_py_sf__Uint32(values[2]); if (unlikely((__pyx_v_timeout == (sf::Uint32)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_timeout = ((sf::Uint32)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("connect", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Ftp.connect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_server), __pyx_ptype_4sfml_7network_7network_IpAddress, 1, "server", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_4connect(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), __pyx_v_server, __pyx_v_port, __pyx_v_timeout);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":450
 * 		del self.p_this
 * 
 * 	def connect(self, IpAddress server, unsigned short port=21, Uint32 timeout=0):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.connect(server.p_this[0], port, dsystem.milliseconds(timeout))
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_4connect(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_IpAddress *__pyx_v_server, unsigned short __pyx_v_port, sf::Uint32 __pyx_v_timeout) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("connect", 0);

  /* "sfml/network/network.pyx":451
 * 
 * 	def connect(self, IpAddress server, unsigned short port=21, Uint32 timeout=0):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 		response[0] = self.p_this.connect(server.p_this[0], port, dsystem.milliseconds(timeout))
 * 		return wrap_ftpresponse(response)
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":452
 * 	def connect(self, IpAddress server, unsigned short port=21, Uint32 timeout=0):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.connect(server.p_this[0], port, dsystem.milliseconds(timeout))             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->connect((__pyx_v_server->p_this[0]), __pyx_v_port, sf::milliseconds(__pyx_v_timeout));

  /* "sfml/network/network.pyx":453
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.connect(server.p_this[0], port, dsystem.milliseconds(timeout))
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def disconnect(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.Ftp.connect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_7disconnect(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_7disconnect(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("disconnect (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_6disconnect(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":455
 * 		return wrap_ftpresponse(response)
 * 
 * 	def disconnect(self):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.disconnect()
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_6disconnect(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("disconnect", 0);

  /* "sfml/network/network.pyx":456
 * 
 * 	def disconnect(self):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 		response[0] = self.p_this.disconnect()
 * 		return wrap_ftpresponse(response)
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":457
 * 	def disconnect(self):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.disconnect()             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->disconnect();

  /* "sfml/network/network.pyx":458
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.disconnect()
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def login(self, str name=None, str message=""):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.Ftp.disconnect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_9login(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_9login(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_message = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__name,&__pyx_n_s__message,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("login (wrapper)", 0);
  {
    PyObject* values[2] = {0,0};

    /* "sfml/network/network.pyx":460
 * 		return wrap_ftpresponse(response)
 * 
 * 	def login(self, str name=None, str message=""):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */
    values[0] = ((PyObject*)Py_None);
    values[1] = ((PyObject*)__pyx_kp_s_15);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__message);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "login") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_name = ((PyObject*)values[0]);
    __pyx_v_message = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("login", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Ftp.login", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyString_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_message), (&PyString_Type), 1, "message", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_8login(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), __pyx_v_name, __pyx_v_message);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_8login(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_message) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_v_encoded_name_temporary = NULL;
  PyObject *__pyx_v_encoded_message_temporary = NULL;
  char *__pyx_v_encoded_name;
  char *__pyx_v_encoded_message;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("login", 0);

  /* "sfml/network/network.pyx":461
 * 
 * 	def login(self, str name=None, str message=""):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":463
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_message_temporary = message.encode('UTF-8')
 * 		cdef char* encoded_name = encoded_name_temporary
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_name), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_16), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_name_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":464
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 * 		encoded_message_temporary = message.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_name = encoded_name_temporary
 * 		cdef char* encoded_message = encoded_message_temporary
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_message), __pyx_n_s__encode); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_17), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_encoded_message_temporary = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":465
 * 		encoded_name_temporary = name.encode('UTF-8')
 * 		encoded_message_temporary = message.encode('UTF-8')
 * 		cdef char* encoded_name = encoded_name_temporary             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_message = encoded_message_temporary
 * 
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_name_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_name = __pyx_t_3;

  /* "sfml/network/network.pyx":466
 * 		encoded_message_temporary = message.encode('UTF-8')
 * 		cdef char* encoded_name = encoded_name_temporary
 * 		cdef char* encoded_message = encoded_message_temporary             # <<<<<<<<<<<<<<
 * 
 * 		if not name: response[0] = self.p_this.login()
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_message_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_message = __pyx_t_3;

  /* "sfml/network/network.pyx":468
 * 		cdef char* encoded_message = encoded_message_temporary
 * 
 * 		if not name: response[0] = self.p_this.login()             # <<<<<<<<<<<<<<
 * 		else: response[0] = self.p_this.login(encoded_name, encoded_message)
 * 		return wrap_ftpresponse(response)
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_name)); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = (!__pyx_t_4);
  if (__pyx_t_5) {
    (__pyx_v_response[0]) = __pyx_v_self->p_this->login();
    goto __pyx_L3;
  }
  /*else*/ {

    /* "sfml/network/network.pyx":469
 * 
 * 		if not name: response[0] = self.p_this.login()
 * 		else: response[0] = self.p_this.login(encoded_name, encoded_message)             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
    (__pyx_v_response[0]) = __pyx_v_self->p_this->login(__pyx_v_encoded_name, __pyx_v_encoded_message);
  }
  __pyx_L3:;

  /* "sfml/network/network.pyx":470
 * 		if not name: response[0] = self.p_this.login()
 * 		else: response[0] = self.p_this.login(encoded_name, encoded_message)
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def keep_alive(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.login", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_name_temporary);
  __Pyx_XDECREF(__pyx_v_encoded_message_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_11keep_alive(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_11keep_alive(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("keep_alive (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_10keep_alive(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":472
 * 		return wrap_ftpresponse(response)
 * 
 * 	def keep_alive(self):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.keepAlive()
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_10keep_alive(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("keep_alive", 0);

  /* "sfml/network/network.pyx":473
 * 
 * 	def keep_alive(self):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 		response[0] = self.p_this.keepAlive()
 * 		return wrap_ftpresponse(response)
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":474
 * 	def keep_alive(self):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.keepAlive()             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->keepAlive();

  /* "sfml/network/network.pyx":475
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.keepAlive()
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def get_working_directory(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.Ftp.keep_alive", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_13get_working_directory(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_13get_working_directory(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_working_directory (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_12get_working_directory(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":477
 * 		return wrap_ftpresponse(response)
 * 
 * 	def get_working_directory(self):             # <<<<<<<<<<<<<<
 * 		# here Ftp::DirectoryResponse's constructors prevent us from
 * 		# creating an empty object. We must cheat by passing an empty
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_12get_working_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self) {
  sf::Ftp::Response *__pyx_v_response;
  sf::Ftp::DirectoryResponse *__pyx_v_directory_response;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_working_directory", 0);

  /* "sfml/network/network.pyx":482
 * 		# Ftp::Reponse that we must destruct when the DirectoryResponse
 * 		# is destroyed.
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.DirectoryResponse* directory_response = new dnetwork.ftp.DirectoryResponse(response[0])
 * 		del response
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":483
 * 		# is destroyed.
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		cdef dnetwork.ftp.DirectoryResponse* directory_response = new dnetwork.ftp.DirectoryResponse(response[0])             # <<<<<<<<<<<<<<
 * 		del response
 * 		directory_response[0] = self.p_this.getWorkingDirectory()
 */
  __pyx_v_directory_response = new sf::Ftp::DirectoryResponse((__pyx_v_response[0]));

  /* "sfml/network/network.pyx":484
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		cdef dnetwork.ftp.DirectoryResponse* directory_response = new dnetwork.ftp.DirectoryResponse(response[0])
 * 		del response             # <<<<<<<<<<<<<<
 * 		directory_response[0] = self.p_this.getWorkingDirectory()
 * 		return wrap_ftpdirectoryresponse(directory_response)
 */
  delete __pyx_v_response;

  /* "sfml/network/network.pyx":485
 * 		cdef dnetwork.ftp.DirectoryResponse* directory_response = new dnetwork.ftp.DirectoryResponse(response[0])
 * 		del response
 * 		directory_response[0] = self.p_this.getWorkingDirectory()             # <<<<<<<<<<<<<<
 * 		return wrap_ftpdirectoryresponse(directory_response)
 * 
 */
  (__pyx_v_directory_response[0]) = __pyx_v_self->p_this->getWorkingDirectory();

  /* "sfml/network/network.pyx":486
 * 		del response
 * 		directory_response[0] = self.p_this.getWorkingDirectory()
 * 		return wrap_ftpdirectoryresponse(directory_response)             # <<<<<<<<<<<<<<
 * 
 * 	def get_directory_listing(self, str directory=""):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpdirectoryresponse(__pyx_v_directory_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.Ftp.get_working_directory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_15get_directory_listing(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_15get_directory_listing(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_directory = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__directory,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_directory_listing (wrapper)", 0);
  {
    PyObject* values[1] = {0};
    values[0] = ((PyObject*)__pyx_kp_s_15);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__directory);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_directory_listing") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_directory = ((PyObject*)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_directory_listing", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Ftp.get_directory_listing", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_directory), (&PyString_Type), 1, "directory", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_14get_directory_listing(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), __pyx_v_directory);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":488
 * 		return wrap_ftpdirectoryresponse(directory_response)
 * 
 * 	def get_directory_listing(self, str directory=""):             # <<<<<<<<<<<<<<
 * 		# here Ftp::ListingResponse's constructors prevent us from
 * 		# creating an empty object. We must cheat by passing an empty
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_14get_directory_listing(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_directory) {
  sf::Ftp::Response *__pyx_v_response;
  std::vector<char> __pyx_v_falseList;
  sf::Ftp::ListingResponse *__pyx_v_listing_response;
  PyObject *__pyx_v_encoded_directory_temporary = NULL;
  char *__pyx_v_encoded_directory;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_directory_listing", 0);

  /* "sfml/network/network.pyx":494
 * 		# what we had allocated to cheat on when the ListingResponse
 * 		# is destroyed.
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 		cdef vector[char] falseList
 * 		cdef dnetwork.ftp.ListingResponse* listing_response = new dnetwork.ftp.ListingResponse(response[0], falseList)
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":496
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		cdef vector[char] falseList
 * 		cdef dnetwork.ftp.ListingResponse* listing_response = new dnetwork.ftp.ListingResponse(response[0], falseList)             # <<<<<<<<<<<<<<
 * 		del response
 * 
 */
  __pyx_v_listing_response = new sf::Ftp::ListingResponse((__pyx_v_response[0]), __pyx_v_falseList);

  /* "sfml/network/network.pyx":497
 * 		cdef vector[char] falseList
 * 		cdef dnetwork.ftp.ListingResponse* listing_response = new dnetwork.ftp.ListingResponse(response[0], falseList)
 * 		del response             # <<<<<<<<<<<<<<
 * 
 * 		encoded_directory_temporary = directory.encode('UTF-8')
 */
  delete __pyx_v_response;

  /* "sfml/network/network.pyx":499
 * 		del response
 * 
 * 		encoded_directory_temporary = directory.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_directory = encoded_directory_temporary
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_directory), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_18), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_directory_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":500
 * 
 * 		encoded_directory_temporary = directory.encode('UTF-8')
 * 		cdef char* encoded_directory = encoded_directory_temporary             # <<<<<<<<<<<<<<
 * 
 * 		listing_response[0] = self.p_this.getDirectoryListing(encoded_directory)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_directory_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_directory = __pyx_t_3;

  /* "sfml/network/network.pyx":502
 * 		cdef char* encoded_directory = encoded_directory_temporary
 * 
 * 		listing_response[0] = self.p_this.getDirectoryListing(encoded_directory)             # <<<<<<<<<<<<<<
 * 		return wrap_ftplistingresponse(listing_response)
 * 
 */
  (__pyx_v_listing_response[0]) = __pyx_v_self->p_this->getDirectoryListing(__pyx_v_encoded_directory);

  /* "sfml/network/network.pyx":503
 * 
 * 		listing_response[0] = self.p_this.getDirectoryListing(encoded_directory)
 * 		return wrap_ftplistingresponse(listing_response)             # <<<<<<<<<<<<<<
 * 
 * 	def change_directory(self, str directory):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4sfml_7network_7network_wrap_ftplistingresponse(__pyx_v_listing_response); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.get_directory_listing", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_directory_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_17change_directory(PyObject *__pyx_v_self, PyObject *__pyx_v_directory); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_17change_directory(PyObject *__pyx_v_self, PyObject *__pyx_v_directory) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("change_directory (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_directory), (&PyString_Type), 1, "directory", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_16change_directory(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), ((PyObject*)__pyx_v_directory));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":505
 * 		return wrap_ftplistingresponse(listing_response)
 * 
 * 	def change_directory(self, str directory):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_16change_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_directory) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_v_encoded_directory_temporary = NULL;
  char *__pyx_v_encoded_directory;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("change_directory", 0);

  /* "sfml/network/network.pyx":506
 * 
 * 	def change_directory(self, str directory):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 
 * 		encoded_directory_temporary = directory.encode('UTF-8')
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":508
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_directory_temporary = directory.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_directory = encoded_directory_temporary
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_directory), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_19), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_directory_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":509
 * 
 * 		encoded_directory_temporary = directory.encode('UTF-8')
 * 		cdef char* encoded_directory = encoded_directory_temporary             # <<<<<<<<<<<<<<
 * 
 * 		response[0] = self.p_this.changeDirectory(encoded_directory)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_directory_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_directory = __pyx_t_3;

  /* "sfml/network/network.pyx":511
 * 		cdef char* encoded_directory = encoded_directory_temporary
 * 
 * 		response[0] = self.p_this.changeDirectory(encoded_directory)             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->changeDirectory(__pyx_v_encoded_directory);

  /* "sfml/network/network.pyx":512
 * 
 * 		response[0] = self.p_this.changeDirectory(encoded_directory)
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def parent_directory(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.change_directory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_directory_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_19parent_directory(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_19parent_directory(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parent_directory (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_18parent_directory(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":514
 * 		return wrap_ftpresponse(response)
 * 
 * 	def parent_directory(self):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.parentDirectory()
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_18parent_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parent_directory", 0);

  /* "sfml/network/network.pyx":515
 * 
 * 	def parent_directory(self):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 		response[0] = self.p_this.parentDirectory()
 * 		return wrap_ftpresponse(response)
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":516
 * 	def parent_directory(self):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.parentDirectory()             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->parentDirectory();

  /* "sfml/network/network.pyx":517
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 		response[0] = self.p_this.parentDirectory()
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def create_directory(self, str name):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.Ftp.parent_directory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_21create_directory(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_21create_directory(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create_directory (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyString_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_20create_directory(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), ((PyObject*)__pyx_v_name));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":519
 * 		return wrap_ftpresponse(response)
 * 
 * 	def create_directory(self, str name):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_20create_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_name) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_v_encoded_name_temporary = NULL;
  char *__pyx_v_encoded_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_directory", 0);

  /* "sfml/network/network.pyx":520
 * 
 * 	def create_directory(self, str name):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":522
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_name), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_20), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_name_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":523
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 * 		cdef char* encoded_name = encoded_name_temporary             # <<<<<<<<<<<<<<
 * 
 * 		response[0] = self.p_this.createDirectory(encoded_name)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_name_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_name = __pyx_t_3;

  /* "sfml/network/network.pyx":525
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 * 		response[0] = self.p_this.createDirectory(encoded_name)             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->createDirectory(__pyx_v_encoded_name);

  /* "sfml/network/network.pyx":526
 * 
 * 		response[0] = self.p_this.createDirectory(encoded_name)
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def delete_directory(self, str name):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.create_directory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_name_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_23delete_directory(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_23delete_directory(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("delete_directory (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyString_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_22delete_directory(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), ((PyObject*)__pyx_v_name));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":528
 * 		return wrap_ftpresponse(response)
 * 
 * 	def delete_directory(self, str name):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_22delete_directory(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_name) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_v_encoded_name_temporary = NULL;
  char *__pyx_v_encoded_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("delete_directory", 0);

  /* "sfml/network/network.pyx":529
 * 
 * 	def delete_directory(self, str name):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":531
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_name), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_21), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_name_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":532
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 * 		cdef char* encoded_name = encoded_name_temporary             # <<<<<<<<<<<<<<
 * 
 * 		response[0] = self.p_this.deleteDirectory(encoded_name)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_name_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_name = __pyx_t_3;

  /* "sfml/network/network.pyx":534
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 * 		response[0] = self.p_this.deleteDirectory(encoded_name)             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->deleteDirectory(__pyx_v_encoded_name);

  /* "sfml/network/network.pyx":535
 * 
 * 		response[0] = self.p_this.deleteDirectory(encoded_name)
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def rename_file(self, str filename, str newname):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.delete_directory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_name_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_25rename_file(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_25rename_file(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_filename = 0;
  PyObject *__pyx_v_newname = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__filename,&__pyx_n_s__newname,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rename_file (wrapper)", 0);
  {
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__filename);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__newname);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rename_file", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rename_file") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_filename = ((PyObject*)values[0]);
    __pyx_v_newname = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rename_file", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Ftp.rename_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_filename), (&PyString_Type), 1, "filename", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_newname), (&PyString_Type), 1, "newname", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_24rename_file(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), __pyx_v_filename, __pyx_v_newname);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":537
 * 		return wrap_ftpresponse(response)
 * 
 * 	def rename_file(self, str filename, str newname):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_24rename_file(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_newname) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_v_encoded_filename_temporary = NULL;
  PyObject *__pyx_v_encoded_newname_temporary = NULL;
  char *__pyx_v_encoded_filename;
  char *__pyx_v_encoded_newname;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rename_file", 0);

  /* "sfml/network/network.pyx":538
 * 
 * 	def rename_file(self, str filename, str newname):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 
 * 		encoded_filename_temporary = filename.encode('UTF-8')
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":540
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_filename_temporary = filename.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_newname_temporary = newname.encode('UTF-8')
 * 		cdef char* encoded_filename = encoded_filename_temporary
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_filename), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_22), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_filename_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":541
 * 
 * 		encoded_filename_temporary = filename.encode('UTF-8')
 * 		encoded_newname_temporary = newname.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_filename = encoded_filename_temporary
 * 		cdef char* encoded_newname = encoded_newname_temporary
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_newname), __pyx_n_s__encode); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_23), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_encoded_newname_temporary = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":542
 * 		encoded_filename_temporary = filename.encode('UTF-8')
 * 		encoded_newname_temporary = newname.encode('UTF-8')
 * 		cdef char* encoded_filename = encoded_filename_temporary             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_newname = encoded_newname_temporary
 * 
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_filename_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_filename = __pyx_t_3;

  /* "sfml/network/network.pyx":543
 * 		encoded_newname_temporary = newname.encode('UTF-8')
 * 		cdef char* encoded_filename = encoded_filename_temporary
 * 		cdef char* encoded_newname = encoded_newname_temporary             # <<<<<<<<<<<<<<
 * 
 * 		response[0] = self.p_this.renameFile(encoded_filename, encoded_newname)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_newname_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_newname = __pyx_t_3;

  /* "sfml/network/network.pyx":545
 * 		cdef char* encoded_newname = encoded_newname_temporary
 * 
 * 		response[0] = self.p_this.renameFile(encoded_filename, encoded_newname)             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->renameFile(__pyx_v_encoded_filename, __pyx_v_encoded_newname);

  /* "sfml/network/network.pyx":546
 * 
 * 		response[0] = self.p_this.renameFile(encoded_filename, encoded_newname)
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def delete_file(self, str name):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.rename_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_filename_temporary);
  __Pyx_XDECREF(__pyx_v_encoded_newname_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_27delete_file(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_27delete_file(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("delete_file (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyString_Type), 1, "name", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_26delete_file(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), ((PyObject*)__pyx_v_name));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":548
 * 		return wrap_ftpresponse(response)
 * 
 * 	def delete_file(self, str name):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_26delete_file(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_name) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_v_encoded_name_temporary = NULL;
  char *__pyx_v_encoded_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("delete_file", 0);

  /* "sfml/network/network.pyx":549
 * 
 * 	def delete_file(self, str name):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":551
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_name), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_24), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_name_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":552
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 * 		cdef char* encoded_name = encoded_name_temporary             # <<<<<<<<<<<<<<
 * 
 * 		response[0] = self.p_this.deleteFile(encoded_name)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_name_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_name = __pyx_t_3;

  /* "sfml/network/network.pyx":554
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 * 		response[0] = self.p_this.deleteFile(encoded_name)             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->deleteFile(__pyx_v_encoded_name);

  /* "sfml/network/network.pyx":555
 * 
 * 		response[0] = self.p_this.deleteFile(encoded_name)
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def download(self, str remotefile, str localpath, dnetwork.ftp.TransferMode mode=dnetwork.ftp.Binary):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.delete_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_name_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_29download(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_29download(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_remotefile = 0;
  PyObject *__pyx_v_localpath = 0;
  enum sf::Ftp::TransferMode __pyx_v_mode;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__remotefile,&__pyx_n_s__localpath,&__pyx_n_s__mode,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("download (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__remotefile);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__localpath);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("download", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mode);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "download") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[2]) {
      } else {
        __pyx_v_mode = __pyx_k_25;
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_remotefile = ((PyObject*)values[0]);
    __pyx_v_localpath = ((PyObject*)values[1]);
    if (values[2]) {
      __pyx_v_mode = ((enum sf::Ftp::TransferMode)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_mode = __pyx_k_25;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("download", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Ftp.download", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_remotefile), (&PyString_Type), 1, "remotefile", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_localpath), (&PyString_Type), 1, "localpath", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_28download(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), __pyx_v_remotefile, __pyx_v_localpath, __pyx_v_mode);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":557
 * 		return wrap_ftpresponse(response)
 * 
 * 	def download(self, str remotefile, str localpath, dnetwork.ftp.TransferMode mode=dnetwork.ftp.Binary):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_28download(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_remotefile, PyObject *__pyx_v_localpath, enum sf::Ftp::TransferMode __pyx_v_mode) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_v_encoded_remotefile_temporary = NULL;
  PyObject *__pyx_v_encoded_localpath_temporary = NULL;
  char *__pyx_v_encoded_remotefile;
  char *__pyx_v_encoded_localpath;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("download", 0);

  /* "sfml/network/network.pyx":558
 * 
 * 	def download(self, str remotefile, str localpath, dnetwork.ftp.TransferMode mode=dnetwork.ftp.Binary):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 
 * 		encoded_remotefile_temporary = remotefile.encode('UTF-8')
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":560
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_remotefile_temporary = remotefile.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_localpath_temporary = localpath.encode('UTF-8')
 * 		cdef char* encoded_remotefile = encoded_remotefile_temporary
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_remotefile), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_26), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_remotefile_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":561
 * 
 * 		encoded_remotefile_temporary = remotefile.encode('UTF-8')
 * 		encoded_localpath_temporary = localpath.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_remotefile = encoded_remotefile_temporary
 * 		cdef char* encoded_localpath = encoded_localpath_temporary
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_localpath), __pyx_n_s__encode); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_27), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_encoded_localpath_temporary = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":562
 * 		encoded_remotefile_temporary = remotefile.encode('UTF-8')
 * 		encoded_localpath_temporary = localpath.encode('UTF-8')
 * 		cdef char* encoded_remotefile = encoded_remotefile_temporary             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_localpath = encoded_localpath_temporary
 * 
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_remotefile_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_remotefile = __pyx_t_3;

  /* "sfml/network/network.pyx":563
 * 		encoded_localpath_temporary = localpath.encode('UTF-8')
 * 		cdef char* encoded_remotefile = encoded_remotefile_temporary
 * 		cdef char* encoded_localpath = encoded_localpath_temporary             # <<<<<<<<<<<<<<
 * 
 * 		response[0] = self.p_this.download(encoded_remotefile, encoded_localpath, mode)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_localpath_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_localpath = __pyx_t_3;

  /* "sfml/network/network.pyx":565
 * 		cdef char* encoded_localpath = encoded_localpath_temporary
 * 
 * 		response[0] = self.p_this.download(encoded_remotefile, encoded_localpath, mode)             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->download(__pyx_v_encoded_remotefile, __pyx_v_encoded_localpath, __pyx_v_mode);

  /* "sfml/network/network.pyx":566
 * 
 * 		response[0] = self.p_this.download(encoded_remotefile, encoded_localpath, mode)
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 	def upload(self, str localfile, str remotepath, dnetwork.ftp.TransferMode mode=dnetwork.ftp.Binary):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.download", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_remotefile_temporary);
  __Pyx_XDECREF(__pyx_v_encoded_localpath_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_31upload(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_3Ftp_31upload(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_localfile = 0;
  PyObject *__pyx_v_remotepath = 0;
  enum sf::Ftp::TransferMode __pyx_v_mode;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__localfile,&__pyx_n_s__remotepath,&__pyx_n_s__mode,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("upload (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__localfile);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__remotepath);
        if (likely(values[1])) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("upload", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mode);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "upload") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[2]) {
      } else {
        __pyx_v_mode = __pyx_k_28;
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_localfile = ((PyObject*)values[0]);
    __pyx_v_remotepath = ((PyObject*)values[1]);
    if (values[2]) {
      __pyx_v_mode = ((enum sf::Ftp::TransferMode)PyInt_AsLong(values[2])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_mode = __pyx_k_28;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("upload", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Ftp.upload", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_localfile), (&PyString_Type), 1, "localfile", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_remotepath), (&PyString_Type), 1, "remotepath", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_3Ftp_30upload(((struct __pyx_obj_4sfml_7network_7network_Ftp *)__pyx_v_self), __pyx_v_localfile, __pyx_v_remotepath, __pyx_v_mode);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":568
 * 		return wrap_ftpresponse(response)
 * 
 * 	def upload(self, str localfile, str remotepath, dnetwork.ftp.TransferMode mode=dnetwork.ftp.Binary):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_3Ftp_30upload(struct __pyx_obj_4sfml_7network_7network_Ftp *__pyx_v_self, PyObject *__pyx_v_localfile, PyObject *__pyx_v_remotepath, enum sf::Ftp::TransferMode __pyx_v_mode) {
  sf::Ftp::Response *__pyx_v_response;
  PyObject *__pyx_v_encoded_localfile_temporary = NULL;
  PyObject *__pyx_v_encoded_remotepath_temporary = NULL;
  char *__pyx_v_encoded_localfile;
  char *__pyx_v_encoded_remotepath;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("upload", 0);

  /* "sfml/network/network.pyx":569
 * 
 * 	def upload(self, str localfile, str remotepath, dnetwork.ftp.TransferMode mode=dnetwork.ftp.Binary):
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()             # <<<<<<<<<<<<<<
 * 
 * 		encoded_localfile_temporary = localfile.encode('UTF-8')
 */
  __pyx_v_response = new sf::Ftp::Response();

  /* "sfml/network/network.pyx":571
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_localfile_temporary = localfile.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_remotepath_temporary = remotepath.encode('UTF-8')
 * 		cdef char* encoded_localfile = encoded_localfile_temporary
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_localfile), __pyx_n_s__encode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_29), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_encoded_localfile_temporary = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":572
 * 
 * 		encoded_localfile_temporary = localfile.encode('UTF-8')
 * 		encoded_remotepath_temporary = remotepath.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_localfile = encoded_localfile_temporary
 * 		cdef char* encoded_remotepath = encoded_remotepath_temporary
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_remotepath), __pyx_n_s__encode); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_30), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_encoded_remotepath_temporary = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":573
 * 		encoded_localfile_temporary = localfile.encode('UTF-8')
 * 		encoded_remotepath_temporary = remotepath.encode('UTF-8')
 * 		cdef char* encoded_localfile = encoded_localfile_temporary             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_remotepath = encoded_remotepath_temporary
 * 
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_localfile_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_localfile = __pyx_t_3;

  /* "sfml/network/network.pyx":574
 * 		encoded_remotepath_temporary = remotepath.encode('UTF-8')
 * 		cdef char* encoded_localfile = encoded_localfile_temporary
 * 		cdef char* encoded_remotepath = encoded_remotepath_temporary             # <<<<<<<<<<<<<<
 * 
 * 		response[0] = self.p_this.upload(encoded_localfile, encoded_remotepath, mode)
 */
  __pyx_t_3 = PyBytes_AsString(__pyx_v_encoded_remotepath_temporary); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_encoded_remotepath = __pyx_t_3;

  /* "sfml/network/network.pyx":576
 * 		cdef char* encoded_remotepath = encoded_remotepath_temporary
 * 
 * 		response[0] = self.p_this.upload(encoded_localfile, encoded_remotepath, mode)             # <<<<<<<<<<<<<<
 * 		return wrap_ftpresponse(response)
 * 
 */
  (__pyx_v_response[0]) = __pyx_v_self->p_this->upload(__pyx_v_encoded_localfile, __pyx_v_encoded_remotepath, __pyx_v_mode);

  /* "sfml/network/network.pyx":577
 * 
 * 		response[0] = self.p_this.upload(encoded_localfile, encoded_remotepath, mode)
 * 		return wrap_ftpresponse(response)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ftpresponse(__pyx_v_response); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.Ftp.upload", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_encoded_localfile_temporary);
  __Pyx_XDECREF(__pyx_v_encoded_remotepath_temporary);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_uri = 0;
  enum sf::Http::Request::Method __pyx_v_method;
  PyObject *__pyx_v_body = 0;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__uri,&__pyx_n_s__method,&__pyx_n_s__body,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject*)__pyx_kp_b_31);
    values[2] = ((PyObject*)__pyx_kp_b_15);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__uri);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__method);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__body);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[1]) {
      } else {
        __pyx_v_method = __pyx_k_32;
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_uri = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_method = ((enum sf::Http::Request::Method)PyInt_AsLong(values[1])); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_method = __pyx_k_32;
    }
    __pyx_v_body = ((PyObject*)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.HttpRequest.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_uri), (&PyBytes_Type), 1, "uri", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body), (&PyBytes_Type), 1, "body", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_11HttpRequest___init__(((struct __pyx_obj_4sfml_7network_7network_HttpRequest *)__pyx_v_self), __pyx_v_uri, __pyx_v_method, __pyx_v_body);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":587
 * 	cdef dnetwork.http.Request *p_this
 * 
 * 	def __init__(self, bytes uri=b"/", dnetwork.http.request.Method method=dnetwork.http.request.Get, bytes body=b""):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.http.Request(string(uri), method, string(body))
 * 
 */

static int __pyx_pf_4sfml_7network_7network_11HttpRequest___init__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_uri, enum sf::Http::Request::Method __pyx_v_method, PyObject *__pyx_v_body) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  char *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":588
 * 
 * 	def __init__(self, bytes uri=b"/", dnetwork.http.request.Method method=dnetwork.http.request.Get, bytes body=b""):
 * 		self.p_this = new dnetwork.http.Request(string(uri), method, string(body))             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_uri)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyBytes_AsString(((PyObject *)__pyx_v_body)); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->p_this = new sf::Http::Request(std::string(__pyx_t_1), __pyx_v_method, std::string(__pyx_t_2));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sfml.network.network.HttpRequest.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_11HttpRequest_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_11HttpRequest_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_11HttpRequest_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_HttpRequest *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":590
 * 		self.p_this = new dnetwork.http.Request(string(uri), method, string(body))
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_11HttpRequest_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":591
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	property field:
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_5field_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_v); /*proto*/
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_5field_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_v) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), (&PyTuple_Type), 1, "v", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_11HttpRequest_5field___set__(((struct __pyx_obj_4sfml_7network_7network_HttpRequest *)__pyx_v_self), ((PyObject*)__pyx_v_v));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":594
 * 
 * 	property field:
 * 		def __set__(self, tuple v):             # <<<<<<<<<<<<<<
 * 			cdef bytes field = v[0]
 * 			cdef bytes value = v[1]
 */

static int __pyx_pf_4sfml_7network_7network_11HttpRequest_5field___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_v) {
  PyObject *__pyx_v_field = 0;
  PyObject *__pyx_v_value = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  char *__pyx_t_2;
  char *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "sfml/network/network.pyx":595
 * 	property field:
 * 		def __set__(self, tuple v):
 * 			cdef bytes field = v[0]             # <<<<<<<<<<<<<<
 * 			cdef bytes value = v[1]
 * 			self.p_this.setField(string(field), string(value))
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_v), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected bytes, got %.200s", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_field = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":596
 * 		def __set__(self, tuple v):
 * 			cdef bytes field = v[0]
 * 			cdef bytes value = v[1]             # <<<<<<<<<<<<<<
 * 			self.p_this.setField(string(field), string(value))
 * 
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_v), 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected bytes, got %.200s", Py_TYPE(__pyx_t_1)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":597
 * 			cdef bytes field = v[0]
 * 			cdef bytes value = v[1]
 * 			self.p_this.setField(string(field), string(value))             # <<<<<<<<<<<<<<
 * 
 * 	property method:
 */
  __pyx_t_2 = PyBytes_AsString(((PyObject *)__pyx_v_field)); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = PyBytes_AsString(((PyObject *)__pyx_v_value)); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->p_this->setField(std::string(__pyx_t_2), std::string(__pyx_t_3));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.HttpRequest.field.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_field);
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_6method_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_method); /*proto*/
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_6method_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_method) {
  enum sf::Http::Request::Method __pyx_v_method;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_method); {
    __pyx_v_method = ((enum sf::Http::Request::Method)PyInt_AsLong(__pyx_arg_method)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.HttpRequest.method.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4sfml_7network_7network_11HttpRequest_6method___set__(((struct __pyx_obj_4sfml_7network_7network_HttpRequest *)__pyx_v_self), ((enum sf::Http::Request::Method)__pyx_v_method));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":600
 * 
 * 	property method:
 * 		def __set__(self, dnetwork.http.request.Method method):             # <<<<<<<<<<<<<<
 * 			self.p_this.setMethod(method)
 * 
 */

static int __pyx_pf_4sfml_7network_7network_11HttpRequest_6method___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, enum sf::Http::Request::Method __pyx_v_method) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "sfml/network/network.pyx":601
 * 	property method:
 * 		def __set__(self, dnetwork.http.request.Method method):
 * 			self.p_this.setMethod(method)             # <<<<<<<<<<<<<<
 * 
 * 	property uri:
 */
  __pyx_v_self->p_this->setMethod(__pyx_v_method);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_3uri_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_uri); /*proto*/
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_3uri_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_uri) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_uri), (&PyBytes_Type), 1, "uri", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_11HttpRequest_3uri___set__(((struct __pyx_obj_4sfml_7network_7network_HttpRequest *)__pyx_v_self), ((PyObject*)__pyx_v_uri));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":604
 * 
 * 	property uri:
 * 		def __set__(self, bytes uri):             # <<<<<<<<<<<<<<
 * 			self.p_this.setUri(string(uri))
 * 
 */

static int __pyx_pf_4sfml_7network_7network_11HttpRequest_3uri___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_uri) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "sfml/network/network.pyx":605
 * 	property uri:
 * 		def __set__(self, bytes uri):
 * 			self.p_this.setUri(string(uri))             # <<<<<<<<<<<<<<
 * 
 * 	property http_version:
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_uri)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->p_this->setUri(std::string(__pyx_t_1));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sfml.network.network.HttpRequest.uri.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_12http_version_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_12http_version_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_11HttpRequest_12http_version___set__(((struct __pyx_obj_4sfml_7network_7network_HttpRequest *)__pyx_v_self), ((PyObject*)__pyx_v_value));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":608
 * 
 * 	property http_version:
 * 		def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 * 			cdef unsigned int major = value[0]
 * 			cdef unsigned int minor = value[1]
 */

static int __pyx_pf_4sfml_7network_7network_11HttpRequest_12http_version___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_value) {
  unsigned int __pyx_v_major;
  unsigned int __pyx_v_minor;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  unsigned int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "sfml/network/network.pyx":609
 * 	property http_version:
 * 		def __set__(self, tuple value):
 * 			cdef unsigned int major = value[0]             # <<<<<<<<<<<<<<
 * 			cdef unsigned int minor = value[1]
 * 			self.p_this.setHttpVersion(major, minor)
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_value), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_AsUnsignedInt(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_major = __pyx_t_2;

  /* "sfml/network/network.pyx":610
 * 		def __set__(self, tuple value):
 * 			cdef unsigned int major = value[0]
 * 			cdef unsigned int minor = value[1]             # <<<<<<<<<<<<<<
 * 			self.p_this.setHttpVersion(major, minor)
 * 
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_value), 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_AsUnsignedInt(__pyx_t_1); if (unlikely((__pyx_t_2 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_minor = __pyx_t_2;

  /* "sfml/network/network.pyx":611
 * 			cdef unsigned int major = value[0]
 * 			cdef unsigned int minor = value[1]
 * 			self.p_this.setHttpVersion(major, minor)             # <<<<<<<<<<<<<<
 * 
 * 	property body:
 */
  __pyx_v_self->p_this->setHttpVersion(__pyx_v_major, __pyx_v_minor);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.HttpRequest.http_version.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_4body_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_body); /*proto*/
static int __pyx_pw_4sfml_7network_7network_11HttpRequest_4body_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_body) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body), (&PyBytes_Type), 1, "body", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_11HttpRequest_4body___set__(((struct __pyx_obj_4sfml_7network_7network_HttpRequest *)__pyx_v_self), ((PyObject*)__pyx_v_body));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":614
 * 
 * 	property body:
 * 		def __set__(self, bytes body):             # <<<<<<<<<<<<<<
 * 			self.p_this.setBody(string(body))
 * 
 */

static int __pyx_pf_4sfml_7network_7network_11HttpRequest_4body___set__(struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_self, PyObject *__pyx_v_body) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "sfml/network/network.pyx":615
 * 	property body:
 * 		def __set__(self, bytes body):
 * 			self.p_this.setBody(string(body))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_body)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->p_this->setBody(std::string(__pyx_t_1));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sfml.network.network.HttpRequest.body.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_12HttpResponse_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_12HttpResponse_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_4sfml_7network_7network_12HttpResponse___init__(((struct __pyx_obj_4sfml_7network_7network_HttpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":645
 * 	cdef dnetwork.http.Response *p_this
 * 
 * 	def __init__(self):             # <<<<<<<<<<<<<<
 * 		raise NotImplementedError("Not meant to be instantiated!")
 * 
 */

static int __pyx_pf_4sfml_7network_7network_12HttpResponse___init__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":646
 * 
 * 	def __init__(self):
 * 		raise NotImplementedError("Not meant to be instantiated!")             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_34), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.HttpResponse.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_12HttpResponse_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_12HttpResponse_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_12HttpResponse_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_HttpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":648
 * 		raise NotImplementedError("Not meant to be instantiated!")
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_12HttpResponse_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":649
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def get_field(self, bytes field):
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_5get_field(PyObject *__pyx_v_self, PyObject *__pyx_v_field); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_5get_field(PyObject *__pyx_v_self, PyObject *__pyx_v_field) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_field (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_field), (&PyBytes_Type), 1, "field", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_12HttpResponse_4get_field(((struct __pyx_obj_4sfml_7network_7network_HttpResponse *)__pyx_v_self), ((PyObject*)__pyx_v_field));
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":651
 * 		del self.p_this
 * 
 * 	def get_field(self, bytes field):             # <<<<<<<<<<<<<<
 * 		return self.p_this.getField(string(field)).c_str()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_4get_field(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self, PyObject *__pyx_v_field) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_field", 0);

  /* "sfml/network/network.pyx":652
 * 
 * 	def get_field(self, bytes field):
 * 		return self.p_this.getField(string(field)).c_str()             # <<<<<<<<<<<<<<
 * 
 * 	property status:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_field)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyBytes_FromString(__pyx_v_self->p_this->getField(std::string(__pyx_t_1)).c_str()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_r = ((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sfml.network.network.HttpResponse.get_field", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_6status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_6status_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_12HttpResponse_6status___get__(((struct __pyx_obj_4sfml_7network_7network_HttpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":655
 * 
 * 	property status:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.getStatus()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_6status___get__(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":656
 * 	property status:
 * 		def __get__(self):
 * 			return self.p_this.getStatus()             # <<<<<<<<<<<<<<
 * 
 * 	property major_http_version:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->p_this->getStatus()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.HttpResponse.status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_18major_http_version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_18major_http_version_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_12HttpResponse_18major_http_version___get__(((struct __pyx_obj_4sfml_7network_7network_HttpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":659
 * 
 * 	property major_http_version:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.getMajorHttpVersion()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_18major_http_version___get__(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":660
 * 	property major_http_version:
 * 		def __get__(self):
 * 			return self.p_this.getMajorHttpVersion()             # <<<<<<<<<<<<<<
 * 
 * 	property minor_http_version:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_self->p_this->getMajorHttpVersion()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.HttpResponse.major_http_version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_18minor_http_version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_18minor_http_version_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_12HttpResponse_18minor_http_version___get__(((struct __pyx_obj_4sfml_7network_7network_HttpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":663
 * 
 * 	property minor_http_version:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.getMinorHttpVersion()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_18minor_http_version___get__(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":664
 * 	property minor_http_version:
 * 		def __get__(self):
 * 			return self.p_this.getMinorHttpVersion()             # <<<<<<<<<<<<<<
 * 
 * 	property body:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_self->p_this->getMinorHttpVersion()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.HttpResponse.minor_http_version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_4body_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_12HttpResponse_4body_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4sfml_7network_7network_12HttpResponse_4body___get__(((struct __pyx_obj_4sfml_7network_7network_HttpResponse *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":667
 * 
 * 	property body:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return self.p_this.getBody().c_str()
 * 
 */

static PyObject *__pyx_pf_4sfml_7network_7network_12HttpResponse_4body___get__(struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "sfml/network/network.pyx":668
 * 	property body:
 * 		def __get__(self):
 * 			return self.p_this.getBody().c_str()             # <<<<<<<<<<<<<<
 * 
 * cdef wrap_httpresponse(dnetwork.http.Response *p):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyBytes_FromString(__pyx_v_self->p_this->getBody().c_str()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.HttpResponse.body.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":670
 * 			return self.p_this.getBody().c_str()
 * 
 * cdef wrap_httpresponse(dnetwork.http.Response *p):             # <<<<<<<<<<<<<<
 * 	cdef HttpResponse r = HttpResponse.__new__(HttpResponse)
 * 	r.p_this = p
 */

static PyObject *__pyx_f_4sfml_7network_7network_wrap_httpresponse(sf::Http::Response *__pyx_v_p) {
  struct __pyx_obj_4sfml_7network_7network_HttpResponse *__pyx_v_r = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap_httpresponse", 0);

  /* "sfml/network/network.pyx":671
 * 
 * cdef wrap_httpresponse(dnetwork.http.Response *p):
 * 	cdef HttpResponse r = HttpResponse.__new__(HttpResponse)             # <<<<<<<<<<<<<<
 * 	r.p_this = p
 * 	return r
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_4sfml_7network_7network_HttpResponse)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_4sfml_7network_7network_HttpResponse)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_r = ((struct __pyx_obj_4sfml_7network_7network_HttpResponse *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sfml/network/network.pyx":672
 * cdef wrap_httpresponse(dnetwork.http.Response *p):
 * 	cdef HttpResponse r = HttpResponse.__new__(HttpResponse)
 * 	r.p_this = p             # <<<<<<<<<<<<<<
 * 	return r
 * 
 */
  __pyx_v_r->p_this = __pyx_v_p;

  /* "sfml/network/network.pyx":673
 * 	cdef HttpResponse r = HttpResponse.__new__(HttpResponse)
 * 	r.p_this = p
 * 	return r             # <<<<<<<<<<<<<<
 * 
 * cdef class Http:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_r));
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.wrap_httpresponse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_4sfml_7network_7network_4Http_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4sfml_7network_7network_4Http_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_host = 0;
  unsigned short __pyx_v_port;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__host,&__pyx_n_s__port,0};
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__host);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__port);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 678; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[1]) {
      } else {
        __pyx_v_port = ((unsigned short)0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_host = ((PyObject*)values[0]);
    if (values[1]) {
      __pyx_v_port = __Pyx_PyInt_AsUnsignedShort(values[1]); if (unlikely((__pyx_v_port == (unsigned short)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 678; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_port = ((unsigned short)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 678; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Http.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_host), (&PyBytes_Type), 1, "host", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_4Http___init__(((struct __pyx_obj_4sfml_7network_7network_Http *)__pyx_v_self), __pyx_v_host, __pyx_v_port);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":678
 * 	cdef dnetwork.Http *p_this
 * 
 * 	def __init__(self, bytes host, unsigned short port=0):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.Http(string(host), port)
 * 
 */

static int __pyx_pf_4sfml_7network_7network_4Http___init__(struct __pyx_obj_4sfml_7network_7network_Http *__pyx_v_self, PyObject *__pyx_v_host, unsigned short __pyx_v_port) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "sfml/network/network.pyx":679
 * 
 * 	def __init__(self, bytes host, unsigned short port=0):
 * 		self.p_this = new dnetwork.Http(string(host), port)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_t_1 = PyBytes_AsString(((PyObject *)__pyx_v_host)); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->p_this = new sf::Http(std::string(__pyx_t_1), __pyx_v_port);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sfml.network.network.Http.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_4sfml_7network_7network_4Http_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4sfml_7network_7network_4Http_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4sfml_7network_7network_4Http_2__dealloc__(((struct __pyx_obj_4sfml_7network_7network_Http *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "sfml/network/network.pyx":681
 * 		self.p_this = new dnetwork.Http(string(host), port)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.p_this
 * 
 */

static void __pyx_pf_4sfml_7network_7network_4Http_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4sfml_7network_7network_Http *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "sfml/network/network.pyx":682
 * 
 * 	def __dealloc__(self):
 * 		del self.p_this             # <<<<<<<<<<<<<<
 * 
 * 	def send_request(self, HttpRequest request, Uint32 timeout=0):
 */
  delete __pyx_v_self->p_this;

  __Pyx_RefNannyFinishContext();
}

/* Python wrapper */
static PyObject *__pyx_pw_4sfml_7network_7network_4Http_5send_request(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4sfml_7network_7network_4Http_5send_request(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_request = 0;
  sf::Uint32 __pyx_v_timeout;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__request,&__pyx_n_s__timeout,0};
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("send_request (wrapper)", 0);
  {
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__request);
        if (likely(values[0])) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__timeout);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "send_request") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 684; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      if (values[1]) {
      } else {
        __pyx_v_timeout = ((sf::Uint32)0);
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_request = ((struct __pyx_obj_4sfml_7network_7network_HttpRequest *)values[0]);
    if (values[1]) {
      __pyx_v_timeout = __Pyx_PyInt_from_py_sf__Uint32(values[1]); if (unlikely((__pyx_v_timeout == (sf::Uint32)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 684; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_timeout = ((sf::Uint32)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("send_request", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 684; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sfml.network.network.Http.send_request", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_request), __pyx_ptype_4sfml_7network_7network_HttpRequest, 1, "request", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4sfml_7network_7network_4Http_4send_request(((struct __pyx_obj_4sfml_7network_7network_Http *)__pyx_v_self), __pyx_v_request, __pyx_v_timeout);
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sfml/network/network.pyx":684
 * 		del self.p_this
 * 
 * 	def send_request(self, HttpRequest request, Uint32 timeout=0):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.http.Response* p = new dnetwork.http.Response()
 * 		p[0] = self.p_this.sendRequest(request.p_this[0], dsystem.milliseconds(timeout))
 */

static PyObject *__pyx_pf_4sfml_7network_7network_4Http_4send_request(struct __pyx_obj_4sfml_7network_7network_Http *__pyx_v_self, struct __pyx_obj_4sfml_7network_7network_HttpRequest *__pyx_v_request, sf::Uint32 __pyx_v_timeout) {
  sf::Http::Response *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("send_request", 0);

  /* "sfml/network/network.pyx":685
 * 
 * 	def send_request(self, HttpRequest request, Uint32 timeout=0):
 * 		cdef dnetwork.http.Response* p = new dnetwork.http.Response()             # <<<<<<<<<<<<<<
 * 		p[0] = self.p_this.sendRequest(request.p_this[0], dsystem.milliseconds(timeout))
 * 		return wrap_httpresponse(p)
 */
  __pyx_v_p = new sf::Http::Response();

  /* "sfml/network/network.pyx":686
 * 	def send_request(self, HttpRequest request, Uint32 timeout=0):
 * 		cdef dnetwork.http.Response* p = new dnetwork.http.Response()
 * 		p[0] = self.p_this.sendRequest(request.p_this[0], dsystem.milliseconds(timeout))             # <<<<<<<<<<<<<<
 * 		return wrap_httpresponse(p)
 */
  (__pyx_v_p[0]) = __pyx_v_self->p_this->sendRequest((__pyx_v_request->p_this[0]), sf::milliseconds(__pyx_v_timeout));

  /* "sfml/network/network.pyx":687
 * 		cdef dnetwork.http.Response* p = new dnetwork.http.Response()
 * 		p[0] = self.p_this.sendRequest(request.p_this[0], dsystem.milliseconds(timeout))
 * 		return wrap_httpresponse(p)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_httpresponse(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sfml.network.network.Http.send_request", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_4sfml_7network_7network_IpAddress(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_IpAddress(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_9IpAddress_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_9IpAddress_string(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_9IpAddress_6string_1__get__(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_9IpAddress_integer(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_9IpAddress_7integer_1__get__(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_IpAddress[] = {
  {__Pyx_NAMESTR("from_string"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9IpAddress_9from_string, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("from_integer"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9IpAddress_11from_integer, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("from_bytes"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9IpAddress_13from_bytes, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_local_address"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9IpAddress_15get_local_address, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_public_address"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9IpAddress_17get_public_address, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_IpAddress[] = {
  {(char *)"string", __pyx_getprop_4sfml_7network_7network_9IpAddress_string, 0, 0, 0},
  {(char *)"integer", __pyx_getprop_4sfml_7network_7network_9IpAddress_integer, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_IpAddress = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_IpAddress = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_IpAddress = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_IpAddress = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_IpAddress = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.IpAddress"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_IpAddress), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_IpAddress, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_4sfml_7network_7network_9IpAddress_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_IpAddress, /*tp_as_number*/
  &__pyx_tp_as_sequence_IpAddress, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_IpAddress, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_4sfml_7network_7network_9IpAddress_7__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_IpAddress, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_IpAddress, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_IpAddress, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_9IpAddress_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_IpAddress, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_Socket(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_Socket(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_6Socket_blocking(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_6Socket_8blocking_1__get__(o);
}

static int __pyx_setprop_4sfml_7network_7network_6Socket_blocking(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_4sfml_7network_7network_6Socket_8blocking_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_Socket[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_Socket[] = {
  {(char *)"blocking", __pyx_getprop_4sfml_7network_7network_6Socket_blocking, __pyx_setprop_4sfml_7network_7network_6Socket_blocking, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Socket = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Socket = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Socket = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Socket = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_Socket = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.Socket"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_Socket), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_Socket, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Socket, /*tp_as_number*/
  &__pyx_tp_as_sequence_Socket, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Socket, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Socket, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_Socket, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_Socket, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_6Socket_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_Socket, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_TcpListener(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_4sfml_7network_7network_Socket(t, a, k);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_TcpListener(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_11TcpListener_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4sfml_7network_7network_Socket(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_11TcpListener_local_port(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_11TcpListener_10local_port_1__get__(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_TcpListener[] = {
  {__Pyx_NAMESTR("listen"), (PyCFunction)__pyx_pw_4sfml_7network_7network_11TcpListener_9listen, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("close"), (PyCFunction)__pyx_pw_4sfml_7network_7network_11TcpListener_11close, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("accept"), (PyCFunction)__pyx_pw_4sfml_7network_7network_11TcpListener_13accept, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_TcpListener[] = {
  {(char *)"local_port", __pyx_getprop_4sfml_7network_7network_11TcpListener_local_port, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_TcpListener = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_TcpListener = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_TcpListener = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_TcpListener = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_TcpListener = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.TcpListener"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_TcpListener), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_TcpListener, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_4sfml_7network_7network_11TcpListener_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_TcpListener, /*tp_as_number*/
  &__pyx_tp_as_sequence_TcpListener, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_TcpListener, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_4sfml_7network_7network_11TcpListener_7__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_TcpListener, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_TcpListener, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_TcpListener, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_11TcpListener_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_TcpListener, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_TcpSocket(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_4sfml_7network_7network_Socket(t, a, k);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_TcpSocket(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_9TcpSocket_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4sfml_7network_7network_Socket(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_9TcpSocket_local_port(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_9TcpSocket_10local_port_1__get__(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_9TcpSocket_remote_address(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_9TcpSocket_14remote_address_1__get__(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_9TcpSocket_remote_port(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_9TcpSocket_11remote_port_1__get__(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_TcpSocket[] = {
  {__Pyx_NAMESTR("connect"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9TcpSocket_9connect, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("disconnect"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9TcpSocket_11disconnect, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("send"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9TcpSocket_13send, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("receive"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9TcpSocket_15receive, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_TcpSocket[] = {
  {(char *)"local_port", __pyx_getprop_4sfml_7network_7network_9TcpSocket_local_port, 0, 0, 0},
  {(char *)"remote_address", __pyx_getprop_4sfml_7network_7network_9TcpSocket_remote_address, 0, 0, 0},
  {(char *)"remote_port", __pyx_getprop_4sfml_7network_7network_9TcpSocket_remote_port, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_TcpSocket = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_TcpSocket = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_TcpSocket = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_TcpSocket = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_TcpSocket = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.TcpSocket"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_TcpSocket), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_TcpSocket, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_4sfml_7network_7network_9TcpSocket_5__repr__, /*tp_repr*/
  &__pyx_tp_as_number_TcpSocket, /*tp_as_number*/
  &__pyx_tp_as_sequence_TcpSocket, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_TcpSocket, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_4sfml_7network_7network_9TcpSocket_7__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_TcpSocket, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_TcpSocket, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_TcpSocket, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_9TcpSocket_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_TcpSocket, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_UdpSocket(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_4sfml_7network_7network_Socket(t, a, k);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_UdpSocket(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_9UdpSocket_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4sfml_7network_7network_Socket(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_9UdpSocket_local_port(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_9UdpSocket_10local_port_1__get__(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_UdpSocket[] = {
  {__Pyx_NAMESTR("bind"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9UdpSocket_5bind, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("unbind"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9UdpSocket_7unbind, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("send"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9UdpSocket_9send, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("receive"), (PyCFunction)__pyx_pw_4sfml_7network_7network_9UdpSocket_11receive, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_UdpSocket[] = {
  {(char *)"local_port", __pyx_getprop_4sfml_7network_7network_9UdpSocket_local_port, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_UdpSocket = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_UdpSocket = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_UdpSocket = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_UdpSocket = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_UdpSocket = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.UdpSocket"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_UdpSocket), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_UdpSocket, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_UdpSocket, /*tp_as_number*/
  &__pyx_tp_as_sequence_UdpSocket, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_UdpSocket, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_UdpSocket, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_UdpSocket, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_UdpSocket, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_9UdpSocket_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_UdpSocket, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_SocketSelector(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_SocketSelector(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_14SocketSelector_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_SocketSelector[] = {
  {__Pyx_NAMESTR("add"), (PyCFunction)__pyx_pw_4sfml_7network_7network_14SocketSelector_5add, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("remove"), (PyCFunction)__pyx_pw_4sfml_7network_7network_14SocketSelector_7remove, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("clear"), (PyCFunction)__pyx_pw_4sfml_7network_7network_14SocketSelector_9clear, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("wait"), (PyCFunction)__pyx_pw_4sfml_7network_7network_14SocketSelector_11wait, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("is_ready"), (PyCFunction)__pyx_pw_4sfml_7network_7network_14SocketSelector_13is_ready, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SocketSelector = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SocketSelector = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SocketSelector = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SocketSelector = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_SocketSelector = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.SocketSelector"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_SocketSelector), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_SocketSelector, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_SocketSelector, /*tp_as_number*/
  &__pyx_tp_as_sequence_SocketSelector, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SocketSelector, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SocketSelector, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_SocketSelector, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_14SocketSelector_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_SocketSelector, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_FtpResponse(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_FtpResponse(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_11FtpResponse_ok(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_11FtpResponse_2ok_1__get__(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_11FtpResponse_status(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_11FtpResponse_6status_1__get__(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_11FtpResponse_message(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_11FtpResponse_7message_1__get__(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_FtpResponse[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_FtpResponse[] = {
  {(char *)"ok", __pyx_getprop_4sfml_7network_7network_11FtpResponse_ok, 0, 0, 0},
  {(char *)"status", __pyx_getprop_4sfml_7network_7network_11FtpResponse_status, 0, 0, 0},
  {(char *)"message", __pyx_getprop_4sfml_7network_7network_11FtpResponse_message, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FtpResponse = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FtpResponse = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FtpResponse = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FtpResponse = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_FtpResponse = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.FtpResponse"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_FtpResponse), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_FtpResponse, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pw_4sfml_7network_7network_11FtpResponse_1__repr__, /*tp_repr*/
  &__pyx_tp_as_number_FtpResponse, /*tp_as_number*/
  &__pyx_tp_as_sequence_FtpResponse, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FtpResponse, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_4sfml_7network_7network_11FtpResponse_3__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FtpResponse, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_FtpResponse, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_FtpResponse, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_FtpResponse, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_FtpDirectoryResponse(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_4sfml_7network_7network_FtpResponse(t, a, k);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_FtpDirectoryResponse(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4sfml_7network_7network_FtpResponse(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_FtpDirectoryResponse[] = {
  {__Pyx_NAMESTR("get_directory"), (PyCFunction)__pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_5get_directory, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FtpDirectoryResponse = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FtpDirectoryResponse = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FtpDirectoryResponse = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FtpDirectoryResponse = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_FtpDirectoryResponse = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.FtpDirectoryResponse"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_FtpDirectoryResponse), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_FtpDirectoryResponse, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_FtpDirectoryResponse, /*tp_as_number*/
  &__pyx_tp_as_sequence_FtpDirectoryResponse, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FtpDirectoryResponse, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FtpDirectoryResponse, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_FtpDirectoryResponse, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_20FtpDirectoryResponse_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_FtpDirectoryResponse, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_FtpListingResponse(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_4sfml_7network_7network_FtpResponse(t, a, k);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_FtpListingResponse(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_18FtpListingResponse_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4sfml_7network_7network_FtpResponse(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_18FtpListingResponse_filenames(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_18FtpListingResponse_9filenames_1__get__(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_FtpListingResponse[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_FtpListingResponse[] = {
  {(char *)"filenames", __pyx_getprop_4sfml_7network_7network_18FtpListingResponse_filenames, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FtpListingResponse = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FtpListingResponse = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FtpListingResponse = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FtpListingResponse = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_FtpListingResponse = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.FtpListingResponse"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_FtpListingResponse), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_FtpListingResponse, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_FtpListingResponse, /*tp_as_number*/
  &__pyx_tp_as_sequence_FtpListingResponse, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FtpListingResponse, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FtpListingResponse, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_FtpListingResponse, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_FtpListingResponse, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_18FtpListingResponse_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_FtpListingResponse, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_Ftp(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_Ftp(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_3Ftp_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_Ftp[] = {
  {__Pyx_NAMESTR("connect"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_5connect, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("disconnect"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_7disconnect, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("login"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_9login, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("keep_alive"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_11keep_alive, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_working_directory"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_13get_working_directory, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_directory_listing"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_15get_directory_listing, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("change_directory"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_17change_directory, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("parent_directory"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_19parent_directory, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("create_directory"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_21create_directory, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("delete_directory"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_23delete_directory, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("rename_file"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_25rename_file, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("delete_file"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_27delete_file, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("download"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_29download, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("upload"), (PyCFunction)__pyx_pw_4sfml_7network_7network_3Ftp_31upload, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Ftp = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Ftp = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Ftp = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Ftp = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_Ftp = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.Ftp"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_Ftp), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_Ftp, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Ftp, /*tp_as_number*/
  &__pyx_tp_as_sequence_Ftp, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Ftp, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Ftp, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_Ftp, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_3Ftp_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_Ftp, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_HttpRequest(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_HttpRequest(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_11HttpRequest_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_setprop_4sfml_7network_7network_11HttpRequest_field(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_4sfml_7network_7network_11HttpRequest_5field_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static int __pyx_setprop_4sfml_7network_7network_11HttpRequest_method(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_4sfml_7network_7network_11HttpRequest_6method_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static int __pyx_setprop_4sfml_7network_7network_11HttpRequest_uri(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_4sfml_7network_7network_11HttpRequest_3uri_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static int __pyx_setprop_4sfml_7network_7network_11HttpRequest_http_version(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_4sfml_7network_7network_11HttpRequest_12http_version_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static int __pyx_setprop_4sfml_7network_7network_11HttpRequest_body(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pw_4sfml_7network_7network_11HttpRequest_4body_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_HttpRequest[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_HttpRequest[] = {
  {(char *)"field", 0, __pyx_setprop_4sfml_7network_7network_11HttpRequest_field, 0, 0},
  {(char *)"method", 0, __pyx_setprop_4sfml_7network_7network_11HttpRequest_method, 0, 0},
  {(char *)"uri", 0, __pyx_setprop_4sfml_7network_7network_11HttpRequest_uri, 0, 0},
  {(char *)"http_version", 0, __pyx_setprop_4sfml_7network_7network_11HttpRequest_http_version, 0, 0},
  {(char *)"body", 0, __pyx_setprop_4sfml_7network_7network_11HttpRequest_body, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_HttpRequest = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_HttpRequest = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_HttpRequest = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_HttpRequest = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_HttpRequest = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.HttpRequest"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_HttpRequest), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_HttpRequest, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_HttpRequest, /*tp_as_number*/
  &__pyx_tp_as_sequence_HttpRequest, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_HttpRequest, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_HttpRequest, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_HttpRequest, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_HttpRequest, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_11HttpRequest_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_HttpRequest, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_HttpResponse(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_HttpResponse(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_12HttpResponse_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_12HttpResponse_status(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_12HttpResponse_6status_1__get__(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_12HttpResponse_major_http_version(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_12HttpResponse_18major_http_version_1__get__(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_12HttpResponse_minor_http_version(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_12HttpResponse_18minor_http_version_1__get__(o);
}

static PyObject *__pyx_getprop_4sfml_7network_7network_12HttpResponse_body(PyObject *o, void *x) {
  return __pyx_pw_4sfml_7network_7network_12HttpResponse_4body_1__get__(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_HttpResponse[] = {
  {__Pyx_NAMESTR("get_field"), (PyCFunction)__pyx_pw_4sfml_7network_7network_12HttpResponse_5get_field, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4sfml_7network_7network_HttpResponse[] = {
  {(char *)"status", __pyx_getprop_4sfml_7network_7network_12HttpResponse_status, 0, 0, 0},
  {(char *)"major_http_version", __pyx_getprop_4sfml_7network_7network_12HttpResponse_major_http_version, 0, 0, 0},
  {(char *)"minor_http_version", __pyx_getprop_4sfml_7network_7network_12HttpResponse_minor_http_version, 0, 0, 0},
  {(char *)"body", __pyx_getprop_4sfml_7network_7network_12HttpResponse_body, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_HttpResponse = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_HttpResponse = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_HttpResponse = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_HttpResponse = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_HttpResponse = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.HttpResponse"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_HttpResponse), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_HttpResponse, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_HttpResponse, /*tp_as_number*/
  &__pyx_tp_as_sequence_HttpResponse, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_HttpResponse, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_HttpResponse, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_HttpResponse, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4sfml_7network_7network_HttpResponse, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_12HttpResponse_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_HttpResponse, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_4sfml_7network_7network_Http(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_4sfml_7network_7network_Http(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4sfml_7network_7network_4Http_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4sfml_7network_7network_Http[] = {
  {__Pyx_NAMESTR("send_request"), (PyCFunction)__pyx_pw_4sfml_7network_7network_4Http_5send_request, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Http = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Http = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Http = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Http = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_4sfml_7network_7network_Http = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sfml.network.network.Http"), /*tp_name*/
  sizeof(struct __pyx_obj_4sfml_7network_7network_Http), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4sfml_7network_7network_Http, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Http, /*tp_as_number*/
  &__pyx_tp_as_sequence_Http, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Http, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Http, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4sfml_7network_7network_Http, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4sfml_7network_7network_4Http_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4sfml_7network_7network_Http, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("network"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 0},
  {&__pyx_kp_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 0},
  {&__pyx_kp_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 0},
  {&__pyx_kp_b_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 0, 0},
  {&__pyx_kp_s_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 1, 0},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_kp_b_31, __pyx_k_31, sizeof(__pyx_k_31), 0, 0, 0, 0},
  {&__pyx_kp_s_33, __pyx_k_33, sizeof(__pyx_k_33), 0, 0, 1, 0},
  {&__pyx_n_s_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 0, 1, 1},
  {&__pyx_n_s_36, __pyx_k_36, sizeof(__pyx_k_36), 0, 0, 1, 1},
  {&__pyx_n_s_37, __pyx_k_37, sizeof(__pyx_k_37), 0, 0, 1, 1},
  {&__pyx_n_s_38, __pyx_k_38, sizeof(__pyx_k_38), 0, 0, 1, 1},
  {&__pyx_n_s_39, __pyx_k_39, sizeof(__pyx_k_39), 0, 0, 1, 1},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_n_s_40, __pyx_k_40, sizeof(__pyx_k_40), 0, 0, 1, 1},
  {&__pyx_n_s_41, __pyx_k_41, sizeof(__pyx_k_41), 0, 0, 1, 1},
  {&__pyx_n_s_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 0, 1, 1},
  {&__pyx_n_s_43, __pyx_k_43, sizeof(__pyx_k_43), 0, 0, 1, 1},
  {&__pyx_n_s_44, __pyx_k_44, sizeof(__pyx_k_44), 0, 0, 1, 1},
  {&__pyx_n_s_45, __pyx_k_45, sizeof(__pyx_k_45), 0, 0, 1, 1},
  {&__pyx_n_s_46, __pyx_k_46, sizeof(__pyx_k_46), 0, 0, 1, 1},
  {&__pyx_n_s_47, __pyx_k_47, sizeof(__pyx_k_47), 0, 0, 1, 1},
  {&__pyx_n_s_48, __pyx_k_48, sizeof(__pyx_k_48), 0, 0, 1, 1},
  {&__pyx_n_s_49, __pyx_k_49, sizeof(__pyx_k_49), 0, 0, 1, 1},
  {&__pyx_n_s_50, __pyx_k_50, sizeof(__pyx_k_50), 0, 0, 1, 1},
  {&__pyx_n_s_51, __pyx_k_51, sizeof(__pyx_k_51), 0, 0, 1, 1},
  {&__pyx_n_s_52, __pyx_k_52, sizeof(__pyx_k_52), 0, 0, 1, 1},
  {&__pyx_n_s_53, __pyx_k_53, sizeof(__pyx_k_53), 0, 0, 1, 1},
  {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
  {&__pyx_n_s__ACCEPTED, __pyx_k__ACCEPTED, sizeof(__pyx_k__ACCEPTED), 0, 0, 1, 1},
  {&__pyx_n_s__ANY_PORT, __pyx_k__ANY_PORT, sizeof(__pyx_k__ANY_PORT), 0, 0, 1, 1},
  {&__pyx_n_s__ASCII, __pyx_k__ASCII, sizeof(__pyx_k__ASCII), 0, 0, 1, 1},
  {&__pyx_n_s__BAD_GATEWAY, __pyx_k__BAD_GATEWAY, sizeof(__pyx_k__BAD_GATEWAY), 0, 0, 1, 1},
  {&__pyx_n_s__BAD_REQUEST, __pyx_k__BAD_REQUEST, sizeof(__pyx_k__BAD_REQUEST), 0, 0, 1, 1},
  {&__pyx_n_s__BINARY, __pyx_k__BINARY, sizeof(__pyx_k__BINARY), 0, 0, 1, 1},
  {&__pyx_n_s__BROADCAST, __pyx_k__BROADCAST, sizeof(__pyx_k__BROADCAST), 0, 0, 1, 1},
  {&__pyx_n_s__CLOSING_CONNECTION, __pyx_k__CLOSING_CONNECTION, sizeof(__pyx_k__CLOSING_CONNECTION), 0, 0, 1, 1},
  {&__pyx_n_s__COMMAND_UNKNOWN, __pyx_k__COMMAND_UNKNOWN, sizeof(__pyx_k__COMMAND_UNKNOWN), 0, 0, 1, 1},
  {&__pyx_n_s__CONNECTION_CLOSED, __pyx_k__CONNECTION_CLOSED, sizeof(__pyx_k__CONNECTION_CLOSED), 0, 0, 1, 1},
  {&__pyx_n_s__CONNECTION_FAILED, __pyx_k__CONNECTION_FAILED, sizeof(__pyx_k__CONNECTION_FAILED), 0, 0, 1, 1},
  {&__pyx_n_s__CREATED, __pyx_k__CREATED, sizeof(__pyx_k__CREATED), 0, 0, 1, 1},
  {&__pyx_n_s__DIRECTORY_OK, __pyx_k__DIRECTORY_OK, sizeof(__pyx_k__DIRECTORY_OK), 0, 0, 1, 1},
  {&__pyx_n_s__DIRECTORY_STATUS, __pyx_k__DIRECTORY_STATUS, sizeof(__pyx_k__DIRECTORY_STATUS), 0, 0, 1, 1},
  {&__pyx_n_s__DISCONNECTED, __pyx_k__DISCONNECTED, sizeof(__pyx_k__DISCONNECTED), 0, 0, 1, 1},
  {&__pyx_n_s__DONE, __pyx_k__DONE, sizeof(__pyx_k__DONE), 0, 0, 1, 1},
  {&__pyx_n_s__EBCDIC, __pyx_k__EBCDIC, sizeof(__pyx_k__EBCDIC), 0, 0, 1, 1},
  {&__pyx_n_s__ERROR, __pyx_k__ERROR, sizeof(__pyx_k__ERROR), 0, 0, 1, 1},
  {&__pyx_n_s__Exception, __pyx_k__Exception, sizeof(__pyx_k__Exception), 0, 0, 1, 1},
  {&__pyx_n_s__FILE_ACTION_ABORTED, __pyx_k__FILE_ACTION_ABORTED, sizeof(__pyx_k__FILE_ACTION_ABORTED), 0, 0, 1, 1},
  {&__pyx_n_s__FILE_ACTION_OK, __pyx_k__FILE_ACTION_OK, sizeof(__pyx_k__FILE_ACTION_OK), 0, 0, 1, 1},
  {&__pyx_n_s__FILE_STATUS, __pyx_k__FILE_STATUS, sizeof(__pyx_k__FILE_STATUS), 0, 0, 1, 1},
  {&__pyx_n_s__FILE_UNAVAILABLE, __pyx_k__FILE_UNAVAILABLE, sizeof(__pyx_k__FILE_UNAVAILABLE), 0, 0, 1, 1},
  {&__pyx_n_s__FORBIDDEN, __pyx_k__FORBIDDEN, sizeof(__pyx_k__FORBIDDEN), 0, 0, 1, 1},
  {&__pyx_n_s__GATEWAY_TIMEOUT, __pyx_k__GATEWAY_TIMEOUT, sizeof(__pyx_k__GATEWAY_TIMEOUT), 0, 0, 1, 1},
  {&__pyx_n_s__GET, __pyx_k__GET, sizeof(__pyx_k__GET), 0, 0, 1, 1},
  {&__pyx_n_s__HEAD, __pyx_k__HEAD, sizeof(__pyx_k__HEAD), 0, 0, 1, 1},
  {&__pyx_n_s__HELP_MESSAGE, __pyx_k__HELP_MESSAGE, sizeof(__pyx_k__HELP_MESSAGE), 0, 0, 1, 1},
  {&__pyx_n_s__INVALID_FILE, __pyx_k__INVALID_FILE, sizeof(__pyx_k__INVALID_FILE), 0, 0, 1, 1},
  {&__pyx_n_s__INVALID_RESPONSE, __pyx_k__INVALID_RESPONSE, sizeof(__pyx_k__INVALID_RESPONSE), 0, 0, 1, 1},
  {&__pyx_n_s__LOCAL_ERROR, __pyx_k__LOCAL_ERROR, sizeof(__pyx_k__LOCAL_ERROR), 0, 0, 1, 1},
  {&__pyx_n_s__LOCAL_HOST, __pyx_k__LOCAL_HOST, sizeof(__pyx_k__LOCAL_HOST), 0, 0, 1, 1},
  {&__pyx_n_s__LOGGED_IN, __pyx_k__LOGGED_IN, sizeof(__pyx_k__LOGGED_IN), 0, 0, 1, 1},
  {&__pyx_n_s__MAX_DATAGRAM_SIZE, __pyx_k__MAX_DATAGRAM_SIZE, sizeof(__pyx_k__MAX_DATAGRAM_SIZE), 0, 0, 1, 1},
  {&__pyx_n_s__MOVED_PERMANENTLY, __pyx_k__MOVED_PERMANENTLY, sizeof(__pyx_k__MOVED_PERMANENTLY), 0, 0, 1, 1},
  {&__pyx_n_s__MOVED_TEMPORARILY, __pyx_k__MOVED_TEMPORARILY, sizeof(__pyx_k__MOVED_TEMPORARILY), 0, 0, 1, 1},
  {&__pyx_n_s__MULTIPLE_CHOICES, __pyx_k__MULTIPLE_CHOICES, sizeof(__pyx_k__MULTIPLE_CHOICES), 0, 0, 1, 1},
  {&__pyx_n_s__NEED_INFORMATION, __pyx_k__NEED_INFORMATION, sizeof(__pyx_k__NEED_INFORMATION), 0, 0, 1, 1},
  {&__pyx_n_s__NEED_PASSWORD, __pyx_k__NEED_PASSWORD, sizeof(__pyx_k__NEED_PASSWORD), 0, 0, 1, 1},
  {&__pyx_n_s__NONE, __pyx_k__NONE, sizeof(__pyx_k__NONE), 0, 0, 1, 1},
  {&__pyx_n_s__NOT_ENOUGH_MEMORY, __pyx_k__NOT_ENOUGH_MEMORY, sizeof(__pyx_k__NOT_ENOUGH_MEMORY), 0, 0, 1, 1},
  {&__pyx_n_s__NOT_FOUND, __pyx_k__NOT_FOUND, sizeof(__pyx_k__NOT_FOUND), 0, 0, 1, 1},
  {&__pyx_n_s__NOT_IMPLEMENTED, __pyx_k__NOT_IMPLEMENTED, sizeof(__pyx_k__NOT_IMPLEMENTED), 0, 0, 1, 1},
  {&__pyx_n_s__NOT_LOGGED_IN, __pyx_k__NOT_LOGGED_IN, sizeof(__pyx_k__NOT_LOGGED_IN), 0, 0, 1, 1},
  {&__pyx_n_s__NOT_MODIFIED, __pyx_k__NOT_MODIFIED, sizeof(__pyx_k__NOT_MODIFIED), 0, 0, 1, 1},
  {&__pyx_n_s__NOT_READY, __pyx_k__NOT_READY, sizeof(__pyx_k__NOT_READY), 0, 0, 1, 1},
  {&__pyx_n_s__NO_CONTENT, __pyx_k__NO_CONTENT, sizeof(__pyx_k__NO_CONTENT), 0, 0, 1, 1},
  {&__pyx_n_s__NotImplementedError, __pyx_k__NotImplementedError, sizeof(__pyx_k__NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s__OK, __pyx_k__OK, sizeof(__pyx_k__OK), 0, 0, 1, 1},
  {&__pyx_n_s__PAGE_TYPE_UNKNOWN, __pyx_k__PAGE_TYPE_UNKNOWN, sizeof(__pyx_k__PAGE_TYPE_UNKNOWN), 0, 0, 1, 1},
  {&__pyx_n_s__PARAMETERS_UNKNOWN, __pyx_k__PARAMETERS_UNKNOWN, sizeof(__pyx_k__PARAMETERS_UNKNOWN), 0, 0, 1, 1},
  {&__pyx_n_s__PARTIAL_CONTENT, __pyx_k__PARTIAL_CONTENT, sizeof(__pyx_k__PARTIAL_CONTENT), 0, 0, 1, 1},
  {&__pyx_n_s__POINTLESS_COMMAND, __pyx_k__POINTLESS_COMMAND, sizeof(__pyx_k__POINTLESS_COMMAND), 0, 0, 1, 1},
  {&__pyx_n_s__POST, __pyx_k__POST, sizeof(__pyx_k__POST), 0, 0, 1, 1},
  {&__pyx_n_s__RESET_CONTENT, __pyx_k__RESET_CONTENT, sizeof(__pyx_k__RESET_CONTENT), 0, 0, 1, 1},
  {&__pyx_n_s__SERVICE_READY, __pyx_k__SERVICE_READY, sizeof(__pyx_k__SERVICE_READY), 0, 0, 1, 1},
  {&__pyx_n_s__SERVICE_READY_SOON, __pyx_k__SERVICE_READY_SOON, sizeof(__pyx_k__SERVICE_READY_SOON), 0, 0, 1, 1},
  {&__pyx_n_s__SERVICE_UNAVAILABLE, __pyx_k__SERVICE_UNAVAILABLE, sizeof(__pyx_k__SERVICE_UNAVAILABLE), 0, 0, 1, 1},
  {&__pyx_n_s__SYSTEM_STATUS, __pyx_k__SYSTEM_STATUS, sizeof(__pyx_k__SYSTEM_STATUS), 0, 0, 1, 1},
  {&__pyx_n_s__SYSTEM_TYPE, __pyx_k__SYSTEM_TYPE, sizeof(__pyx_k__SYSTEM_TYPE), 0, 0, 1, 1},
  {&__pyx_n_s__SocketDisconnected, __pyx_k__SocketDisconnected, sizeof(__pyx_k__SocketDisconnected), 0, 0, 1, 1},
  {&__pyx_n_s__SocketError, __pyx_k__SocketError, sizeof(__pyx_k__SocketError), 0, 0, 1, 1},
  {&__pyx_n_s__SocketException, __pyx_k__SocketException, sizeof(__pyx_k__SocketException), 0, 0, 1, 1},
  {&__pyx_n_s__SocketNotReady, __pyx_k__SocketNotReady, sizeof(__pyx_k__SocketNotReady), 0, 0, 1, 1},
  {&__pyx_n_s__TRANSFER_ABORTED, __pyx_k__TRANSFER_ABORTED, sizeof(__pyx_k__TRANSFER_ABORTED), 0, 0, 1, 1},
  {&__pyx_n_s__UNAUTHORIZED, __pyx_k__UNAUTHORIZED, sizeof(__pyx_k__UNAUTHORIZED), 0, 0, 1, 1},
  {&__pyx_n_s____class__, __pyx_k____class__, sizeof(__pyx_k____class__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s__b1, __pyx_k__b1, sizeof(__pyx_k__b1), 0, 0, 1, 1},
  {&__pyx_n_s__b2, __pyx_k__b2, sizeof(__pyx_k__b2), 0, 0, 1, 1},
  {&__pyx_n_s__b3, __pyx_k__b3, sizeof(__pyx_k__b3), 0, 0, 1, 1},
  {&__pyx_n_s__b4, __pyx_k__b4, sizeof(__pyx_k__b4), 0, 0, 1, 1},
  {&__pyx_n_s__body, __pyx_k__body, sizeof(__pyx_k__body), 0, 0, 1, 1},
  {&__pyx_n_s__data, __pyx_k__data, sizeof(__pyx_k__data), 0, 0, 1, 1},
  {&__pyx_n_s__decode, __pyx_k__decode, sizeof(__pyx_k__decode), 0, 0, 1, 1},
  {&__pyx_n_s__directory, __pyx_k__directory, sizeof(__pyx_k__directory), 0, 0, 1, 1},
  {&__pyx_n_s__encode, __pyx_k__encode, sizeof(__pyx_k__encode), 0, 0, 1, 1},
  {&__pyx_n_s__filename, __pyx_k__filename, sizeof(__pyx_k__filename), 0, 0, 1, 1},
  {&__pyx_n_s__format, __pyx_k__format, sizeof(__pyx_k__format), 0, 0, 1, 1},
  {&__pyx_n_s__from_bytes, __pyx_k__from_bytes, sizeof(__pyx_k__from_bytes), 0, 0, 1, 1},
  {&__pyx_n_s__from_integer, __pyx_k__from_integer, sizeof(__pyx_k__from_integer), 0, 0, 1, 1},
  {&__pyx_n_s__from_string, __pyx_k__from_string, sizeof(__pyx_k__from_string), 0, 0, 1, 1},
  {&__pyx_n_s__get_local_address, __pyx_k__get_local_address, sizeof(__pyx_k__get_local_address), 0, 0, 1, 1},
  {&__pyx_n_s__get_public_address, __pyx_k__get_public_address, sizeof(__pyx_k__get_public_address), 0, 0, 1, 1},
  {&__pyx_n_s__host, __pyx_k__host, sizeof(__pyx_k__host), 0, 0, 1, 1},
  {&__pyx_n_s__localfile, __pyx_k__localfile, sizeof(__pyx_k__localfile), 0, 0, 1, 1},
  {&__pyx_n_s__localpath, __pyx_k__localpath, sizeof(__pyx_k__localpath), 0, 0, 1, 1},
  {&__pyx_n_s__message, __pyx_k__message, sizeof(__pyx_k__message), 0, 0, 1, 1},
  {&__pyx_n_s__method, __pyx_k__method, sizeof(__pyx_k__method), 0, 0, 1, 1},
  {&__pyx_n_s__mode, __pyx_k__mode, sizeof(__pyx_k__mode), 0, 0, 1, 1},
  {&__pyx_n_s__name, __pyx_k__name, sizeof(__pyx_k__name), 0, 0, 1, 1},
  {&__pyx_n_s__newname, __pyx_k__newname, sizeof(__pyx_k__newname), 0, 0, 1, 1},
  {&__pyx_n_s__port, __pyx_k__port, sizeof(__pyx_k__port), 0, 0, 1, 1},
  {&__pyx_n_s__remote_address, __pyx_k__remote_address, sizeof(__pyx_k__remote_address), 0, 0, 1, 1},
  {&__pyx_n_s__remote_port, __pyx_k__remote_port, sizeof(__pyx_k__remote_port), 0, 0, 1, 1},
  {&__pyx_n_s__remotefile, __pyx_k__remotefile, sizeof(__pyx_k__remotefile), 0, 0, 1, 1},
  {&__pyx_n_s__remotepath, __pyx_k__remotepath, sizeof(__pyx_k__remotepath), 0, 0, 1, 1},
  {&__pyx_n_s__request, __pyx_k__request, sizeof(__pyx_k__request), 0, 0, 1, 1},
  {&__pyx_n_s__server, __pyx_k__server, sizeof(__pyx_k__server), 0, 0, 1, 1},
  {&__pyx_n_s__status, __pyx_k__status, sizeof(__pyx_k__status), 0, 0, 1, 1},
  {&__pyx_n_s__string, __pyx_k__string, sizeof(__pyx_k__string), 0, 0, 1, 1},
  {&__pyx_n_s__timeout, __pyx_k__timeout, sizeof(__pyx_k__timeout), 0, 0, 1, 1},
  {&__pyx_n_s__uri, __pyx_k__uri, sizeof(__pyx_k__uri), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_Exception = __Pyx_GetName(__pyx_b, __pyx_n_s__Exception); if (!__pyx_builtin_Exception) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplementedError = __Pyx_GetName(__pyx_b, __pyx_n_s__NotImplementedError); if (!__pyx_builtin_NotImplementedError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "sfml/network/network.pyx":40
 * 
 * 	def __str__(self):
 * 		return self.string.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 * 	@classmethod
 */
  __pyx_k_tuple_3 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_3);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_2));
  PyTuple_SET_ITEM(__pyx_k_tuple_3, 0, ((PyObject *)__pyx_kp_s_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_3));

  /* "sfml/network/network.pyx":45
 * 	def from_string(self, _string):
 * 		cdef string encoded_string
 * 		encoded_string_temporary = _string.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_string = string(<char*>encoded_string_temporary)
 * 
 */
  __pyx_k_tuple_5 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_5);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_5, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_5));

  /* "sfml/network/network.pyx":98
 * 	def __init__(self):
 * 		if self.__class__ == Socket:
 * 			raise NotImplementedError('Socket is abstact')             # <<<<<<<<<<<<<<
 * 
 * 	property blocking:
 */
  __pyx_k_tuple_7 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_7);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_6));
  PyTuple_SET_ITEM(__pyx_k_tuple_7, 0, ((PyObject *)__pyx_kp_s_6));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_6));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_7));

  /* "sfml/network/network.pyx":387
 * 
 * 	def __init__(self):
 * 		raise NotImplementedError("Not meant to be instantiated")             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_k_tuple_13 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_13);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_12));
  PyTuple_SET_ITEM(__pyx_k_tuple_13, 0, ((PyObject *)__pyx_kp_s_12));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_12));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_13));

  /* "sfml/network/network.pyx":400
 * 
 * 	def __init__(self):
 * 		raise NotImplementedError("Not meant to be instantiated")             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_k_tuple_14 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_14);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_12));
  PyTuple_SET_ITEM(__pyx_k_tuple_14, 0, ((PyObject *)__pyx_kp_s_12));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_12));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_14));

  /* "sfml/network/network.pyx":463
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_message_temporary = message.encode('UTF-8')
 * 		cdef char* encoded_name = encoded_name_temporary
 */
  __pyx_k_tuple_16 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_16);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_16, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_16));

  /* "sfml/network/network.pyx":464
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')
 * 		encoded_message_temporary = message.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_name = encoded_name_temporary
 * 		cdef char* encoded_message = encoded_message_temporary
 */
  __pyx_k_tuple_17 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_17);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_17, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_17));

  /* "sfml/network/network.pyx":499
 * 		del response
 * 
 * 		encoded_directory_temporary = directory.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_directory = encoded_directory_temporary
 * 
 */
  __pyx_k_tuple_18 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_18);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_18, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_18));

  /* "sfml/network/network.pyx":508
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_directory_temporary = directory.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_directory = encoded_directory_temporary
 * 
 */
  __pyx_k_tuple_19 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_19);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_19, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_19));

  /* "sfml/network/network.pyx":522
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 */
  __pyx_k_tuple_20 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_20);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_20));

  /* "sfml/network/network.pyx":531
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 */
  __pyx_k_tuple_21 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_21);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_21, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_21));

  /* "sfml/network/network.pyx":540
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_filename_temporary = filename.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_newname_temporary = newname.encode('UTF-8')
 * 		cdef char* encoded_filename = encoded_filename_temporary
 */
  __pyx_k_tuple_22 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_22);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_22, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_22));

  /* "sfml/network/network.pyx":541
 * 
 * 		encoded_filename_temporary = filename.encode('UTF-8')
 * 		encoded_newname_temporary = newname.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_filename = encoded_filename_temporary
 * 		cdef char* encoded_newname = encoded_newname_temporary
 */
  __pyx_k_tuple_23 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_23);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_23, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_23));

  /* "sfml/network/network.pyx":551
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_name_temporary = name.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_name = encoded_name_temporary
 * 
 */
  __pyx_k_tuple_24 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_24);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_24, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_24));

  /* "sfml/network/network.pyx":560
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_remotefile_temporary = remotefile.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_localpath_temporary = localpath.encode('UTF-8')
 * 		cdef char* encoded_remotefile = encoded_remotefile_temporary
 */
  __pyx_k_tuple_26 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_26);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_26));

  /* "sfml/network/network.pyx":561
 * 
 * 		encoded_remotefile_temporary = remotefile.encode('UTF-8')
 * 		encoded_localpath_temporary = localpath.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_remotefile = encoded_remotefile_temporary
 * 		cdef char* encoded_localpath = encoded_localpath_temporary
 */
  __pyx_k_tuple_27 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_27)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_27);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_27, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_27));

  /* "sfml/network/network.pyx":571
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 * 		encoded_localfile_temporary = localfile.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		encoded_remotepath_temporary = remotepath.encode('UTF-8')
 * 		cdef char* encoded_localfile = encoded_localfile_temporary
 */
  __pyx_k_tuple_29 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_29);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_29, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_29));

  /* "sfml/network/network.pyx":572
 * 
 * 		encoded_localfile_temporary = localfile.encode('UTF-8')
 * 		encoded_remotepath_temporary = remotepath.encode('UTF-8')             # <<<<<<<<<<<<<<
 * 		cdef char* encoded_localfile = encoded_localfile_temporary
 * 		cdef char* encoded_remotepath = encoded_remotepath_temporary
 */
  __pyx_k_tuple_30 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_30);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_30, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_30));

  /* "sfml/network/network.pyx":646
 * 
 * 	def __init__(self):
 * 		raise NotImplementedError("Not meant to be instantiated!")             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_k_tuple_34 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_34);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_33));
  PyTuple_SET_ITEM(__pyx_k_tuple_34, 0, ((PyObject *)__pyx_kp_s_33));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_33));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_34));
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initnetwork(void); /*proto*/
PyMODINIT_FUNC initnetwork(void)
#else
PyMODINIT_FUNC PyInit_network(void); /*proto*/
PyMODINIT_FUNC PyInit_network(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_network(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("network"), __pyx_methods, 0, 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_sfml__network__network) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_IpAddress) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "IpAddress", (PyObject *)&__pyx_type_4sfml_7network_7network_IpAddress) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 23; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_IpAddress = &__pyx_type_4sfml_7network_7network_IpAddress;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_Socket) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Socket", (PyObject *)&__pyx_type_4sfml_7network_7network_Socket) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_Socket = &__pyx_type_4sfml_7network_7network_Socket;
  __pyx_type_4sfml_7network_7network_TcpListener.tp_base = __pyx_ptype_4sfml_7network_7network_Socket;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_TcpListener) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "TcpListener", (PyObject *)&__pyx_type_4sfml_7network_7network_TcpListener) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_TcpListener = &__pyx_type_4sfml_7network_7network_TcpListener;
  __pyx_type_4sfml_7network_7network_TcpSocket.tp_base = __pyx_ptype_4sfml_7network_7network_Socket;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_TcpSocket) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "TcpSocket", (PyObject *)&__pyx_type_4sfml_7network_7network_TcpSocket) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_TcpSocket = &__pyx_type_4sfml_7network_7network_TcpSocket;
  __pyx_type_4sfml_7network_7network_UdpSocket.tp_base = __pyx_ptype_4sfml_7network_7network_Socket;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_UdpSocket) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "UdpSocket", (PyObject *)&__pyx_type_4sfml_7network_7network_UdpSocket) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_UdpSocket = &__pyx_type_4sfml_7network_7network_UdpSocket;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_SocketSelector) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SocketSelector", (PyObject *)&__pyx_type_4sfml_7network_7network_SocketSelector) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_SocketSelector = &__pyx_type_4sfml_7network_7network_SocketSelector;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_FtpResponse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FtpResponse", (PyObject *)&__pyx_type_4sfml_7network_7network_FtpResponse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_FtpResponse = &__pyx_type_4sfml_7network_7network_FtpResponse;
  __pyx_type_4sfml_7network_7network_FtpDirectoryResponse.tp_base = __pyx_ptype_4sfml_7network_7network_FtpResponse;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_FtpDirectoryResponse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FtpDirectoryResponse", (PyObject *)&__pyx_type_4sfml_7network_7network_FtpDirectoryResponse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_FtpDirectoryResponse = &__pyx_type_4sfml_7network_7network_FtpDirectoryResponse;
  __pyx_type_4sfml_7network_7network_FtpListingResponse.tp_base = __pyx_ptype_4sfml_7network_7network_FtpResponse;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_FtpListingResponse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FtpListingResponse", (PyObject *)&__pyx_type_4sfml_7network_7network_FtpListingResponse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_FtpListingResponse = &__pyx_type_4sfml_7network_7network_FtpListingResponse;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_Ftp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Ftp", (PyObject *)&__pyx_type_4sfml_7network_7network_Ftp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_Ftp = &__pyx_type_4sfml_7network_7network_Ftp;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_HttpRequest) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "HttpRequest", (PyObject *)&__pyx_type_4sfml_7network_7network_HttpRequest) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_HttpRequest = &__pyx_type_4sfml_7network_7network_HttpRequest;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_HttpResponse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "HttpResponse", (PyObject *)&__pyx_type_4sfml_7network_7network_HttpResponse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_HttpResponse = &__pyx_type_4sfml_7network_7network_HttpResponse;
  if (PyType_Ready(&__pyx_type_4sfml_7network_7network_Http) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Http", (PyObject *)&__pyx_type_4sfml_7network_7network_Http) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4sfml_7network_7network_Http = &__pyx_type_4sfml_7network_7network_Http;
  /*--- Type import code ---*/
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "sfml/network/network.pyx":26
 * 	cdef dnetwork.IpAddress *p_this
 * 
 * 	NONE = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.None)             # <<<<<<<<<<<<<<
 * 	LOCAL_HOST = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.LocalHost)
 * 	BROADCAST = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.Broadcast)
 */
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(((sf::IpAddress *)(&sf::IpAddress::None))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress->tp_dict, __pyx_n_s__NONE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_IpAddress);

  /* "sfml/network/network.pyx":27
 * 
 * 	NONE = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.None)
 * 	LOCAL_HOST = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.LocalHost)             # <<<<<<<<<<<<<<
 * 	BROADCAST = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.Broadcast)
 * 
 */
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(((sf::IpAddress *)(&sf::IpAddress::LocalHost))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress->tp_dict, __pyx_n_s__LOCAL_HOST, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 27; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_IpAddress);

  /* "sfml/network/network.pyx":28
 * 	NONE = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.None)
 * 	LOCAL_HOST = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.LocalHost)
 * 	BROADCAST = wrap_ipaddress(<dnetwork.IpAddress*>&dnetwork.ipaddress.Broadcast)             # <<<<<<<<<<<<<<
 * 
 * 	def __init__(self):
 */
  __pyx_t_1 = __pyx_f_4sfml_7network_7network_wrap_ipaddress(((sf::IpAddress *)(&sf::IpAddress::Broadcast))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress->tp_dict, __pyx_n_s__BROADCAST, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_IpAddress);

  /* "sfml/network/network.pyx":43
 * 
 * 	@classmethod
 * 	def from_string(self, _string):             # <<<<<<<<<<<<<<
 * 		cdef string encoded_string
 * 		encoded_string_temporary = _string.encode('UTF-8')
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress, __pyx_n_s__from_string); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress->tp_dict, __pyx_n_s__from_string, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_IpAddress);

  /* "sfml/network/network.pyx":52
 * 
 * 	@classmethod
 * 	def from_integer(self, Uint32 address):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(address)
 * 		return wrap_ipaddress(p)
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress, __pyx_n_s__from_integer); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress->tp_dict, __pyx_n_s__from_integer, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 52; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_IpAddress);

  /* "sfml/network/network.pyx":57
 * 
 * 	@classmethod
 * 	def from_bytes(self, Uint8 b1, Uint8 b2, Uint8 b3, Uint8 b4):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.IpAddress *p = new dnetwork.IpAddress(b1, b2, b3, b4)
 * 		return wrap_ipaddress(p)
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress, __pyx_n_s__from_bytes); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 56; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress->tp_dict, __pyx_n_s__from_bytes, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_IpAddress);

  /* "sfml/network/network.pyx":70
 * 
 * 	@classmethod
 * 	def get_local_address(self):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()
 * 		p[0] = dnetwork.ipaddress.getLocalAddress()
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress, __pyx_n_s__get_local_address); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 69; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress->tp_dict, __pyx_n_s__get_local_address, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_IpAddress);

  /* "sfml/network/network.pyx":76
 * 
 * 	@classmethod
 * 	def get_public_address(self, Uint32 timeout=0):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.IpAddress* p = new dnetwork.IpAddress()
 * 		p[0] = dnetwork.ipaddress.getPublicAddress(dsystem.milliseconds(timeout))
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress, __pyx_n_s__get_public_address); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_IpAddress->tp_dict, __pyx_n_s__get_public_address, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_IpAddress);

  /* "sfml/network/network.pyx":87
 * 
 * cdef class Socket:
 * 	DONE = dnetwork.socket.Done             # <<<<<<<<<<<<<<
 * 	NOT_READY = dnetwork.socket.NotReady
 * 	DISCONNECTED = dnetwork.socket.Disconnected
 */
  __pyx_t_2 = PyInt_FromLong(sf::Socket::Done); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_Socket->tp_dict, __pyx_n_s__DONE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_Socket);

  /* "sfml/network/network.pyx":88
 * cdef class Socket:
 * 	DONE = dnetwork.socket.Done
 * 	NOT_READY = dnetwork.socket.NotReady             # <<<<<<<<<<<<<<
 * 	DISCONNECTED = dnetwork.socket.Disconnected
 * 	ERROR = dnetwork.socket.Error
 */
  __pyx_t_2 = PyInt_FromLong(sf::Socket::NotReady); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_Socket->tp_dict, __pyx_n_s__NOT_READY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_Socket);

  /* "sfml/network/network.pyx":89
 * 	DONE = dnetwork.socket.Done
 * 	NOT_READY = dnetwork.socket.NotReady
 * 	DISCONNECTED = dnetwork.socket.Disconnected             # <<<<<<<<<<<<<<
 * 	ERROR = dnetwork.socket.Error
 * 
 */
  __pyx_t_2 = PyInt_FromLong(sf::Socket::Disconnected); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_Socket->tp_dict, __pyx_n_s__DISCONNECTED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_Socket);

  /* "sfml/network/network.pyx":90
 * 	NOT_READY = dnetwork.socket.NotReady
 * 	DISCONNECTED = dnetwork.socket.Disconnected
 * 	ERROR = dnetwork.socket.Error             # <<<<<<<<<<<<<<
 * 
 * 	ANY_PORT = dnetwork.socket.AnyPort
 */
  __pyx_t_2 = PyInt_FromLong(sf::Socket::Error); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_Socket->tp_dict, __pyx_n_s__ERROR, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_Socket);

  /* "sfml/network/network.pyx":92
 * 	ERROR = dnetwork.socket.Error
 * 
 * 	ANY_PORT = dnetwork.socket.AnyPort             # <<<<<<<<<<<<<<
 * 
 * 	cdef dnetwork.Socket *p_socket
 */
  __pyx_t_2 = PyInt_FromLong(sf::Socket::AnyPort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_Socket->tp_dict, __pyx_n_s__ANY_PORT, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_Socket);

  /* "sfml/network/network.pyx":108
 * 
 * 
 * class SocketException(Exception): pass             # <<<<<<<<<<<<<<
 * class SocketNotReady(SocketException): pass
 * class SocketDisconnected(SocketException): pass
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_builtin_Exception);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_builtin_Exception);
  __Pyx_GIVEREF(__pyx_builtin_Exception);
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_2), __pyx_n_s__SocketException, __pyx_n_s_35); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__SocketException, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":109
 * 
 * class SocketException(Exception): pass
 * class SocketNotReady(SocketException): pass             # <<<<<<<<<<<<<<
 * class SocketDisconnected(SocketException): pass
 * class SocketError(SocketException): pass
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketException); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_2), __pyx_n_s__SocketNotReady, __pyx_n_s_35); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__SocketNotReady, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":110
 * class SocketException(Exception): pass
 * class SocketNotReady(SocketException): pass
 * class SocketDisconnected(SocketException): pass             # <<<<<<<<<<<<<<
 * class SocketError(SocketException): pass
 * 
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketException); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_2), __pyx_n_s__SocketDisconnected, __pyx_n_s_35); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__SocketDisconnected, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":111
 * class SocketNotReady(SocketException): pass
 * class SocketDisconnected(SocketException): pass
 * class SocketError(SocketException): pass             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__SocketException); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_2), __pyx_n_s__SocketError, __pyx_n_s_35); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__SocketError, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "sfml/network/network.pyx":237
 * 	cdef dnetwork.UdpSocket *p_this
 * 
 * 	MAX_DATAGRAM_SIZE = dnetwork.udpsocket.MaxDatagramSize             # <<<<<<<<<<<<<<
 * 
 * 	def __init__(self):
 */
  __pyx_t_2 = PyInt_FromLong(sf::UdpSocket::MaxDatagramSize); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_UdpSocket->tp_dict, __pyx_n_s__MAX_DATAGRAM_SIZE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_UdpSocket);

  /* "sfml/network/network.pyx":319
 * 
 * cdef class FtpResponse:
 * 	RESTART_MARKER_REPLY = dnetwork.ftp.response.RestartMarkerReply             # <<<<<<<<<<<<<<
 * 	SERVICE_READY_SOON = dnetwork.ftp.response.ServiceReadySoon
 * 	DATA_CONNECTION_ALREADY_OPENED = dnetwork.ftp.response.DataConnectionAlreadyOpened
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::RestartMarkerReply); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_36, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":320
 * cdef class FtpResponse:
 * 	RESTART_MARKER_REPLY = dnetwork.ftp.response.RestartMarkerReply
 * 	SERVICE_READY_SOON = dnetwork.ftp.response.ServiceReadySoon             # <<<<<<<<<<<<<<
 * 	DATA_CONNECTION_ALREADY_OPENED = dnetwork.ftp.response.DataConnectionAlreadyOpened
 * 	OPENING_DATA_CONNECTION = dnetwork.ftp.response.OpeningDataConnection
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ServiceReadySoon); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__SERVICE_READY_SOON, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":321
 * 	RESTART_MARKER_REPLY = dnetwork.ftp.response.RestartMarkerReply
 * 	SERVICE_READY_SOON = dnetwork.ftp.response.ServiceReadySoon
 * 	DATA_CONNECTION_ALREADY_OPENED = dnetwork.ftp.response.DataConnectionAlreadyOpened             # <<<<<<<<<<<<<<
 * 	OPENING_DATA_CONNECTION = dnetwork.ftp.response.OpeningDataConnection
 * 	OK = dnetwork.ftp.response.Ok
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::DataConnectionAlreadyOpened); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_37, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":322
 * 	SERVICE_READY_SOON = dnetwork.ftp.response.ServiceReadySoon
 * 	DATA_CONNECTION_ALREADY_OPENED = dnetwork.ftp.response.DataConnectionAlreadyOpened
 * 	OPENING_DATA_CONNECTION = dnetwork.ftp.response.OpeningDataConnection             # <<<<<<<<<<<<<<
 * 	OK = dnetwork.ftp.response.Ok
 * 	POINTLESS_COMMAND = dnetwork.ftp.response.PointlessCommand
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::OpeningDataConnection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_38, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":323
 * 	DATA_CONNECTION_ALREADY_OPENED = dnetwork.ftp.response.DataConnectionAlreadyOpened
 * 	OPENING_DATA_CONNECTION = dnetwork.ftp.response.OpeningDataConnection
 * 	OK = dnetwork.ftp.response.Ok             # <<<<<<<<<<<<<<
 * 	POINTLESS_COMMAND = dnetwork.ftp.response.PointlessCommand
 * 	SYSTEM_STATUS = dnetwork.ftp.response.SystemStatus
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::Ok); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__OK, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":324
 * 	OPENING_DATA_CONNECTION = dnetwork.ftp.response.OpeningDataConnection
 * 	OK = dnetwork.ftp.response.Ok
 * 	POINTLESS_COMMAND = dnetwork.ftp.response.PointlessCommand             # <<<<<<<<<<<<<<
 * 	SYSTEM_STATUS = dnetwork.ftp.response.SystemStatus
 * 	DIRECTORY_STATUS = dnetwork.ftp.response.DirectoryStatus
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::PointlessCommand); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__POINTLESS_COMMAND, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":325
 * 	OK = dnetwork.ftp.response.Ok
 * 	POINTLESS_COMMAND = dnetwork.ftp.response.PointlessCommand
 * 	SYSTEM_STATUS = dnetwork.ftp.response.SystemStatus             # <<<<<<<<<<<<<<
 * 	DIRECTORY_STATUS = dnetwork.ftp.response.DirectoryStatus
 * 	FILE_STATUS = dnetwork.ftp.response.FileStatus
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::SystemStatus); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__SYSTEM_STATUS, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":326
 * 	POINTLESS_COMMAND = dnetwork.ftp.response.PointlessCommand
 * 	SYSTEM_STATUS = dnetwork.ftp.response.SystemStatus
 * 	DIRECTORY_STATUS = dnetwork.ftp.response.DirectoryStatus             # <<<<<<<<<<<<<<
 * 	FILE_STATUS = dnetwork.ftp.response.FileStatus
 * 	HELP_MESSAGE = dnetwork.ftp.response.HelpMessage
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::DirectoryStatus); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__DIRECTORY_STATUS, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":327
 * 	SYSTEM_STATUS = dnetwork.ftp.response.SystemStatus
 * 	DIRECTORY_STATUS = dnetwork.ftp.response.DirectoryStatus
 * 	FILE_STATUS = dnetwork.ftp.response.FileStatus             # <<<<<<<<<<<<<<
 * 	HELP_MESSAGE = dnetwork.ftp.response.HelpMessage
 * 	SYSTEM_TYPE = dnetwork.ftp.response.SystemType
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::FileStatus); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__FILE_STATUS, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":328
 * 	DIRECTORY_STATUS = dnetwork.ftp.response.DirectoryStatus
 * 	FILE_STATUS = dnetwork.ftp.response.FileStatus
 * 	HELP_MESSAGE = dnetwork.ftp.response.HelpMessage             # <<<<<<<<<<<<<<
 * 	SYSTEM_TYPE = dnetwork.ftp.response.SystemType
 * 	SERVICE_READY = dnetwork.ftp.response.ServiceReady
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::HelpMessage); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__HELP_MESSAGE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":329
 * 	FILE_STATUS = dnetwork.ftp.response.FileStatus
 * 	HELP_MESSAGE = dnetwork.ftp.response.HelpMessage
 * 	SYSTEM_TYPE = dnetwork.ftp.response.SystemType             # <<<<<<<<<<<<<<
 * 	SERVICE_READY = dnetwork.ftp.response.ServiceReady
 * 	CLOSING_CONNECTION = dnetwork.ftp.response.ClosingConnection
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::SystemType); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__SYSTEM_TYPE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":330
 * 	HELP_MESSAGE = dnetwork.ftp.response.HelpMessage
 * 	SYSTEM_TYPE = dnetwork.ftp.response.SystemType
 * 	SERVICE_READY = dnetwork.ftp.response.ServiceReady             # <<<<<<<<<<<<<<
 * 	CLOSING_CONNECTION = dnetwork.ftp.response.ClosingConnection
 * 	DATA_CONNECTION_OPENED = dnetwork.ftp.response.DataConnectionOpened
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ServiceReady); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__SERVICE_READY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":331
 * 	SYSTEM_TYPE = dnetwork.ftp.response.SystemType
 * 	SERVICE_READY = dnetwork.ftp.response.ServiceReady
 * 	CLOSING_CONNECTION = dnetwork.ftp.response.ClosingConnection             # <<<<<<<<<<<<<<
 * 	DATA_CONNECTION_OPENED = dnetwork.ftp.response.DataConnectionOpened
 * 	CLOSING_DATA_CONNECTION = dnetwork.ftp.response.ClosingDataConnection
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ClosingConnection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__CLOSING_CONNECTION, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":332
 * 	SERVICE_READY = dnetwork.ftp.response.ServiceReady
 * 	CLOSING_CONNECTION = dnetwork.ftp.response.ClosingConnection
 * 	DATA_CONNECTION_OPENED = dnetwork.ftp.response.DataConnectionOpened             # <<<<<<<<<<<<<<
 * 	CLOSING_DATA_CONNECTION = dnetwork.ftp.response.ClosingDataConnection
 * 	ENTERING_PASSIVE_MODE = dnetwork.ftp.response.EnteringPassiveMode
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::DataConnectionOpened); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_39, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":333
 * 	CLOSING_CONNECTION = dnetwork.ftp.response.ClosingConnection
 * 	DATA_CONNECTION_OPENED = dnetwork.ftp.response.DataConnectionOpened
 * 	CLOSING_DATA_CONNECTION = dnetwork.ftp.response.ClosingDataConnection             # <<<<<<<<<<<<<<
 * 	ENTERING_PASSIVE_MODE = dnetwork.ftp.response.EnteringPassiveMode
 * 	LOGGED_IN = dnetwork.ftp.response.LoggedIn
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ClosingDataConnection); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_40, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":334
 * 	DATA_CONNECTION_OPENED = dnetwork.ftp.response.DataConnectionOpened
 * 	CLOSING_DATA_CONNECTION = dnetwork.ftp.response.ClosingDataConnection
 * 	ENTERING_PASSIVE_MODE = dnetwork.ftp.response.EnteringPassiveMode             # <<<<<<<<<<<<<<
 * 	LOGGED_IN = dnetwork.ftp.response.LoggedIn
 * 	FILE_ACTION_OK = dnetwork.ftp.response.FileActionOk
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::EnteringPassiveMode); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_41, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":335
 * 	CLOSING_DATA_CONNECTION = dnetwork.ftp.response.ClosingDataConnection
 * 	ENTERING_PASSIVE_MODE = dnetwork.ftp.response.EnteringPassiveMode
 * 	LOGGED_IN = dnetwork.ftp.response.LoggedIn             # <<<<<<<<<<<<<<
 * 	FILE_ACTION_OK = dnetwork.ftp.response.FileActionOk
 * 	DIRECTORY_OK = dnetwork.ftp.response.DirectoryOk
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::LoggedIn); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__LOGGED_IN, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":336
 * 	ENTERING_PASSIVE_MODE = dnetwork.ftp.response.EnteringPassiveMode
 * 	LOGGED_IN = dnetwork.ftp.response.LoggedIn
 * 	FILE_ACTION_OK = dnetwork.ftp.response.FileActionOk             # <<<<<<<<<<<<<<
 * 	DIRECTORY_OK = dnetwork.ftp.response.DirectoryOk
 * 	NEED_PASSWORD = dnetwork.ftp.response.NeedPassword
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::FileActionOk); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__FILE_ACTION_OK, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":337
 * 	LOGGED_IN = dnetwork.ftp.response.LoggedIn
 * 	FILE_ACTION_OK = dnetwork.ftp.response.FileActionOk
 * 	DIRECTORY_OK = dnetwork.ftp.response.DirectoryOk             # <<<<<<<<<<<<<<
 * 	NEED_PASSWORD = dnetwork.ftp.response.NeedPassword
 * 	NEED_ACCOUNT_TO_LOG_IN = dnetwork.ftp.response.NeedAccountToLogIn
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::DirectoryOk); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__DIRECTORY_OK, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":338
 * 	FILE_ACTION_OK = dnetwork.ftp.response.FileActionOk
 * 	DIRECTORY_OK = dnetwork.ftp.response.DirectoryOk
 * 	NEED_PASSWORD = dnetwork.ftp.response.NeedPassword             # <<<<<<<<<<<<<<
 * 	NEED_ACCOUNT_TO_LOG_IN = dnetwork.ftp.response.NeedAccountToLogIn
 * 	NEED_INFORMATION = dnetwork.ftp.response.NeedInformation
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::NeedPassword); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__NEED_PASSWORD, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":339
 * 	DIRECTORY_OK = dnetwork.ftp.response.DirectoryOk
 * 	NEED_PASSWORD = dnetwork.ftp.response.NeedPassword
 * 	NEED_ACCOUNT_TO_LOG_IN = dnetwork.ftp.response.NeedAccountToLogIn             # <<<<<<<<<<<<<<
 * 	NEED_INFORMATION = dnetwork.ftp.response.NeedInformation
 * 	SERVICE_UNAVAILABLE = dnetwork.ftp.response.ServiceUnavailable
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::NeedAccountToLogIn); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_42, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":340
 * 	NEED_PASSWORD = dnetwork.ftp.response.NeedPassword
 * 	NEED_ACCOUNT_TO_LOG_IN = dnetwork.ftp.response.NeedAccountToLogIn
 * 	NEED_INFORMATION = dnetwork.ftp.response.NeedInformation             # <<<<<<<<<<<<<<
 * 	SERVICE_UNAVAILABLE = dnetwork.ftp.response.ServiceUnavailable
 * 	DATA_CONNECTION_UNAVAILABLE = dnetwork.ftp.response.DataConnectionUnavailable
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::NeedInformation); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__NEED_INFORMATION, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":341
 * 	NEED_ACCOUNT_TO_LOG_IN = dnetwork.ftp.response.NeedAccountToLogIn
 * 	NEED_INFORMATION = dnetwork.ftp.response.NeedInformation
 * 	SERVICE_UNAVAILABLE = dnetwork.ftp.response.ServiceUnavailable             # <<<<<<<<<<<<<<
 * 	DATA_CONNECTION_UNAVAILABLE = dnetwork.ftp.response.DataConnectionUnavailable
 * 	TRANSFER_ABORTED = dnetwork.ftp.response.TransferAborted
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ServiceUnavailable); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__SERVICE_UNAVAILABLE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":342
 * 	NEED_INFORMATION = dnetwork.ftp.response.NeedInformation
 * 	SERVICE_UNAVAILABLE = dnetwork.ftp.response.ServiceUnavailable
 * 	DATA_CONNECTION_UNAVAILABLE = dnetwork.ftp.response.DataConnectionUnavailable             # <<<<<<<<<<<<<<
 * 	TRANSFER_ABORTED = dnetwork.ftp.response.TransferAborted
 * 	FILE_ACTION_ABORTED = dnetwork.ftp.response.FileActionAborted
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::DataConnectionUnavailable); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_43, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":343
 * 	SERVICE_UNAVAILABLE = dnetwork.ftp.response.ServiceUnavailable
 * 	DATA_CONNECTION_UNAVAILABLE = dnetwork.ftp.response.DataConnectionUnavailable
 * 	TRANSFER_ABORTED = dnetwork.ftp.response.TransferAborted             # <<<<<<<<<<<<<<
 * 	FILE_ACTION_ABORTED = dnetwork.ftp.response.FileActionAborted
 * 	LOCAL_ERROR = dnetwork.ftp.response.LocalError
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::TransferAborted); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__TRANSFER_ABORTED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":344
 * 	DATA_CONNECTION_UNAVAILABLE = dnetwork.ftp.response.DataConnectionUnavailable
 * 	TRANSFER_ABORTED = dnetwork.ftp.response.TransferAborted
 * 	FILE_ACTION_ABORTED = dnetwork.ftp.response.FileActionAborted             # <<<<<<<<<<<<<<
 * 	LOCAL_ERROR = dnetwork.ftp.response.LocalError
 * 	INSUFFICIENT_STORAGE_SPACE = dnetwork.ftp.response.InsufficientStorageSpace
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::FileActionAborted); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__FILE_ACTION_ABORTED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":345
 * 	TRANSFER_ABORTED = dnetwork.ftp.response.TransferAborted
 * 	FILE_ACTION_ABORTED = dnetwork.ftp.response.FileActionAborted
 * 	LOCAL_ERROR = dnetwork.ftp.response.LocalError             # <<<<<<<<<<<<<<
 * 	INSUFFICIENT_STORAGE_SPACE = dnetwork.ftp.response.InsufficientStorageSpace
 * 	COMMAND_UNKNOWN = dnetwork.ftp.response.CommandUnknown
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::LocalError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__LOCAL_ERROR, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":346
 * 	FILE_ACTION_ABORTED = dnetwork.ftp.response.FileActionAborted
 * 	LOCAL_ERROR = dnetwork.ftp.response.LocalError
 * 	INSUFFICIENT_STORAGE_SPACE = dnetwork.ftp.response.InsufficientStorageSpace             # <<<<<<<<<<<<<<
 * 	COMMAND_UNKNOWN = dnetwork.ftp.response.CommandUnknown
 * 	PARAMETERS_UNKNOWN = dnetwork.ftp.response.ParametersUnknown
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::InsufficientStorageSpace); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_44, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":347
 * 	LOCAL_ERROR = dnetwork.ftp.response.LocalError
 * 	INSUFFICIENT_STORAGE_SPACE = dnetwork.ftp.response.InsufficientStorageSpace
 * 	COMMAND_UNKNOWN = dnetwork.ftp.response.CommandUnknown             # <<<<<<<<<<<<<<
 * 	PARAMETERS_UNKNOWN = dnetwork.ftp.response.ParametersUnknown
 * 	COMMAND_NOT_IMPLEMENTED = dnetwork.ftp.response.CommandNotImplemented
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::CommandUnknown); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__COMMAND_UNKNOWN, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":348
 * 	INSUFFICIENT_STORAGE_SPACE = dnetwork.ftp.response.InsufficientStorageSpace
 * 	COMMAND_UNKNOWN = dnetwork.ftp.response.CommandUnknown
 * 	PARAMETERS_UNKNOWN = dnetwork.ftp.response.ParametersUnknown             # <<<<<<<<<<<<<<
 * 	COMMAND_NOT_IMPLEMENTED = dnetwork.ftp.response.CommandNotImplemented
 * 	BAD_COMMAND_SEQUENCE = dnetwork.ftp.response.BadCommandSequence
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ParametersUnknown); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__PARAMETERS_UNKNOWN, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":349
 * 	COMMAND_UNKNOWN = dnetwork.ftp.response.CommandUnknown
 * 	PARAMETERS_UNKNOWN = dnetwork.ftp.response.ParametersUnknown
 * 	COMMAND_NOT_IMPLEMENTED = dnetwork.ftp.response.CommandNotImplemented             # <<<<<<<<<<<<<<
 * 	BAD_COMMAND_SEQUENCE = dnetwork.ftp.response.BadCommandSequence
 * 	PARAMETER_NOT_IMPLEMENTED = dnetwork.ftp.response.ParameterNotImplemented
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::CommandNotImplemented); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_45, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":350
 * 	PARAMETERS_UNKNOWN = dnetwork.ftp.response.ParametersUnknown
 * 	COMMAND_NOT_IMPLEMENTED = dnetwork.ftp.response.CommandNotImplemented
 * 	BAD_COMMAND_SEQUENCE = dnetwork.ftp.response.BadCommandSequence             # <<<<<<<<<<<<<<
 * 	PARAMETER_NOT_IMPLEMENTED = dnetwork.ftp.response.ParameterNotImplemented
 * 	NOT_LOGGED_IN = dnetwork.ftp.response.NotLoggedIn
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::BadCommandSequence); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_46, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":351
 * 	COMMAND_NOT_IMPLEMENTED = dnetwork.ftp.response.CommandNotImplemented
 * 	BAD_COMMAND_SEQUENCE = dnetwork.ftp.response.BadCommandSequence
 * 	PARAMETER_NOT_IMPLEMENTED = dnetwork.ftp.response.ParameterNotImplemented             # <<<<<<<<<<<<<<
 * 	NOT_LOGGED_IN = dnetwork.ftp.response.NotLoggedIn
 * 	NEED_ACCOUNT_TO_STORE = dnetwork.ftp.response.NeedAccountToStore
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ParameterNotImplemented); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_47, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":352
 * 	BAD_COMMAND_SEQUENCE = dnetwork.ftp.response.BadCommandSequence
 * 	PARAMETER_NOT_IMPLEMENTED = dnetwork.ftp.response.ParameterNotImplemented
 * 	NOT_LOGGED_IN = dnetwork.ftp.response.NotLoggedIn             # <<<<<<<<<<<<<<
 * 	NEED_ACCOUNT_TO_STORE = dnetwork.ftp.response.NeedAccountToStore
 * 	FILE_UNAVAILABLE = dnetwork.ftp.response.FileUnavailable
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::NotLoggedIn); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__NOT_LOGGED_IN, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":353
 * 	PARAMETER_NOT_IMPLEMENTED = dnetwork.ftp.response.ParameterNotImplemented
 * 	NOT_LOGGED_IN = dnetwork.ftp.response.NotLoggedIn
 * 	NEED_ACCOUNT_TO_STORE = dnetwork.ftp.response.NeedAccountToStore             # <<<<<<<<<<<<<<
 * 	FILE_UNAVAILABLE = dnetwork.ftp.response.FileUnavailable
 * 	PAGE_TYPE_UNKNOWN = dnetwork.ftp.response.PageTypeUnknown
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::NeedAccountToStore); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_48, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":354
 * 	NOT_LOGGED_IN = dnetwork.ftp.response.NotLoggedIn
 * 	NEED_ACCOUNT_TO_STORE = dnetwork.ftp.response.NeedAccountToStore
 * 	FILE_UNAVAILABLE = dnetwork.ftp.response.FileUnavailable             # <<<<<<<<<<<<<<
 * 	PAGE_TYPE_UNKNOWN = dnetwork.ftp.response.PageTypeUnknown
 * 	NOT_ENOUGH_MEMORY = dnetwork.ftp.response.NotEnoughMemory
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::FileUnavailable); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__FILE_UNAVAILABLE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":355
 * 	NEED_ACCOUNT_TO_STORE = dnetwork.ftp.response.NeedAccountToStore
 * 	FILE_UNAVAILABLE = dnetwork.ftp.response.FileUnavailable
 * 	PAGE_TYPE_UNKNOWN = dnetwork.ftp.response.PageTypeUnknown             # <<<<<<<<<<<<<<
 * 	NOT_ENOUGH_MEMORY = dnetwork.ftp.response.NotEnoughMemory
 * 	FILENAME_NOT_ALLOWED = dnetwork.ftp.response.FilenameNotAllowed
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::PageTypeUnknown); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__PAGE_TYPE_UNKNOWN, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":356
 * 	FILE_UNAVAILABLE = dnetwork.ftp.response.FileUnavailable
 * 	PAGE_TYPE_UNKNOWN = dnetwork.ftp.response.PageTypeUnknown
 * 	NOT_ENOUGH_MEMORY = dnetwork.ftp.response.NotEnoughMemory             # <<<<<<<<<<<<<<
 * 	FILENAME_NOT_ALLOWED = dnetwork.ftp.response.FilenameNotAllowed
 * 	INVALID_RESPONSE = dnetwork.ftp.response.InvalidResponse
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::NotEnoughMemory); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__NOT_ENOUGH_MEMORY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":357
 * 	PAGE_TYPE_UNKNOWN = dnetwork.ftp.response.PageTypeUnknown
 * 	NOT_ENOUGH_MEMORY = dnetwork.ftp.response.NotEnoughMemory
 * 	FILENAME_NOT_ALLOWED = dnetwork.ftp.response.FilenameNotAllowed             # <<<<<<<<<<<<<<
 * 	INVALID_RESPONSE = dnetwork.ftp.response.InvalidResponse
 * 	CONNECTION_FAILED = dnetwork.ftp.response.ConnectionFailed
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::FilenameNotAllowed); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s_49, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":358
 * 	NOT_ENOUGH_MEMORY = dnetwork.ftp.response.NotEnoughMemory
 * 	FILENAME_NOT_ALLOWED = dnetwork.ftp.response.FilenameNotAllowed
 * 	INVALID_RESPONSE = dnetwork.ftp.response.InvalidResponse             # <<<<<<<<<<<<<<
 * 	CONNECTION_FAILED = dnetwork.ftp.response.ConnectionFailed
 * 	CONNECTION_CLOSED = dnetwork.ftp.response.ConnectionClosed
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::InvalidResponse); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__INVALID_RESPONSE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":359
 * 	FILENAME_NOT_ALLOWED = dnetwork.ftp.response.FilenameNotAllowed
 * 	INVALID_RESPONSE = dnetwork.ftp.response.InvalidResponse
 * 	CONNECTION_FAILED = dnetwork.ftp.response.ConnectionFailed             # <<<<<<<<<<<<<<
 * 	CONNECTION_CLOSED = dnetwork.ftp.response.ConnectionClosed
 * 	INVALID_FILE = dnetwork.ftp.response.InvalidFile
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ConnectionFailed); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__CONNECTION_FAILED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":360
 * 	INVALID_RESPONSE = dnetwork.ftp.response.InvalidResponse
 * 	CONNECTION_FAILED = dnetwork.ftp.response.ConnectionFailed
 * 	CONNECTION_CLOSED = dnetwork.ftp.response.ConnectionClosed             # <<<<<<<<<<<<<<
 * 	INVALID_FILE = dnetwork.ftp.response.InvalidFile
 * 
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::ConnectionClosed); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__CONNECTION_CLOSED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":361
 * 	CONNECTION_FAILED = dnetwork.ftp.response.ConnectionFailed
 * 	CONNECTION_CLOSED = dnetwork.ftp.response.ConnectionClosed
 * 	INVALID_FILE = dnetwork.ftp.response.InvalidFile             # <<<<<<<<<<<<<<
 * 
 * 	cdef dnetwork.ftp.Response *p_response
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Response::InvalidFile); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_FtpResponse->tp_dict, __pyx_n_s__INVALID_FILE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_FtpResponse);

  /* "sfml/network/network.pyx":438
 * 
 * cdef class Ftp:
 * 	BINARY = dnetwork.ftp.Binary             # <<<<<<<<<<<<<<
 * 	ASCII = dnetwork.ftp.Ascii
 * 	EBCDIC = dnetwork.ftp.Ebcdic
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Binary); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_Ftp->tp_dict, __pyx_n_s__BINARY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_Ftp);

  /* "sfml/network/network.pyx":439
 * cdef class Ftp:
 * 	BINARY = dnetwork.ftp.Binary
 * 	ASCII = dnetwork.ftp.Ascii             # <<<<<<<<<<<<<<
 * 	EBCDIC = dnetwork.ftp.Ebcdic
 * 
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Ascii); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_Ftp->tp_dict, __pyx_n_s__ASCII, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_Ftp);

  /* "sfml/network/network.pyx":440
 * 	BINARY = dnetwork.ftp.Binary
 * 	ASCII = dnetwork.ftp.Ascii
 * 	EBCDIC = dnetwork.ftp.Ebcdic             # <<<<<<<<<<<<<<
 * 
 * 	cdef dnetwork.Ftp *p_this
 */
  __pyx_t_2 = PyInt_FromLong(sf::Ftp::Ebcdic); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_Ftp->tp_dict, __pyx_n_s__EBCDIC, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_Ftp);

  /* "sfml/network/network.pyx":557
 * 		return wrap_ftpresponse(response)
 * 
 * 	def download(self, str remotefile, str localpath, dnetwork.ftp.TransferMode mode=dnetwork.ftp.Binary):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */
  __pyx_k_25 = sf::Ftp::Binary;

  /* "sfml/network/network.pyx":568
 * 		return wrap_ftpresponse(response)
 * 
 * 	def upload(self, str localfile, str remotepath, dnetwork.ftp.TransferMode mode=dnetwork.ftp.Binary):             # <<<<<<<<<<<<<<
 * 		cdef dnetwork.ftp.Response* response = new dnetwork.ftp.Response()
 * 
 */
  __pyx_k_28 = sf::Ftp::Binary;

  /* "sfml/network/network.pyx":581
 * 
 * cdef class HttpRequest:
 * 	GET = dnetwork.http.request.Get             # <<<<<<<<<<<<<<
 * 	POST = dnetwork.http.request.Post
 * 	HEAD = dnetwork.http.request.Head
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Request::Get); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpRequest->tp_dict, __pyx_n_s__GET, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpRequest);

  /* "sfml/network/network.pyx":582
 * cdef class HttpRequest:
 * 	GET = dnetwork.http.request.Get
 * 	POST = dnetwork.http.request.Post             # <<<<<<<<<<<<<<
 * 	HEAD = dnetwork.http.request.Head
 * 
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Request::Post); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpRequest->tp_dict, __pyx_n_s__POST, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpRequest);

  /* "sfml/network/network.pyx":583
 * 	GET = dnetwork.http.request.Get
 * 	POST = dnetwork.http.request.Post
 * 	HEAD = dnetwork.http.request.Head             # <<<<<<<<<<<<<<
 * 
 * 	cdef dnetwork.http.Request *p_this
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Request::Head); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpRequest->tp_dict, __pyx_n_s__HEAD, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpRequest);

  /* "sfml/network/network.pyx":587
 * 	cdef dnetwork.http.Request *p_this
 * 
 * 	def __init__(self, bytes uri=b"/", dnetwork.http.request.Method method=dnetwork.http.request.Get, bytes body=b""):             # <<<<<<<<<<<<<<
 * 		self.p_this = new dnetwork.http.Request(string(uri), method, string(body))
 * 
 */
  __pyx_k_32 = sf::Http::Request::Get;

  /* "sfml/network/network.pyx":619
 * 
 * cdef class HttpResponse:
 * 	OK = dnetwork.http.response.Ok             # <<<<<<<<<<<<<<
 * 	CREATED = dnetwork.http.response.Created
 * 	ACCEPTED = dnetwork.http.response.Accepted
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::Ok); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__OK, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":620
 * cdef class HttpResponse:
 * 	OK = dnetwork.http.response.Ok
 * 	CREATED = dnetwork.http.response.Created             # <<<<<<<<<<<<<<
 * 	ACCEPTED = dnetwork.http.response.Accepted
 * 	NO_CONTENT = dnetwork.http.response.NoContent
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::Created); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__CREATED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":621
 * 	OK = dnetwork.http.response.Ok
 * 	CREATED = dnetwork.http.response.Created
 * 	ACCEPTED = dnetwork.http.response.Accepted             # <<<<<<<<<<<<<<
 * 	NO_CONTENT = dnetwork.http.response.NoContent
 * 	RESET_CONTENT = dnetwork.http.response.ResetContent
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::Accepted); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__ACCEPTED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":622
 * 	CREATED = dnetwork.http.response.Created
 * 	ACCEPTED = dnetwork.http.response.Accepted
 * 	NO_CONTENT = dnetwork.http.response.NoContent             # <<<<<<<<<<<<<<
 * 	RESET_CONTENT = dnetwork.http.response.ResetContent
 * 	PARTIAL_CONTENT = dnetwork.http.response.PartialContent
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::NoContent); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__NO_CONTENT, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":623
 * 	ACCEPTED = dnetwork.http.response.Accepted
 * 	NO_CONTENT = dnetwork.http.response.NoContent
 * 	RESET_CONTENT = dnetwork.http.response.ResetContent             # <<<<<<<<<<<<<<
 * 	PARTIAL_CONTENT = dnetwork.http.response.PartialContent
 * 	MULTIPLE_CHOICES = dnetwork.http.response.MultipleChoices
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::ResetContent); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__RESET_CONTENT, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":624
 * 	NO_CONTENT = dnetwork.http.response.NoContent
 * 	RESET_CONTENT = dnetwork.http.response.ResetContent
 * 	PARTIAL_CONTENT = dnetwork.http.response.PartialContent             # <<<<<<<<<<<<<<
 * 	MULTIPLE_CHOICES = dnetwork.http.response.MultipleChoices
 * 	MOVED_PERMANENTLY = dnetwork.http.response.MovedPermanently
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::PartialContent); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__PARTIAL_CONTENT, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":625
 * 	RESET_CONTENT = dnetwork.http.response.ResetContent
 * 	PARTIAL_CONTENT = dnetwork.http.response.PartialContent
 * 	MULTIPLE_CHOICES = dnetwork.http.response.MultipleChoices             # <<<<<<<<<<<<<<
 * 	MOVED_PERMANENTLY = dnetwork.http.response.MovedPermanently
 * 	MOVED_TEMPORARILY = dnetwork.http.response.MovedTemporarily
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::MultipleChoices); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 625; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__MULTIPLE_CHOICES, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 625; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":626
 * 	PARTIAL_CONTENT = dnetwork.http.response.PartialContent
 * 	MULTIPLE_CHOICES = dnetwork.http.response.MultipleChoices
 * 	MOVED_PERMANENTLY = dnetwork.http.response.MovedPermanently             # <<<<<<<<<<<<<<
 * 	MOVED_TEMPORARILY = dnetwork.http.response.MovedTemporarily
 * 	NOT_MODIFIED = dnetwork.http.response.NotModified
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::MovedPermanently); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__MOVED_PERMANENTLY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":627
 * 	MULTIPLE_CHOICES = dnetwork.http.response.MultipleChoices
 * 	MOVED_PERMANENTLY = dnetwork.http.response.MovedPermanently
 * 	MOVED_TEMPORARILY = dnetwork.http.response.MovedTemporarily             # <<<<<<<<<<<<<<
 * 	NOT_MODIFIED = dnetwork.http.response.NotModified
 * 	BAD_REQUEST = dnetwork.http.response.BadRequest
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::MovedTemporarily); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__MOVED_TEMPORARILY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":628
 * 	MOVED_PERMANENTLY = dnetwork.http.response.MovedPermanently
 * 	MOVED_TEMPORARILY = dnetwork.http.response.MovedTemporarily
 * 	NOT_MODIFIED = dnetwork.http.response.NotModified             # <<<<<<<<<<<<<<
 * 	BAD_REQUEST = dnetwork.http.response.BadRequest
 * 	UNAUTHORIZED = dnetwork.http.response.Unauthorized
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::NotModified); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__NOT_MODIFIED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":629
 * 	MOVED_TEMPORARILY = dnetwork.http.response.MovedTemporarily
 * 	NOT_MODIFIED = dnetwork.http.response.NotModified
 * 	BAD_REQUEST = dnetwork.http.response.BadRequest             # <<<<<<<<<<<<<<
 * 	UNAUTHORIZED = dnetwork.http.response.Unauthorized
 * 	FORBIDDEN = dnetwork.http.response.Forbidden
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::BadRequest); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__BAD_REQUEST, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":630
 * 	NOT_MODIFIED = dnetwork.http.response.NotModified
 * 	BAD_REQUEST = dnetwork.http.response.BadRequest
 * 	UNAUTHORIZED = dnetwork.http.response.Unauthorized             # <<<<<<<<<<<<<<
 * 	FORBIDDEN = dnetwork.http.response.Forbidden
 * 	NOT_FOUND = dnetwork.http.response.NotFound
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::Unauthorized); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__UNAUTHORIZED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":631
 * 	BAD_REQUEST = dnetwork.http.response.BadRequest
 * 	UNAUTHORIZED = dnetwork.http.response.Unauthorized
 * 	FORBIDDEN = dnetwork.http.response.Forbidden             # <<<<<<<<<<<<<<
 * 	NOT_FOUND = dnetwork.http.response.NotFound
 * 	RANGE_NOT_SATISFIABLE = dnetwork.http.response.RangeNotSatisfiable
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::Forbidden); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__FORBIDDEN, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":632
 * 	UNAUTHORIZED = dnetwork.http.response.Unauthorized
 * 	FORBIDDEN = dnetwork.http.response.Forbidden
 * 	NOT_FOUND = dnetwork.http.response.NotFound             # <<<<<<<<<<<<<<
 * 	RANGE_NOT_SATISFIABLE = dnetwork.http.response.RangeNotSatisfiable
 * 	INTERNAL_SERVER_ERROR = dnetwork.http.response.InternalServerError
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::NotFound); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__NOT_FOUND, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":633
 * 	FORBIDDEN = dnetwork.http.response.Forbidden
 * 	NOT_FOUND = dnetwork.http.response.NotFound
 * 	RANGE_NOT_SATISFIABLE = dnetwork.http.response.RangeNotSatisfiable             # <<<<<<<<<<<<<<
 * 	INTERNAL_SERVER_ERROR = dnetwork.http.response.InternalServerError
 * 	NOT_IMPLEMENTED = dnetwork.http.response.NotImplemented
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::RangeNotSatisfiable); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s_50, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":634
 * 	NOT_FOUND = dnetwork.http.response.NotFound
 * 	RANGE_NOT_SATISFIABLE = dnetwork.http.response.RangeNotSatisfiable
 * 	INTERNAL_SERVER_ERROR = dnetwork.http.response.InternalServerError             # <<<<<<<<<<<<<<
 * 	NOT_IMPLEMENTED = dnetwork.http.response.NotImplemented
 * 	BAD_GATEWAY = dnetwork.http.response.BadGateway
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::InternalServerError); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s_51, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":635
 * 	RANGE_NOT_SATISFIABLE = dnetwork.http.response.RangeNotSatisfiable
 * 	INTERNAL_SERVER_ERROR = dnetwork.http.response.InternalServerError
 * 	NOT_IMPLEMENTED = dnetwork.http.response.NotImplemented             # <<<<<<<<<<<<<<
 * 	BAD_GATEWAY = dnetwork.http.response.BadGateway
 * 	SERVICE_NOT_AVAILABLE = dnetwork.http.response.ServiceNotAvailable
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::NotImplemented); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__NOT_IMPLEMENTED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":636
 * 	INTERNAL_SERVER_ERROR = dnetwork.http.response.InternalServerError
 * 	NOT_IMPLEMENTED = dnetwork.http.response.NotImplemented
 * 	BAD_GATEWAY = dnetwork.http.response.BadGateway             # <<<<<<<<<<<<<<
 * 	SERVICE_NOT_AVAILABLE = dnetwork.http.response.ServiceNotAvailable
 * 	GATEWAY_TIMEOUT = dnetwork.http.response.GatewayTimeout
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::BadGateway); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__BAD_GATEWAY, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":637
 * 	NOT_IMPLEMENTED = dnetwork.http.response.NotImplemented
 * 	BAD_GATEWAY = dnetwork.http.response.BadGateway
 * 	SERVICE_NOT_AVAILABLE = dnetwork.http.response.ServiceNotAvailable             # <<<<<<<<<<<<<<
 * 	GATEWAY_TIMEOUT = dnetwork.http.response.GatewayTimeout
 * 	VERSION_NOT_SUPPORTED = dnetwork.http.response.VersionNotSupported
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::ServiceNotAvailable); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s_52, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":638
 * 	BAD_GATEWAY = dnetwork.http.response.BadGateway
 * 	SERVICE_NOT_AVAILABLE = dnetwork.http.response.ServiceNotAvailable
 * 	GATEWAY_TIMEOUT = dnetwork.http.response.GatewayTimeout             # <<<<<<<<<<<<<<
 * 	VERSION_NOT_SUPPORTED = dnetwork.http.response.VersionNotSupported
 * 	INVALID_RESPONSE = dnetwork.http.response.InvalidResponse
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::GatewayTimeout); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__GATEWAY_TIMEOUT, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":639
 * 	SERVICE_NOT_AVAILABLE = dnetwork.http.response.ServiceNotAvailable
 * 	GATEWAY_TIMEOUT = dnetwork.http.response.GatewayTimeout
 * 	VERSION_NOT_SUPPORTED = dnetwork.http.response.VersionNotSupported             # <<<<<<<<<<<<<<
 * 	INVALID_RESPONSE = dnetwork.http.response.InvalidResponse
 * 	CONNECTION_FAILED = dnetwork.http.response.ConnectionFailed
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::VersionNotSupported); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s_53, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":640
 * 	GATEWAY_TIMEOUT = dnetwork.http.response.GatewayTimeout
 * 	VERSION_NOT_SUPPORTED = dnetwork.http.response.VersionNotSupported
 * 	INVALID_RESPONSE = dnetwork.http.response.InvalidResponse             # <<<<<<<<<<<<<<
 * 	CONNECTION_FAILED = dnetwork.http.response.ConnectionFailed
 * 
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::InvalidResponse); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__INVALID_RESPONSE, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":641
 * 	VERSION_NOT_SUPPORTED = dnetwork.http.response.VersionNotSupported
 * 	INVALID_RESPONSE = dnetwork.http.response.InvalidResponse
 * 	CONNECTION_FAILED = dnetwork.http.response.ConnectionFailed             # <<<<<<<<<<<<<<
 * 
 * 	cdef dnetwork.http.Response *p_this
 */
  __pyx_t_2 = PyInt_FromLong(sf::Http::Response::ConnectionFailed); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4sfml_7network_7network_HttpResponse->tp_dict, __pyx_n_s__CONNECTION_FAILED, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4sfml_7network_7network_HttpResponse);

  /* "sfml/network/network.pyx":1
 * #!/usr/bin/env python3             # <<<<<<<<<<<<<<
 * # -*- coding: utf-8 -*-
 * #
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    __Pyx_AddTraceback("init sfml.network.network", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init sfml.network.network");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result) {
        if (dict != __pyx_b) {
            PyErr_Clear();
            result = PyObject_GetAttr(__pyx_b, name);
        }
        if (!result) {
            PyErr_SetObject(PyExc_NameError, name);
        }
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%s() takes %s %"PY_FORMAT_SIZE_T"d positional argument%s (%"PY_FORMAT_SIZE_T"d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #else
        if (unlikely(!PyUnicode_Check(key)))
        #endif
            goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    return 0;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else /* Python 3+ */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (!PyExceptionClass_Check(type)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        }
        else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        }
        else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        if (!value) {
            value = PyObject_CallObject(type, NULL);
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }
bad:
    return;
}
#endif

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}



static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
    /* It appears that PyMethodDescr_Type is not anywhere exposed in the Python/C API */
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = __Pyx_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    if (PyObject_TypeCheck(method, methoddescr_type)) { /* cdef classes */
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
    else if (PyMethod_Check(method)) { /* python classes */
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else if (PyCFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#ifdef __Pyx_CyFunction_USED
    else if (PyObject_TypeCheck(method, __pyx_CyFunctionType)) {
        return PyClassMethod_New(method);
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "Class-level classmethod() can only be called on "
                 "a method_descriptor or instance method.");
    return NULL;
}

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases) {
    PyObject *metaclass;
    /* Default metaclass */
#if PY_MAJOR_VERSION < 3
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = PyObject_GetAttrString(base, (char *)"__class__");
        if (!metaclass) {
            PyErr_Clear();
            metaclass = (PyObject*) Py_TYPE(base);
        }
    } else {
        metaclass = (PyObject *) &PyClass_Type;
    }
#else
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = (PyObject*) Py_TYPE(base);
    } else {
        metaclass = (PyObject *) &PyType_Type;
    }
#endif
    Py_INCREF(metaclass);
    return metaclass;
}

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *modname) {
    PyObject *result;
    PyObject *metaclass;
    if (PyDict_SetItemString(dict, "__module__", modname) < 0)
        return NULL;
    /* Python2 __metaclass__ */
    metaclass = PyDict_GetItemString(dict, "__metaclass__");
    if (metaclass) {
        Py_INCREF(metaclass);
    } else {
        metaclass = __Pyx_FindPy2Metaclass(bases);
    }
    result = PyObject_CallFunctionObjArgs(metaclass, name, bases, dict, NULL);
    Py_DECREF(metaclass);
    return result;
}

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_sf__Uint32(sf::Uint32 val) {
    const sf::Uint32 neg_one = (sf::Uint32)-1, const_zero = (sf::Uint32)0;
    const int is_unsigned = const_zero < neg_one;
    if ((sizeof(sf::Uint32) == sizeof(char))  ||
        (sizeof(sf::Uint32) == sizeof(short))) {
        return PyInt_FromLong((long)val);
    } else if ((sizeof(sf::Uint32) == sizeof(int)) ||
               (sizeof(sf::Uint32) == sizeof(long))) {
        if (is_unsigned)
            return PyLong_FromUnsignedLong((unsigned long)val);
        else
            return PyInt_FromLong((long)val);
    } else if (sizeof(sf::Uint32) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG)val);
        else
            return PyLong_FromLongLong((PY_LONG_LONG)val);
    } else {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        return _PyLong_FromByteArray(bytes, sizeof(sf::Uint32),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return (unsigned long)PyLong_AsUnsignedLong(x);
        } else {
            return (unsigned long)PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return (unsigned PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (unsigned PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return (long)PyLong_AsUnsignedLong(x);
        } else {
            return (long)PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return (PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return (signed long)PyLong_AsUnsignedLong(x);
        } else {
            return (signed long)PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return (signed PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (signed PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE sf::Uint32 __Pyx_PyInt_from_py_sf__Uint32(PyObject* x) {
    const sf::Uint32 neg_one = (sf::Uint32)-1, const_zero = (sf::Uint32)0;
    const int is_unsigned = const_zero < neg_one;
    if (sizeof(sf::Uint32) == sizeof(char)) {
        if (is_unsigned)
            return (sf::Uint32)__Pyx_PyInt_AsUnsignedChar(x);
        else
            return (sf::Uint32)__Pyx_PyInt_AsSignedChar(x);
    } else if (sizeof(sf::Uint32) == sizeof(short)) {
        if (is_unsigned)
            return (sf::Uint32)__Pyx_PyInt_AsUnsignedShort(x);
        else
            return (sf::Uint32)__Pyx_PyInt_AsSignedShort(x);
    } else if (sizeof(sf::Uint32) == sizeof(int)) {
        if (is_unsigned)
            return (sf::Uint32)__Pyx_PyInt_AsUnsignedInt(x);
        else
            return (sf::Uint32)__Pyx_PyInt_AsSignedInt(x);
    } else if (sizeof(sf::Uint32) == sizeof(long)) {
        if (is_unsigned)
            return (sf::Uint32)__Pyx_PyInt_AsUnsignedLong(x);
        else
            return (sf::Uint32)__Pyx_PyInt_AsSignedLong(x);
    } else if (sizeof(sf::Uint32) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return (sf::Uint32)__Pyx_PyInt_AsUnsignedLongLong(x);
        else
            return (sf::Uint32)__Pyx_PyInt_AsSignedLongLong(x);
    }  else {
        sf::Uint32 val;
        PyObject *v = __Pyx_PyNumber_Int(x);
        #if PY_VERSION_HEX < 0x03000000
        if (likely(v) && !PyLong_Check(v)) {
            PyObject *tmp = v;
            v = PyNumber_Long(tmp);
            Py_DECREF(tmp);
        }
        #endif
        if (likely(v)) {
            int one = 1; int is_little = (int)*(unsigned char *)&one;
            unsigned char *bytes = (unsigned char *)&val;
            int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                          bytes, sizeof(val),
                                          is_little, !is_unsigned);
            Py_DECREF(v);
            if (likely(!ret))
                return val;
        }
        return (sf::Uint32)-1;
    }
}

static CYTHON_INLINE sf::Uint8 __Pyx_PyInt_from_py_sf__Uint8(PyObject* x) {
    const sf::Uint8 neg_one = (sf::Uint8)-1, const_zero = (sf::Uint8)0;
    const int is_unsigned = const_zero < neg_one;
    if (sizeof(sf::Uint8) == sizeof(char)) {
        if (is_unsigned)
            return (sf::Uint8)__Pyx_PyInt_AsUnsignedChar(x);
        else
            return (sf::Uint8)__Pyx_PyInt_AsSignedChar(x);
    } else if (sizeof(sf::Uint8) == sizeof(short)) {
        if (is_unsigned)
            return (sf::Uint8)__Pyx_PyInt_AsUnsignedShort(x);
        else
            return (sf::Uint8)__Pyx_PyInt_AsSignedShort(x);
    } else if (sizeof(sf::Uint8) == sizeof(int)) {
        if (is_unsigned)
            return (sf::Uint8)__Pyx_PyInt_AsUnsignedInt(x);
        else
            return (sf::Uint8)__Pyx_PyInt_AsSignedInt(x);
    } else if (sizeof(sf::Uint8) == sizeof(long)) {
        if (is_unsigned)
            return (sf::Uint8)__Pyx_PyInt_AsUnsignedLong(x);
        else
            return (sf::Uint8)__Pyx_PyInt_AsSignedLong(x);
    } else if (sizeof(sf::Uint8) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return (sf::Uint8)__Pyx_PyInt_AsUnsignedLongLong(x);
        else
            return (sf::Uint8)__Pyx_PyInt_AsSignedLongLong(x);
    }  else {
        sf::Uint8 val;
        PyObject *v = __Pyx_PyNumber_Int(x);
        #if PY_VERSION_HEX < 0x03000000
        if (likely(v) && !PyLong_Check(v)) {
            PyObject *tmp = v;
            v = PyNumber_Long(tmp);
            Py_DECREF(tmp);
        }
        #endif
        if (likely(v)) {
            int one = 1; int is_little = (int)*(unsigned char *)&one;
            unsigned char *bytes = (unsigned char *)&val;
            int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                          bytes, sizeof(val),
                                          is_little, !is_unsigned);
            Py_DECREF(v);
            if (likely(!ret))
                return val;
        }
        return (sf::Uint8)-1;
    }
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}


/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
