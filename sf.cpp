/* Generated by Cython 0.14.1 on Tue Mar  8 01:57:42 2011 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#else

#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif

#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif

#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif

#if PY_VERSION_HEX < 0x02040000
  #define METH_COEXIST 0
  #define PyDict_CheckExact(op) (Py_TYPE(op) == &PyDict_Type)
  #define PyDict_Contains(d,o)   PySequence_Contains(d,o)
#endif

#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   PyInt_AsLong(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
#endif

#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)

#endif

#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#endif

#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif

#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif

#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)

#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif

#ifdef __cplusplus
#define __PYX_EXTERN_C extern "C"
#else
#define __PYX_EXTERN_C extern
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE_API__sf
#include "stdlib.h"
#include <vector>
#include "SFML/Graphics.hpp"
#include "stdio.h"
#include <string>
#include "SFML/System.hpp"
#include "SFML/Audio.hpp"

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif


/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || defined(__INTEL_COMPILER)
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))


#ifdef __GNUC__
/* Test for GCC > 2.95 */
#if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
#define likely(x)   __builtin_expect(!!(x), 1)
#define unlikely(x) __builtin_expect(!!(x), 0)
#else /* __GNUC__ > 2 ... */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "sf.pyx",
};

/* Type declarations */

/* "sf.pyx":52
 * 
 * # Forward declarations
 * cdef class RenderWindow             # <<<<<<<<<<<<<<
 * 
 * 
 */

struct __pyx_obj_2sf_RenderWindow {
  PyObject_HEAD
  sf::RenderWindow *p_this;
  struct __pyx_obj_2sf_Input *input;
};

/* "sf.pyx":2113
 * 
 * 
 * cdef class ShapePointProxy:             # <<<<<<<<<<<<<<
 *     cdef decl.Shape *parent
 *     cdef unsigned int index
 */

struct __pyx_obj_2sf_ShapePointProxy {
  PyObject_HEAD
  struct __pyx_vtabstruct_2sf_ShapePointProxy *__pyx_vtab;
  sf::Shape *parent;
  unsigned int index;
};

/* "sf.pyx":1992
 * 
 * 
 * cdef class RenderImage:             # <<<<<<<<<<<<<<
 *     cdef decl.RenderImage *p_this
 * 
 */

struct __pyx_obj_2sf_RenderImage {
  PyObject_HEAD
  sf::RenderImage *p_this;
};

/* "sf.pyx":1183
 * 
 * 
 * cdef class Drawable:             # <<<<<<<<<<<<<<
 *     cdef decl.Drawable *p_this
 * 
 */

struct __pyx_obj_2sf_Drawable {
  PyObject_HEAD
  sf::Drawable *p_this;
};

/* "sf.pyx":1417
 * 
 * 
 * cdef class Sprite(Drawable):             # <<<<<<<<<<<<<<
 *     def __cinit__(self, Image image=None, tuple position=(0,0),
 *                   tuple scale=(1,1), float rotation=0.0,
 */

struct __pyx_obj_2sf_Sprite {
  struct __pyx_obj_2sf_Drawable __pyx_base;
};

/* "sf.pyx":457
 * 
 * 
 * cdef class Color:             # <<<<<<<<<<<<<<
 *     BLACK = Color(0, 0, 0)
 *     WHITE = Color(255, 255, 255)
 */

struct __pyx_obj_2sf_Color {
  PyObject_HEAD
  sf::Color *p_this;
};

/* "sf.pyx":1504
 * 
 * 
 * cdef class VideoMode:             # <<<<<<<<<<<<<<
 *     cdef decl.VideoMode *p_this
 *     cdef bint delete_this
 */

struct __pyx_obj_2sf_VideoMode {
  PyObject_HEAD
  sf::VideoMode *p_this;
  int delete_this;
};

/* "sf.pyx":2177
 * 
 * 
 * cdef class Shape(Drawable):             # <<<<<<<<<<<<<<
 *     def __cinit__(self):
 *         self.p_this = <decl.Drawable*>new decl.Shape()
 */

struct __pyx_obj_2sf_Shape {
  struct __pyx_obj_2sf_Drawable __pyx_base;
};

/* "sf.pyx":639
 * 
 * 
 * cdef class Sound:             # <<<<<<<<<<<<<<
 *     cdef declaudio.Sound *p_this
 * 
 */

struct __pyx_obj_2sf_Sound {
  PyObject_HEAD
  sf::Sound *p_this;
};

/* "sf.pyx":87
 * 
 * 
 * cdef class Key:             # <<<<<<<<<<<<<<
 *     A = declkey.A
 *     B = declkey.B
 */

struct __pyx_obj_2sf_Key {
  PyObject_HEAD
};

/* "sf.pyx":2095
 * 
 * 
 * cdef class ShapePoint:             # <<<<<<<<<<<<<<
 *     cdef public float x, y
 *     cdef public Color color, outline
 */

struct __pyx_obj_2sf_ShapePoint {
  PyObject_HEAD
  float x;
  float y;
  struct __pyx_obj_2sf_Color *color;
  struct __pyx_obj_2sf_Color *outline;
};

/* "sf.pyx":1624
 * 
 * 
 * cdef class View:             # <<<<<<<<<<<<<<
 *     cdef decl.View *p_this
 * 
 */

struct __pyx_obj_2sf_View {
  PyObject_HEAD
  sf::View *p_this;
};

/* "sf.pyx":903
 * 
 * 
 * cdef class Glyph:             # <<<<<<<<<<<<<<
 *     cdef decl.Glyph *p_this
 * 
 */

struct __pyx_obj_2sf_Glyph {
  PyObject_HEAD
  sf::Glyph *p_this;
};

/* "sf.pyx":201
 * 
 * 
 * cdef class Style:             # <<<<<<<<<<<<<<
 *     NONE = declstyle.None
 *     TITLEEBAR = declstyle.Titlebar
 */

struct __pyx_obj_2sf_Style {
  PyObject_HEAD
};

/* "sf.pyx":62
 * 
 * 
 * cdef class Mouse:             # <<<<<<<<<<<<<<
 *     LEFT = declmouse.Left
 *     RIGHT = declmouse.Right
 */

struct __pyx_obj_2sf_Mouse {
  PyObject_HEAD
};

/* "sf.pyx":944
 * 
 * 
 * cdef class Font:             # <<<<<<<<<<<<<<
 *     cdef decl.Font *p_this
 *     cdef bint delete_this
 */

struct __pyx_obj_2sf_Font {
  PyObject_HEAD
  sf::Font *p_this;
  int delete_this;
};

/* "sf.pyx":282
 * 
 * 
 * cdef class FloatRect:             # <<<<<<<<<<<<<<
 *     cdef decl.FloatRect *p_this
 * 
 */

struct __pyx_obj_2sf_FloatRect {
  PyObject_HEAD
  sf::FloatRect *p_this;
};

/* "sf.pyx":1733
 * 
 * 
 * cdef class Shader:             # <<<<<<<<<<<<<<
 *     cdef decl.Shader *p_this
 * 
 */

struct __pyx_obj_2sf_Shader {
  PyObject_HEAD
  sf::Shader *p_this;
};

/* "sf.pyx":210
 * 
 * 
 * cdef class IntRect:             # <<<<<<<<<<<<<<
 *     cdef decl.IntRect *p_this
 * 
 */

struct __pyx_obj_2sf_IntRect {
  PyObject_HEAD
  sf::IntRect *p_this;
};

/* "sf.pyx":72
 * 
 * 
 * cdef class Joy:             # <<<<<<<<<<<<<<
 *     AXIS_X = decljoy.AxisX
 *     AXIS_Y = decljoy.AxisY
 */

struct __pyx_obj_2sf_Joy {
  PyObject_HEAD
};

/* "sf.pyx":439
 * 
 * 
 * cdef class Clock:             # <<<<<<<<<<<<<<
 *     cdef decl.Clock *p_this
 * 
 */

struct __pyx_obj_2sf_Clock {
  PyObject_HEAD
  sf::Clock *p_this;
};

/* "sf.pyx":868
 * 
 * 
 * cdef class Input:             # <<<<<<<<<<<<<<
 *     cdef decl.Input *p_this
 * 
 */

struct __pyx_obj_2sf_Input {
  PyObject_HEAD
  sf::Input *p_this;
};

/* "sf.pyx":541
 * 
 * 
 * cdef class SoundBuffer:             # <<<<<<<<<<<<<<
 *     cdef declaudio.SoundBuffer *p_this
 *     cdef bint delete_this
 */

struct __pyx_obj_2sf_SoundBuffer {
  PyObject_HEAD
  sf::SoundBuffer *p_this;
  int delete_this;
};

/* "sf.pyx":344
 * 
 * 
 * cdef class Matrix3:             # <<<<<<<<<<<<<<
 *     cdef decl.Matrix3 *p_this
 * 
 */

struct __pyx_obj_2sf_Matrix3 {
  PyObject_HEAD
  sf::Matrix3 *p_this;
};

/* "sf.pyx":1009
 * 
 * 
 * cdef class Image:             # <<<<<<<<<<<<<<
 *     cdef decl.Image *p_this
 *     cdef bint delete_this
 */

struct __pyx_obj_2sf_Image {
  PyObject_HEAD
  sf::Image *p_this;
  int delete_this;
};

/* "sf.pyx":193
 * 
 * 
 * cdef class BlendMode:             # <<<<<<<<<<<<<<
 *     ALPHA = declblendmode.Alpha
 *     ADD = declblendmode.Add
 */

struct __pyx_obj_2sf_BlendMode {
  PyObject_HEAD
};

/* "sf.pyx":1295
 * 
 * 
 * cdef class Text(Drawable):             # <<<<<<<<<<<<<<
 *     cdef bint is_unicode
 * 
 */

struct __pyx_obj_2sf_Text {
  struct __pyx_obj_2sf_Drawable __pyx_base;
  int is_unicode;
};


/* "sf.pyx":2113
 * 
 * 
 * cdef class ShapePointProxy:             # <<<<<<<<<<<<<<
 *     cdef decl.Shape *parent
 *     cdef unsigned int index
 */

struct __pyx_vtabstruct_2sf_ShapePointProxy {
  PyObject *(*_init)(struct __pyx_obj_2sf_ShapePointProxy *, sf::Shape *, unsigned int);
};
static struct __pyx_vtabstruct_2sf_ShapePointProxy *__pyx_vtabptr_2sf_ShapePointProxy;

#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif

#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct * __Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
  end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
  }
  #define __Pyx_RefNannySetupContext(name)           void *__pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
  #define __Pyx_RefNannyFinishContext()           __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r) __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r) __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r) __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XDECREF(r) do { if((r) != NULL) {__Pyx_DECREF(r);} } while(0)
#else
  #define __Pyx_RefNannySetupContext(name)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);} } while(0)
#define __Pyx_XGOTREF(r) do { if((r) != NULL) {__Pyx_GOTREF(r);} } while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],     PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,     const char* function_name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static CYTHON_INLINE PyObject* __Pyx_tp_new(PyObject* type_obj) {
    return (PyObject*) (((PyTypeObject*)(type_obj))->tp_new(
        (PyTypeObject*)(type_obj), __pyx_empty_tuple, NULL));
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/


static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}


#define __Pyx_GetItemInt_List(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}


#define __Pyx_GetItemInt(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i) {
    PyObject *r;
    if (PyList_CheckExact(o) && ((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (PyTuple_CheckExact(o) && ((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (Py_TYPE(o)->tp_as_sequence && Py_TYPE(o)->tp_as_sequence->sq_item && (likely(i >= 0))) {
        r = PySequence_GetItem(o, i);
    }
    else {
        r = __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
    }
    return r;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index); /*proto*/

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict,
    const char* function_name, int kw_allowed); /*proto*/

#include <string.h>

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases); /*proto*/

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *modname); /*proto*/

#include "descrobject.h"
static PyObject* __Pyx_Method_ClassMethod(PyObject *method); /*proto*/

#define __pyx_binding_PyCFunctionType_USED 1

typedef struct {
    PyCFunctionObject func;
} __pyx_binding_PyCFunctionType_object;

static PyTypeObject __pyx_binding_PyCFunctionType_type;
static PyTypeObject *__pyx_binding_PyCFunctionType = NULL;

static PyObject *__pyx_binding_PyCFunctionType_NewEx(PyMethodDef *ml, PyObject *self, PyObject *module); /* proto */
#define __pyx_binding_PyCFunctionType_New(ml, self) __pyx_binding_PyCFunctionType_NewEx(ml, self, NULL)

static int __pyx_binding_PyCFunctionType_init(void); /* proto */

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_sf__Int16(sf::Int16);

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static void __Pyx_WriteUnraisable(const char *name); /*proto*/

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

static void __Pyx_AddTraceback(const char *funcname); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/
/* Module declarations from libc.stdlib */

/* Module declarations from libcpp.vector */

/* Module declarations from declblendmode */

/* Module declarations from declkey */

/* Module declarations from declmouse */

/* Module declarations from decl */

/* Module declarations from declaudio */

/* Module declarations from declevent */

/* Module declarations from decljoy */

/* Module declarations from declstyle */

/* Module declarations from sf */

static PyTypeObject *__pyx_ptype_2sf_RenderWindow = 0;
static PyTypeObject *__pyx_ptype_2sf_Mouse = 0;
static PyTypeObject *__pyx_ptype_2sf_Joy = 0;
static PyTypeObject *__pyx_ptype_2sf_Key = 0;
static PyTypeObject *__pyx_ptype_2sf_BlendMode = 0;
static PyTypeObject *__pyx_ptype_2sf_Style = 0;
static PyTypeObject *__pyx_ptype_2sf_IntRect = 0;
static PyTypeObject *__pyx_ptype_2sf_FloatRect = 0;
static PyTypeObject *__pyx_ptype_2sf_Matrix3 = 0;
static PyTypeObject *__pyx_ptype_2sf_Clock = 0;
static PyTypeObject *__pyx_ptype_2sf_Color = 0;
static PyTypeObject *__pyx_ptype_2sf_SoundBuffer = 0;
static PyTypeObject *__pyx_ptype_2sf_Sound = 0;
static PyTypeObject *__pyx_ptype_2sf_Input = 0;
static PyTypeObject *__pyx_ptype_2sf_Glyph = 0;
static PyTypeObject *__pyx_ptype_2sf_Font = 0;
static PyTypeObject *__pyx_ptype_2sf_Image = 0;
static PyTypeObject *__pyx_ptype_2sf_Drawable = 0;
static PyTypeObject *__pyx_ptype_2sf_Text = 0;
static PyTypeObject *__pyx_ptype_2sf_Sprite = 0;
static PyTypeObject *__pyx_ptype_2sf_VideoMode = 0;
static PyTypeObject *__pyx_ptype_2sf_View = 0;
static PyTypeObject *__pyx_ptype_2sf_Shader = 0;
static PyTypeObject *__pyx_ptype_2sf_RenderImage = 0;
static PyTypeObject *__pyx_ptype_2sf_ShapePoint = 0;
static PyTypeObject *__pyx_ptype_2sf_ShapePointProxy = 0;
static PyTypeObject *__pyx_ptype_2sf_Shape = 0;
static struct __pyx_obj_2sf_IntRect *__pyx_f_2sf_wrap_int_rect_instance(sf::IntRect *); /*proto*/
static sf::IntRect __pyx_f_2sf_convert_to_int_rect(PyObject *); /*proto*/
static struct __pyx_obj_2sf_FloatRect *__pyx_f_2sf_wrap_float_rect_instance(sf::FloatRect *); /*proto*/
static struct __pyx_obj_2sf_Matrix3 *__pyx_f_2sf_wrap_matrix_instance(sf::Matrix3 *); /*proto*/
static PyObject *__pyx_f_2sf_wrap_color_instance(sf::Color *); /*proto*/
static struct __pyx_obj_2sf_SoundBuffer *__pyx_f_2sf_wrap_sound_buffer_instance(sf::SoundBuffer *, int); /*proto*/
static PyObject *__pyx_f_2sf_wrap_event_instance(sf::Event *); /*proto*/
static struct __pyx_obj_2sf_Glyph *__pyx_f_2sf_wrap_glyph_instance(sf::Glyph *); /*proto*/
static struct __pyx_obj_2sf_Font *__pyx_f_2sf_wrap_font_instance(sf::Font *, int); /*proto*/
static struct __pyx_obj_2sf_Image *__pyx_f_2sf_wrap_image_instance(sf::Image *, int); /*proto*/
static struct __pyx_obj_2sf_VideoMode *__pyx_f_2sf_wrap_video_mode_instance(sf::VideoMode *, int); /*proto*/
static struct __pyx_obj_2sf_View *__pyx_f_2sf_wrap_view_instance(sf::View *); /*proto*/
static struct __pyx_obj_2sf_Shader *__pyx_f_2sf_wrap_shader_instance(sf::Shader *); /*proto*/
static struct __pyx_obj_2sf_Shape *__pyx_f_2sf_wrap_shape_instance(sf::Shape *); /*proto*/
#define __Pyx_MODULE_NAME "sf"
static int __pyx_module_is_main_sf = 0;

/* Implementation of sf */
static PyObject *__pyx_builtin_Exception;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_NotImplemented;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_StopIteration;
static char __pyx_k_1[] = "IntRect(left={0.left!r}, top={0.top!r}, width={0.width!r}, height={0.height!r})";
static char __pyx_k_2[] = "Required IntRect or tuple, found {0}";
static char __pyx_k_3[] = "FloatRect(left={0.left!r}, top={0.top!r}, width={0.width!r}, height={0.height!r})";
static char __pyx_k_4[] = "[{0} {4} {8} {12}]\n[{1} {5} {9} {13}]\n[{2} {6} {10} {14}]\n[{3} {7} {11} {15}]";
static char __pyx_k_5[] = "Color({0.r}, {0.g}, {0.b}, {0.a})";
static char __pyx_k_6[] = "Use static methods like load_from_file to create SoundBuffer instances";
static char __pyx_k_8[] = "Couldn't load sound buffer from ";
static char __pyx_k_9[] = "Couldn't load sound buffer from memory";
static char __pyx_k_11[] = "Couldn't allocate memory for samples";
static char __pyx_k_13[] = "Couldn't load samples";
static char __pyx_k_17[] = "IsRelativeToListener";
static char __pyx_k_18[] = "SetRelativeToListener";
static char __pyx_k_19[] = "MOUSE_BUTTON_PRESSED";
static char __pyx_k_20[] = "MOUSE_BUTTON_RELEASED";
static char __pyx_k_21[] = "You shouldn't need to create Input objects";
static char __pyx_k_23[] = "IsJoystickButtonDown";
static char __pyx_k_24[] = "Couldn't load font from file ";
static char __pyx_k_25[] = "Couldn't load font from memory";
static char __pyx_k_27[] = "Couldn't load file {0}";
static char __pyx_k_28[] = "Couldn't copy screen";
static char __pyx_k_30[] = "Couldn't create image from memory";
static char __pyx_k_32[] = "Couldn't create image from pixels";
static char __pyx_k_35[] = "source_rect must be tuple or IntRect";
static char __pyx_k_37[] = "Drawable is abstact";
static char __pyx_k_39[] = "\000";
static char __pyx_k_40[] = "utf-32-le";
static char __pyx_k_42[] = "Expected str or unicode for string, got {0}";
static char __pyx_k_50[] = "{0.width}x{0.height}x{0.bits_per_pixel}";
static char __pyx_k_51[] = "VideoMode({0.width}, {0.height}, {0.bits_per_pixel})";
static char __pyx_k_52[] = "Couldn't load shader from file ";
static char __pyx_k_53[] = "Couldn't load shader from memory";
static char __pyx_k_55[] = "SetJoystickThreshold";
static char __pyx_k_56[] = "The ContextSettings class isn't available yet";
static char __pyx_k_58[] = "The WindowHandle class isn't available yet";
static char __pyx_k_60[] = "Error reported by C++ method sf::RenderWindow::WaitEvent()";
static char __pyx_k_62[] = "The Shader class isn't available yet";
static char __pyx_k_66[] = "GetPointOutlineColor";
static char __pyx_k_67[] = "SetPointOutlineColor";
static char __pyx_k_74[] = "Python wrapper for the C++ library SFML 2 (Simple and Fast\nMultimedia Library).";
static char __pyx_k_75[] = "Base class for the exceptions raised by PySFML.";
static char __pyx_k_84[] = "Lost focus";
static char __pyx_k_85[] = "Gained focus";
static char __pyx_k_86[] = "Text entered";
static char __pyx_k_87[] = "Key pressed";
static char __pyx_k_88[] = "Key released";
static char __pyx_k_89[] = "Mouse wheel moved";
static char __pyx_k_90[] = "Mouse button pressed";
static char __pyx_k_91[] = "Mouse button released";
static char __pyx_k_92[] = "Mouse moved";
static char __pyx_k_93[] = "Mouse entered";
static char __pyx_k_94[] = "Mouse left";
static char __pyx_k_95[] = "Joystick button pressed";
static char __pyx_k_96[] = "Joystick button released";
static char __pyx_k_97[] = "Joystick moved";
static char __pyx_k_98[] = "get_fullscreen_modes";
static char __pyx_k_99[] = "from_center_and_size";
static char __pyx_k__A[] = "A";
static char __pyx_k__B[] = "B";
static char __pyx_k__C[] = "C";
static char __pyx_k__D[] = "D";
static char __pyx_k__E[] = "E";
static char __pyx_k__F[] = "F";
static char __pyx_k__G[] = "G";
static char __pyx_k__H[] = "H";
static char __pyx_k__I[] = "I";
static char __pyx_k__J[] = "J";
static char __pyx_k__K[] = "K";
static char __pyx_k__L[] = "L";
static char __pyx_k__M[] = "M";
static char __pyx_k__N[] = "N";
static char __pyx_k__O[] = "O";
static char __pyx_k__P[] = "P";
static char __pyx_k__Q[] = "Q";
static char __pyx_k__R[] = "R";
static char __pyx_k__S[] = "S";
static char __pyx_k__T[] = "T";
static char __pyx_k__U[] = "U";
static char __pyx_k__V[] = "V";
static char __pyx_k__W[] = "W";
static char __pyx_k__X[] = "X";
static char __pyx_k__Y[] = "Y";
static char __pyx_k__Z[] = "Z";
static char __pyx_k__a[] = "a";
static char __pyx_k__b[] = "b";
static char __pyx_k__g[] = "g";
static char __pyx_k__r[] = "r";
static char __pyx_k__w[] = "w";
static char __pyx_k__x[] = "x";
static char __pyx_k__y[] = "y";
static char __pyx_k__z[] = "z";
static char __pyx_k__F1[] = "F1";
static char __pyx_k__F2[] = "F2";
static char __pyx_k__F3[] = "F3";
static char __pyx_k__F4[] = "F4";
static char __pyx_k__F5[] = "F5";
static char __pyx_k__F6[] = "F6";
static char __pyx_k__F7[] = "F7";
static char __pyx_k__F8[] = "F8";
static char __pyx_k__F9[] = "F9";
static char __pyx_k__UP[] = "UP";
static char __pyx_k__sf[] = "sf";
static char __pyx_k__ADD[] = "ADD";
static char __pyx_k__Alt[] = "Alt";
static char __pyx_k__END[] = "END";
static char __pyx_k__F10[] = "F10";
static char __pyx_k__F11[] = "F11";
static char __pyx_k__F12[] = "F12";
static char __pyx_k__F13[] = "F13";
static char __pyx_k__F14[] = "F14";
static char __pyx_k__F15[] = "F15";
static char __pyx_k__Key[] = "Key";
static char __pyx_k__RED[] = "RED";
static char __pyx_k__TAB[] = "TAB";
static char __pyx_k__Top[] = "Top";
static char __pyx_k__a00[] = "a00";
static char __pyx_k__a01[] = "a01";
static char __pyx_k__a02[] = "a02";
static char __pyx_k__a10[] = "a10";
static char __pyx_k__a11[] = "a11";
static char __pyx_k__a12[] = "a12";
static char __pyx_k__a20[] = "a20";
static char __pyx_k__a21[] = "a21";
static char __pyx_k__a22[] = "a22";
static char __pyx_k__alt[] = "alt";
static char __pyx_k__end[] = "end";
static char __pyx_k__p1x[] = "p1x";
static char __pyx_k__p1y[] = "p1y";
static char __pyx_k__p2x[] = "p2x";
static char __pyx_k__p2y[] = "p2y";
static char __pyx_k__top[] = "top";
static char __pyx_k__Axis[] = "Axis";
static char __pyx_k__BACK[] = "BACK";
static char __pyx_k__BLUE[] = "BLUE";
static char __pyx_k__BOLD[] = "BOLD";
static char __pyx_k__Bind[] = "Bind";
static char __pyx_k__CYAN[] = "CYAN";
static char __pyx_k__Code[] = "Code";
static char __pyx_k__Copy[] = "Copy";
static char __pyx_k__DASH[] = "DASH";
static char __pyx_k__DOWN[] = "DOWN";
static char __pyx_k__Draw[] = "Draw";
static char __pyx_k__HOME[] = "HOME";
static char __pyx_k__LEFT[] = "LEFT";
static char __pyx_k__Left[] = "Left";
static char __pyx_k__MENU[] = "MENU";
static char __pyx_k__Move[] = "Move";
static char __pyx_k__NONE[] = "NONE";
static char __pyx_k__NUM0[] = "NUM0";
static char __pyx_k__NUM1[] = "NUM1";
static char __pyx_k__NUM2[] = "NUM2";
static char __pyx_k__NUM3[] = "NUM3";
static char __pyx_k__NUM4[] = "NUM4";
static char __pyx_k__NUM5[] = "NUM5";
static char __pyx_k__NUM6[] = "NUM6";
static char __pyx_k__NUM7[] = "NUM7";
static char __pyx_k__NUM8[] = "NUM8";
static char __pyx_k__NUM9[] = "NUM9";
static char __pyx_k__Play[] = "Play";
static char __pyx_k__SetX[] = "SetX";
static char __pyx_k__SetY[] = "SetY";
static char __pyx_k__Show[] = "Show";
static char __pyx_k__Size[] = "Size";
static char __pyx_k__Stop[] = "Stop";
static char __pyx_k__Type[] = "Type";
static char __pyx_k__Zoom[] = "Zoom";
static char __pyx_k__axis[] = "axis";
static char __pyx_k__bold[] = "bold";
static char __pyx_k__code[] = "code";
static char __pyx_k__font[] = "font";
static char __pyx_k__left[] = "left";
static char __pyx_k__line[] = "line";
static char __pyx_k__loop[] = "loop";
static char __pyx_k__mode[] = "mode";
static char __pyx_k__name[] = "name";
static char __pyx_k__rect[] = "rect";
static char __pyx_k__size[] = "size";
static char __pyx_k__type[] = "type";
static char __pyx_k__view[] = "view";
static char __pyx_k__ALPHA[] = "ALPHA";
static char __pyx_k__BLACK[] = "BLACK";
static char __pyx_k__CLOSE[] = "CLOSE";
static char __pyx_k__COMMA[] = "COMMA";
static char __pyx_k__COUNT[] = "COUNT";
static char __pyx_k__Clear[] = "Clear";
static char __pyx_k__Close[] = "Close";
static char __pyx_k__Delta[] = "Delta";
static char __pyx_k__EQUAL[] = "EQUAL";
static char __pyx_k__Event[] = "Event";
static char __pyx_k__FlipX[] = "FlipX";
static char __pyx_k__FlipY[] = "FlipY";
static char __pyx_k__GREEN[] = "GREEN";
static char __pyx_k__L_ALT[] = "L_ALT";
static char __pyx_k__NAMES[] = "NAMES";
static char __pyx_k__PAUSE[] = "PAUSE";
static char __pyx_k__Pause[] = "Pause";
static char __pyx_k__QUOTE[] = "QUOTE";
static char __pyx_k__RIGHT[] = "RIGHT";
static char __pyx_k__R_ALT[] = "R_ALT";
static char __pyx_k__Reset[] = "Reset";
static char __pyx_k__SLASH[] = "SLASH";
static char __pyx_k__SPACE[] = "SPACE";
static char __pyx_k__Scale[] = "Scale";
static char __pyx_k__Shift[] = "Shift";
static char __pyx_k__TILDE[] = "TILDE";
static char __pyx_k__WHITE[] = "WHITE";
static char __pyx_k__Width[] = "Width";
static char __pyx_k___init[] = "_init";
static char __pyx_k__alpha[] = "alpha";
static char __pyx_k__begin[] = "begin";
static char __pyx_k__c_str[] = "c_str";
static char __pyx_k__color[] = "color";
static char __pyx_k__delta[] = "delta";
static char __pyx_k__depth[] = "depth";
static char __pyx_k__first[] = "first";
static char __pyx_k__image[] = "image";
static char __pyx_k__index[] = "index";
static char __pyx_k__input[] = "input";
static char __pyx_k__pitch[] = "pitch";
static char __pyx_k__scale[] = "scale";
static char __pyx_k__shift[] = "shift";
static char __pyx_k__style[] = "style";
static char __pyx_k__title[] = "title";
static char __pyx_k__width[] = "width";
static char __pyx_k__AXIS_R[] = "AXIS_R";
static char __pyx_k__AXIS_U[] = "AXIS_U";
static char __pyx_k__AXIS_V[] = "AXIS_V";
static char __pyx_k__AXIS_X[] = "AXIS_X";
static char __pyx_k__AXIS_Y[] = "AXIS_Y";
static char __pyx_k__AXIS_Z[] = "AXIS_Z";
static char __pyx_k__Bounds[] = "Bounds";
static char __pyx_k__Button[] = "Button";
static char __pyx_k__CLOSED[] = "CLOSED";
static char __pyx_k__Closed[] = "Closed";
static char __pyx_k__Create[] = "Create";
static char __pyx_k__DELETE[] = "DELETE";
static char __pyx_k__DIVIDE[] = "DIVIDE";
static char __pyx_k__ESCAPE[] = "ESCAPE";
static char __pyx_k__Height[] = "Height";
static char __pyx_k__INSERT[] = "INSERT";
static char __pyx_k__ITALIC[] = "ITALIC";
static char __pyx_k__MIDDLE[] = "MIDDLE";
static char __pyx_k__PAUSED[] = "PAUSED";
static char __pyx_k__PERIOD[] = "PERIOD";
static char __pyx_k__RESIZE[] = "RESIZE";
static char __pyx_k__RETURN[] = "RETURN";
static char __pyx_k__Resize[] = "Resize";
static char __pyx_k__Rotate[] = "Rotate";
static char __pyx_k__Unbind[] = "Unbind";
static char __pyx_k__YELLOW[] = "YELLOW";
static char __pyx_k__append[] = "append";
static char __pyx_k__buffer[] = "buffer";
static char __pyx_k__button[] = "button";
static char __pyx_k__center[] = "center";
static char __pyx_k__circle[] = "circle";
static char __pyx_k__create[] = "create";
static char __pyx_k__decode[] = "decode";
static char __pyx_k__dest_x[] = "dest_x";
static char __pyx_k__dest_y[] = "dest_y";
static char __pyx_k__encode[] = "encode";
static char __pyx_k__format[] = "format";
static char __pyx_k__height[] = "height";
static char __pyx_k__joy_id[] = "joy_id";
static char __pyx_k__origin[] = "origin";
static char __pyx_k__p_this[] = "p_this";
static char __pyx_k__parent[] = "parent";
static char __pyx_k__pixels[] = "pixels";
static char __pyx_k__points[] = "points";
static char __pyx_k__radius[] = "radius";
static char __pyx_k__second[] = "second";
static char __pyx_k__shader[] = "shader";
static char __pyx_k__source[] = "source";
static char __pyx_k__string[] = "string";
static char __pyx_k__volume[] = "volume";
static char __pyx_k__window[] = "window";
static char __pyx_k__Advance[] = "Advance";
static char __pyx_k__Control[] = "Control";
static char __pyx_k__Display[] = "Display";
static char __pyx_k__GetData[] = "GetData";
static char __pyx_k__GetFont[] = "GetFont";
static char __pyx_k__GetLoop[] = "GetLoop";
static char __pyx_k__GetRect[] = "GetRect";
static char __pyx_k__GetSize[] = "GetSize";
static char __pyx_k__GetView[] = "GetView";
static char __pyx_k__IsValid[] = "IsValid";
static char __pyx_k__JoyMove[] = "JoyMove";
static char __pyx_k__L_SHIFT[] = "L_SHIFT";
static char __pyx_k__MAGENTA[] = "MAGENTA";
static char __pyx_k__NUMPAD0[] = "NUMPAD0";
static char __pyx_k__NUMPAD1[] = "NUMPAD1";
static char __pyx_k__NUMPAD2[] = "NUMPAD2";
static char __pyx_k__NUMPAD3[] = "NUMPAD3";
static char __pyx_k__NUMPAD4[] = "NUMPAD4";
static char __pyx_k__NUMPAD5[] = "NUMPAD5";
static char __pyx_k__NUMPAD6[] = "NUMPAD6";
static char __pyx_k__NUMPAD7[] = "NUMPAD7";
static char __pyx_k__NUMPAD8[] = "NUMPAD8";
static char __pyx_k__NUMPAD9[] = "NUMPAD9";
static char __pyx_k__PAGE_UP[] = "PAGE_UP";
static char __pyx_k__PLAYING[] = "PLAYING";
static char __pyx_k__REGULAR[] = "REGULAR";
static char __pyx_k__RESIZED[] = "RESIZED";
static char __pyx_k__R_SHIFT[] = "R_SHIFT";
static char __pyx_k__Resized[] = "Resized";
static char __pyx_k__STOPPED[] = "STOPPED";
static char __pyx_k__SetFont[] = "SetFont";
static char __pyx_k__SetIcon[] = "SetIcon";
static char __pyx_k__SetLoop[] = "SetLoop";
static char __pyx_k__SetSize[] = "SetSize";
static char __pyx_k__SetView[] = "SetView";
static char __pyx_k__SubRect[] = "SubRect";
static char __pyx_k____str__[] = "__str__";
static char __pyx_k__control[] = "control";
static char __pyx_k__outline[] = "outline";
static char __pyx_k__samples[] = "samples";
static char __pyx_k__AXIS_POV[] = "AXIS_POV";
static char __pyx_k__AddPoint[] = "AddPoint";
static char __pyx_k__Contains[] = "Contains";
static char __pyx_k__GetColor[] = "GetColor";
static char __pyx_k__GetEvent[] = "GetEvent";
static char __pyx_k__GetGlyph[] = "GetGlyph";
static char __pyx_k__GetImage[] = "GetImage";
static char __pyx_k__GetInput[] = "GetInput";
static char __pyx_k__GetPitch[] = "GetPitch";
static char __pyx_k__GetPixel[] = "GetPixel";
static char __pyx_k__GetScale[] = "GetScale";
static char __pyx_k__GetStyle[] = "GetStyle";
static char __pyx_k__GetWidth[] = "GetWidth";
static char __pyx_k__IDENTITY[] = "IDENTITY";
static char __pyx_k__IsOpened[] = "IsOpened";
static char __pyx_k__IsSmooth[] = "IsSmooth";
static char __pyx_k__L_SYSTEM[] = "L_SYSTEM";
static char __pyx_k__MULTIPLY[] = "MULTIPLY";
static char __pyx_k__Position[] = "Position";
static char __pyx_k__R_SYSTEM[] = "R_SYSTEM";
static char __pyx_k__SUBTRACT[] = "SUBTRACT";
static char __pyx_k__SetColor[] = "SetColor";
static char __pyx_k__SetImage[] = "SetImage";
static char __pyx_k__SetPitch[] = "SetPitch";
static char __pyx_k__SetPixel[] = "SetPixel";
static char __pyx_k__SetScale[] = "SetScale";
static char __pyx_k__SetStyle[] = "SetStyle";
static char __pyx_k__SetTitle[] = "SetTitle";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__drawable[] = "drawable";
static char __pyx_k__position[] = "position";
static char __pyx_k__rotation[] = "rotation";
static char __pyx_k__Exception[] = "Exception";
static char __pyx_k__GetBuffer[] = "GetBuffer";
static char __pyx_k__GetCenter[] = "GetCenter";
static char __pyx_k__GetHeight[] = "GetHeight";
static char __pyx_k__GetMouseX[] = "GetMouseX";
static char __pyx_k__GetMouseY[] = "GetMouseY";
static char __pyx_k__GetOrigin[] = "GetOrigin";
static char __pyx_k__GetStatus[] = "GetStatus";
static char __pyx_k__GetString[] = "GetString";
static char __pyx_k__GetVolume[] = "GetVolume";
static char __pyx_k__IsKeyDown[] = "IsKeyDown";
static char __pyx_k__JOY_MOVED[] = "JOY_MOVED";
static char __pyx_k__JoyButton[] = "JoyButton";
static char __pyx_k__L_BRACKET[] = "L_BRACKET";
static char __pyx_k__L_CONTROL[] = "L_CONTROL";
static char __pyx_k__MouseMove[] = "MouseMove";
static char __pyx_k__PAGE_DOWN[] = "PAGE_DOWN";
static char __pyx_k__R_BRACKET[] = "R_BRACKET";
static char __pyx_k__R_CONTROL[] = "R_CONTROL";
static char __pyx_k__SetActive[] = "SetActive";
static char __pyx_k__SetBuffer[] = "SetBuffer";
static char __pyx_k__SetCenter[] = "SetCenter";
static char __pyx_k__SetOrigin[] = "SetOrigin";
static char __pyx_k__SetSmooth[] = "SetSmooth";
static char __pyx_k__SetString[] = "SetString";
static char __pyx_k__SetVolume[] = "SetVolume";
static char __pyx_k__TITLEEBAR[] = "TITLEEBAR";
static char __pyx_k__Transform[] = "Transform";
static char __pyx_k__TypeError[] = "TypeError";
static char __pyx_k__WaitEvent[] = "WaitEvent";
static char __pyx_k__X_BUTTON1[] = "X_BUTTON1";
static char __pyx_k__X_BUTTON2[] = "X_BUTTON2";
static char __pyx_k____class__[] = "__class__";
static char __pyx_k__from_rect[] = "from_rect";
static char __pyx_k__get_pixel[] = "get_pixel";
static char __pyx_k__rectangle[] = "rectangle";
static char __pyx_k__set_pixel[] = "set_pixel";
static char __pyx_k__thickness[] = "thickness";
static char __pyx_k__AXIS_COUNT[] = "AXIS_COUNT";
static char __pyx_k__BACK_SLASH[] = "BACK_SLASH";
static char __pyx_k__CopyScreen[] = "CopyScreen";
static char __pyx_k__EnableFill[] = "EnableFill";
static char __pyx_k__FULLSCREEN[] = "FULLSCREEN";
static char __pyx_k__GetInverse[] = "GetInverse";
static char __pyx_k__GetKerning[] = "GetKerning";
static char __pyx_k__GetSamples[] = "GetSamples";
static char __pyx_k__GetSubRect[] = "GetSubRect";
static char __pyx_k__Intersects[] = "Intersects";
static char __pyx_k__JoystickId[] = "JoystickId";
static char __pyx_k__LOST_FOCUS[] = "LOST_FOCUS";
static char __pyx_k__MOUSE_LEFT[] = "MOUSE_LEFT";
static char __pyx_k__MouseWheel[] = "MouseWheel";
static char __pyx_k__SEMI_COLON[] = "SEMI_COLON";
static char __pyx_k__SaveToFile[] = "SaveToFile";
static char __pyx_k__SetSubRect[] = "SetSubRect";
static char __pyx_k__SetTexture[] = "SetTexture";
static char __pyx_k__UNDERLINED[] = "UNDERLINED";
static char __pyx_k__code_point[] = "code_point";
static char __pyx_k__is_unicode[] = "is_unicode";
static char __pyx_k__projection[] = "projection";
static char __pyx_k__GetDuration[] = "GetDuration";
static char __pyx_k__GetPosition[] = "GetPosition";
static char __pyx_k__GetRotation[] = "GetRotation";
static char __pyx_k__GetViewport[] = "GetViewport";
static char __pyx_k__KEY_PRESSED[] = "KEY_PRESSED";
static char __pyx_k__MOUSE_MOVED[] = "MOUSE_MOVED";
static char __pyx_k__MouseButton[] = "MouseButton";
static char __pyx_k__SetPosition[] = "SetPosition";
static char __pyx_k__SetRotation[] = "SetRotation";
static char __pyx_k__SetViewport[] = "SetViewport";
static char __pyx_k__apply_alpha[] = "apply_alpha";
static char __pyx_k__delete_this[] = "delete_this";
static char __pyx_k__get_mouse_x[] = "get_mouse_x";
static char __pyx_k__get_mouse_y[] = "get_mouse_y";
static char __pyx_k__joystick_id[] = "joystick_id";
static char __pyx_k__sample_rate[] = "sample_rate";
static char __pyx_k__source_rect[] = "source_rect";
static char __pyx_k__translation[] = "translation";
static char __pyx_k__BUTTON_COUNT[] = "BUTTON_COUNT";
static char __pyx_k__BitsPerPixel[] = "BitsPerPixel";
static char __pyx_k__DEFAULT_FONT[] = "DEFAULT_FONT";
static char __pyx_k__GAINED_FOCUS[] = "GAINED_FOCUS";
static char __pyx_k__GetBlendMode[] = "GetBlendMode";
static char __pyx_k__GetFrameTime[] = "GetFrameTime";
static char __pyx_k__GetPixelsPtr[] = "GetPixelsPtr";
static char __pyx_k__GetTexCoords[] = "GetTexCoords";
static char __pyx_k__IS_AVAILABLE[] = "IS_AVAILABLE";
static char __pyx_k__KEY_RELEASED[] = "KEY_RELEASED";
static char __pyx_k__LoadFromFile[] = "LoadFromFile";
static char __pyx_k__SaveGLStates[] = "SaveGLStates";
static char __pyx_k__SetBlendMode[] = "SetBlendMode";
static char __pyx_k__SetParameter[] = "SetParameter";
static char __pyx_k__TEXT_ENTERED[] = "TEXT_ENTERED";
static char __pyx_k__ToAnsiString[] = "ToAnsiString";
static char __pyx_k__UpdatePixels[] = "UpdatePixels";
static char __pyx_k__intersection[] = "intersection";
static char __pyx_k__ConvertCoords[] = "ConvertCoords";
static char __pyx_k__EnableOutline[] = "EnableOutline";
static char __pyx_k__GetPointColor[] = "GetPointColor";
static char __pyx_k__GetSampleRate[] = "GetSampleRate";
static char __pyx_k__MOUSE_ENTERED[] = "MOUSE_ENTERED";
static char __pyx_k__SetPointColor[] = "SetPointColor";
static char __pyx_k__StopIteration[] = "StopIteration";
static char __pyx_k__outline_color[] = "outline_color";
static char __pyx_k__Get4x4Elements[] = "Get4x4Elements";
static char __pyx_k__GetAttenuation[] = "GetAttenuation";
static char __pyx_k__GetDefaultView[] = "GetDefaultView";
static char __pyx_k__GetElapsedTime[] = "GetElapsedTime";
static char __pyx_k__GetLineSpacing[] = "GetLineSpacing";
static char __pyx_k__GetMinDistance[] = "GetMinDistance";
static char __pyx_k__GetPointsCount[] = "GetPointsCount";
static char __pyx_k__LoadFromMemory[] = "LoadFromMemory";
static char __pyx_k__LoadFromPixels[] = "LoadFromPixels";
static char __pyx_k__NotImplemented[] = "NotImplemented";
static char __pyx_k__SetAttenuation[] = "SetAttenuation";
static char __pyx_k__SetMinDistance[] = "SetMinDistance";
static char __pyx_k__bits_per_pixel[] = "bits_per_pixel";
static char __pyx_k__channels_count[] = "channels_count";
static char __pyx_k__character_size[] = "character_size";
static char __pyx_k__load_from_file[] = "load_from_file";
static char __pyx_k__transformation[] = "transformation";
static char __pyx_k__EnableKeyRepeat[] = "EnableKeyRepeat";
static char __pyx_k__GetCharacterPos[] = "GetCharacterPos";
static char __pyx_k__GetJoystickAxis[] = "GetJoystickAxis";
static char __pyx_k__GetSamplesCount[] = "GetSamplesCount";
static char __pyx_k__LoadFromSamples[] = "LoadFromSamples";
static char __pyx_k__PySFMLException[] = "PySFMLException";
static char __pyx_k__RestoreGLStates[] = "RestoreGLStates";
static char __pyx_k__ShowMouseCursor[] = "ShowMouseCursor";
static char __pyx_k__GetChannelsCount[] = "GetChannelsCount";
static char __pyx_k__GetCharacterSize[] = "GetCharacterSize";
static char __pyx_k__GetPlayingOffset[] = "GetPlayingOffset";
static char __pyx_k__GetPointPosition[] = "GetPointPosition";
static char __pyx_k__SetCharacterSize[] = "SetCharacterSize";
static char __pyx_k__SetPlayingOffset[] = "SetPlayingOffset";
static char __pyx_k__SetPointPosition[] = "SetPointPosition";
static char __pyx_k__TransformToLocal[] = "TransformToLocal";
static char __pyx_k__get_desktop_mode[] = "get_desktop_mode";
static char __pyx_k__get_maximum_size[] = "get_maximum_size";
static char __pyx_k__load_from_memory[] = "load_from_memory";
static char __pyx_k__load_from_pixels[] = "load_from_pixels";
static char __pyx_k__load_from_screen[] = "load_from_screen";
static char __pyx_k__IsMouseButtonDown[] = "IsMouseButtonDown";
static char __pyx_k__MOUSE_WHEEL_MOVED[] = "MOUSE_WHEEL_MOVED";
static char __pyx_k__SetCursorPosition[] = "SetCursorPosition";
static char __pyx_k__SetFramerateLimit[] = "SetFramerateLimit";
static char __pyx_k__TransformToGlobal[] = "TransformToGlobal";
static char __pyx_k__load_from_samples[] = "load_from_samples";
static char __pyx_k__JOY_BUTTON_PRESSED[] = "JOY_BUTTON_PRESSED";
static char __pyx_k__adjust_to_new_size[] = "adjust_to_new_size";
static char __pyx_k__CreateMaskFromColor[] = "CreateMaskFromColor";
static char __pyx_k__GetOutlineThickness[] = "GetOutlineThickness";
static char __pyx_k__JOY_BUTTON_RELEASED[] = "JOY_BUTTON_RELEASED";
static char __pyx_k__NotImplementedError[] = "NotImplementedError";
static char __pyx_k__SetOutlineThickness[] = "SetOutlineThickness";
static char __pyx_k__rectangle_from_rect[] = "rectangle_from_rect";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_11;
static PyObject *__pyx_kp_s_13;
static PyObject *__pyx_n_s_17;
static PyObject *__pyx_n_s_18;
static PyObject *__pyx_n_s_19;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_n_s_20;
static PyObject *__pyx_kp_s_21;
static PyObject *__pyx_n_s_23;
static PyObject *__pyx_kp_s_24;
static PyObject *__pyx_kp_s_25;
static PyObject *__pyx_kp_s_27;
static PyObject *__pyx_kp_s_28;
static PyObject *__pyx_kp_s_3;
static PyObject *__pyx_kp_s_30;
static PyObject *__pyx_kp_s_32;
static PyObject *__pyx_kp_s_35;
static PyObject *__pyx_kp_s_37;
static PyObject *__pyx_kp_s_39;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_kp_s_40;
static PyObject *__pyx_kp_s_42;
static PyObject *__pyx_kp_s_5;
static PyObject *__pyx_kp_s_50;
static PyObject *__pyx_kp_s_51;
static PyObject *__pyx_kp_s_52;
static PyObject *__pyx_kp_s_53;
static PyObject *__pyx_n_s_55;
static PyObject *__pyx_kp_s_56;
static PyObject *__pyx_kp_s_58;
static PyObject *__pyx_kp_s_6;
static PyObject *__pyx_kp_s_60;
static PyObject *__pyx_kp_s_62;
static PyObject *__pyx_n_s_66;
static PyObject *__pyx_n_s_67;
static PyObject *__pyx_kp_s_75;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_kp_s_84;
static PyObject *__pyx_kp_s_85;
static PyObject *__pyx_kp_s_86;
static PyObject *__pyx_kp_s_87;
static PyObject *__pyx_kp_s_88;
static PyObject *__pyx_kp_s_89;
static PyObject *__pyx_kp_s_9;
static PyObject *__pyx_kp_s_90;
static PyObject *__pyx_kp_s_91;
static PyObject *__pyx_kp_s_92;
static PyObject *__pyx_kp_s_93;
static PyObject *__pyx_kp_s_94;
static PyObject *__pyx_kp_s_95;
static PyObject *__pyx_kp_s_96;
static PyObject *__pyx_kp_s_97;
static PyObject *__pyx_n_s_98;
static PyObject *__pyx_n_s_99;
static PyObject *__pyx_n_s__A;
static PyObject *__pyx_n_s__ADD;
static PyObject *__pyx_n_s__ALPHA;
static PyObject *__pyx_n_s__AXIS_COUNT;
static PyObject *__pyx_n_s__AXIS_POV;
static PyObject *__pyx_n_s__AXIS_R;
static PyObject *__pyx_n_s__AXIS_U;
static PyObject *__pyx_n_s__AXIS_V;
static PyObject *__pyx_n_s__AXIS_X;
static PyObject *__pyx_n_s__AXIS_Y;
static PyObject *__pyx_n_s__AXIS_Z;
static PyObject *__pyx_n_s__AddPoint;
static PyObject *__pyx_n_s__Advance;
static PyObject *__pyx_n_s__Alt;
static PyObject *__pyx_n_s__Axis;
static PyObject *__pyx_n_s__B;
static PyObject *__pyx_n_s__BACK;
static PyObject *__pyx_n_s__BACK_SLASH;
static PyObject *__pyx_n_s__BLACK;
static PyObject *__pyx_n_s__BLUE;
static PyObject *__pyx_n_s__BOLD;
static PyObject *__pyx_n_s__BUTTON_COUNT;
static PyObject *__pyx_n_s__Bind;
static PyObject *__pyx_n_s__BitsPerPixel;
static PyObject *__pyx_n_s__Bounds;
static PyObject *__pyx_n_s__Button;
static PyObject *__pyx_n_s__C;
static PyObject *__pyx_n_s__CLOSE;
static PyObject *__pyx_n_s__CLOSED;
static PyObject *__pyx_n_s__COMMA;
static PyObject *__pyx_n_s__COUNT;
static PyObject *__pyx_n_s__CYAN;
static PyObject *__pyx_n_s__Clear;
static PyObject *__pyx_n_s__Close;
static PyObject *__pyx_n_s__Closed;
static PyObject *__pyx_n_s__Code;
static PyObject *__pyx_n_s__Contains;
static PyObject *__pyx_n_s__Control;
static PyObject *__pyx_n_s__ConvertCoords;
static PyObject *__pyx_n_s__Copy;
static PyObject *__pyx_n_s__CopyScreen;
static PyObject *__pyx_n_s__Create;
static PyObject *__pyx_n_s__CreateMaskFromColor;
static PyObject *__pyx_n_s__D;
static PyObject *__pyx_n_s__DASH;
static PyObject *__pyx_n_s__DEFAULT_FONT;
static PyObject *__pyx_n_s__DELETE;
static PyObject *__pyx_n_s__DIVIDE;
static PyObject *__pyx_n_s__DOWN;
static PyObject *__pyx_n_s__Delta;
static PyObject *__pyx_n_s__Display;
static PyObject *__pyx_n_s__Draw;
static PyObject *__pyx_n_s__E;
static PyObject *__pyx_n_s__END;
static PyObject *__pyx_n_s__EQUAL;
static PyObject *__pyx_n_s__ESCAPE;
static PyObject *__pyx_n_s__EnableFill;
static PyObject *__pyx_n_s__EnableKeyRepeat;
static PyObject *__pyx_n_s__EnableOutline;
static PyObject *__pyx_n_s__Event;
static PyObject *__pyx_n_s__Exception;
static PyObject *__pyx_n_s__F;
static PyObject *__pyx_n_s__F1;
static PyObject *__pyx_n_s__F10;
static PyObject *__pyx_n_s__F11;
static PyObject *__pyx_n_s__F12;
static PyObject *__pyx_n_s__F13;
static PyObject *__pyx_n_s__F14;
static PyObject *__pyx_n_s__F15;
static PyObject *__pyx_n_s__F2;
static PyObject *__pyx_n_s__F3;
static PyObject *__pyx_n_s__F4;
static PyObject *__pyx_n_s__F5;
static PyObject *__pyx_n_s__F6;
static PyObject *__pyx_n_s__F7;
static PyObject *__pyx_n_s__F8;
static PyObject *__pyx_n_s__F9;
static PyObject *__pyx_n_s__FULLSCREEN;
static PyObject *__pyx_n_s__FlipX;
static PyObject *__pyx_n_s__FlipY;
static PyObject *__pyx_n_s__G;
static PyObject *__pyx_n_s__GAINED_FOCUS;
static PyObject *__pyx_n_s__GREEN;
static PyObject *__pyx_n_s__Get4x4Elements;
static PyObject *__pyx_n_s__GetAttenuation;
static PyObject *__pyx_n_s__GetBlendMode;
static PyObject *__pyx_n_s__GetBuffer;
static PyObject *__pyx_n_s__GetCenter;
static PyObject *__pyx_n_s__GetChannelsCount;
static PyObject *__pyx_n_s__GetCharacterPos;
static PyObject *__pyx_n_s__GetCharacterSize;
static PyObject *__pyx_n_s__GetColor;
static PyObject *__pyx_n_s__GetData;
static PyObject *__pyx_n_s__GetDefaultView;
static PyObject *__pyx_n_s__GetDuration;
static PyObject *__pyx_n_s__GetElapsedTime;
static PyObject *__pyx_n_s__GetEvent;
static PyObject *__pyx_n_s__GetFont;
static PyObject *__pyx_n_s__GetFrameTime;
static PyObject *__pyx_n_s__GetGlyph;
static PyObject *__pyx_n_s__GetHeight;
static PyObject *__pyx_n_s__GetImage;
static PyObject *__pyx_n_s__GetInput;
static PyObject *__pyx_n_s__GetInverse;
static PyObject *__pyx_n_s__GetJoystickAxis;
static PyObject *__pyx_n_s__GetKerning;
static PyObject *__pyx_n_s__GetLineSpacing;
static PyObject *__pyx_n_s__GetLoop;
static PyObject *__pyx_n_s__GetMinDistance;
static PyObject *__pyx_n_s__GetMouseX;
static PyObject *__pyx_n_s__GetMouseY;
static PyObject *__pyx_n_s__GetOrigin;
static PyObject *__pyx_n_s__GetOutlineThickness;
static PyObject *__pyx_n_s__GetPitch;
static PyObject *__pyx_n_s__GetPixel;
static PyObject *__pyx_n_s__GetPixelsPtr;
static PyObject *__pyx_n_s__GetPlayingOffset;
static PyObject *__pyx_n_s__GetPointColor;
static PyObject *__pyx_n_s__GetPointPosition;
static PyObject *__pyx_n_s__GetPointsCount;
static PyObject *__pyx_n_s__GetPosition;
static PyObject *__pyx_n_s__GetRect;
static PyObject *__pyx_n_s__GetRotation;
static PyObject *__pyx_n_s__GetSampleRate;
static PyObject *__pyx_n_s__GetSamples;
static PyObject *__pyx_n_s__GetSamplesCount;
static PyObject *__pyx_n_s__GetScale;
static PyObject *__pyx_n_s__GetSize;
static PyObject *__pyx_n_s__GetStatus;
static PyObject *__pyx_n_s__GetString;
static PyObject *__pyx_n_s__GetStyle;
static PyObject *__pyx_n_s__GetSubRect;
static PyObject *__pyx_n_s__GetTexCoords;
static PyObject *__pyx_n_s__GetView;
static PyObject *__pyx_n_s__GetViewport;
static PyObject *__pyx_n_s__GetVolume;
static PyObject *__pyx_n_s__GetWidth;
static PyObject *__pyx_n_s__H;
static PyObject *__pyx_n_s__HOME;
static PyObject *__pyx_n_s__Height;
static PyObject *__pyx_n_s__I;
static PyObject *__pyx_n_s__IDENTITY;
static PyObject *__pyx_n_s__INSERT;
static PyObject *__pyx_n_s__IS_AVAILABLE;
static PyObject *__pyx_n_s__ITALIC;
static PyObject *__pyx_n_s__Intersects;
static PyObject *__pyx_n_s__IsKeyDown;
static PyObject *__pyx_n_s__IsMouseButtonDown;
static PyObject *__pyx_n_s__IsOpened;
static PyObject *__pyx_n_s__IsSmooth;
static PyObject *__pyx_n_s__IsValid;
static PyObject *__pyx_n_s__J;
static PyObject *__pyx_n_s__JOY_BUTTON_PRESSED;
static PyObject *__pyx_n_s__JOY_BUTTON_RELEASED;
static PyObject *__pyx_n_s__JOY_MOVED;
static PyObject *__pyx_n_s__JoyButton;
static PyObject *__pyx_n_s__JoyMove;
static PyObject *__pyx_n_s__JoystickId;
static PyObject *__pyx_n_s__K;
static PyObject *__pyx_n_s__KEY_PRESSED;
static PyObject *__pyx_n_s__KEY_RELEASED;
static PyObject *__pyx_n_s__Key;
static PyObject *__pyx_n_s__L;
static PyObject *__pyx_n_s__LEFT;
static PyObject *__pyx_n_s__LOST_FOCUS;
static PyObject *__pyx_n_s__L_ALT;
static PyObject *__pyx_n_s__L_BRACKET;
static PyObject *__pyx_n_s__L_CONTROL;
static PyObject *__pyx_n_s__L_SHIFT;
static PyObject *__pyx_n_s__L_SYSTEM;
static PyObject *__pyx_n_s__Left;
static PyObject *__pyx_n_s__LoadFromFile;
static PyObject *__pyx_n_s__LoadFromMemory;
static PyObject *__pyx_n_s__LoadFromPixels;
static PyObject *__pyx_n_s__LoadFromSamples;
static PyObject *__pyx_n_s__M;
static PyObject *__pyx_n_s__MAGENTA;
static PyObject *__pyx_n_s__MENU;
static PyObject *__pyx_n_s__MIDDLE;
static PyObject *__pyx_n_s__MOUSE_ENTERED;
static PyObject *__pyx_n_s__MOUSE_LEFT;
static PyObject *__pyx_n_s__MOUSE_MOVED;
static PyObject *__pyx_n_s__MOUSE_WHEEL_MOVED;
static PyObject *__pyx_n_s__MULTIPLY;
static PyObject *__pyx_n_s__MouseButton;
static PyObject *__pyx_n_s__MouseMove;
static PyObject *__pyx_n_s__MouseWheel;
static PyObject *__pyx_n_s__Move;
static PyObject *__pyx_n_s__N;
static PyObject *__pyx_n_s__NAMES;
static PyObject *__pyx_n_s__NONE;
static PyObject *__pyx_n_s__NUM0;
static PyObject *__pyx_n_s__NUM1;
static PyObject *__pyx_n_s__NUM2;
static PyObject *__pyx_n_s__NUM3;
static PyObject *__pyx_n_s__NUM4;
static PyObject *__pyx_n_s__NUM5;
static PyObject *__pyx_n_s__NUM6;
static PyObject *__pyx_n_s__NUM7;
static PyObject *__pyx_n_s__NUM8;
static PyObject *__pyx_n_s__NUM9;
static PyObject *__pyx_n_s__NUMPAD0;
static PyObject *__pyx_n_s__NUMPAD1;
static PyObject *__pyx_n_s__NUMPAD2;
static PyObject *__pyx_n_s__NUMPAD3;
static PyObject *__pyx_n_s__NUMPAD4;
static PyObject *__pyx_n_s__NUMPAD5;
static PyObject *__pyx_n_s__NUMPAD6;
static PyObject *__pyx_n_s__NUMPAD7;
static PyObject *__pyx_n_s__NUMPAD8;
static PyObject *__pyx_n_s__NUMPAD9;
static PyObject *__pyx_n_s__NotImplemented;
static PyObject *__pyx_n_s__NotImplementedError;
static PyObject *__pyx_n_s__O;
static PyObject *__pyx_n_s__P;
static PyObject *__pyx_n_s__PAGE_DOWN;
static PyObject *__pyx_n_s__PAGE_UP;
static PyObject *__pyx_n_s__PAUSE;
static PyObject *__pyx_n_s__PAUSED;
static PyObject *__pyx_n_s__PERIOD;
static PyObject *__pyx_n_s__PLAYING;
static PyObject *__pyx_n_s__Pause;
static PyObject *__pyx_n_s__Play;
static PyObject *__pyx_n_s__Position;
static PyObject *__pyx_n_s__PySFMLException;
static PyObject *__pyx_n_s__Q;
static PyObject *__pyx_n_s__QUOTE;
static PyObject *__pyx_n_s__R;
static PyObject *__pyx_n_s__RED;
static PyObject *__pyx_n_s__REGULAR;
static PyObject *__pyx_n_s__RESIZE;
static PyObject *__pyx_n_s__RESIZED;
static PyObject *__pyx_n_s__RETURN;
static PyObject *__pyx_n_s__RIGHT;
static PyObject *__pyx_n_s__R_ALT;
static PyObject *__pyx_n_s__R_BRACKET;
static PyObject *__pyx_n_s__R_CONTROL;
static PyObject *__pyx_n_s__R_SHIFT;
static PyObject *__pyx_n_s__R_SYSTEM;
static PyObject *__pyx_n_s__Reset;
static PyObject *__pyx_n_s__Resize;
static PyObject *__pyx_n_s__Resized;
static PyObject *__pyx_n_s__RestoreGLStates;
static PyObject *__pyx_n_s__Rotate;
static PyObject *__pyx_n_s__S;
static PyObject *__pyx_n_s__SEMI_COLON;
static PyObject *__pyx_n_s__SLASH;
static PyObject *__pyx_n_s__SPACE;
static PyObject *__pyx_n_s__STOPPED;
static PyObject *__pyx_n_s__SUBTRACT;
static PyObject *__pyx_n_s__SaveGLStates;
static PyObject *__pyx_n_s__SaveToFile;
static PyObject *__pyx_n_s__Scale;
static PyObject *__pyx_n_s__SetActive;
static PyObject *__pyx_n_s__SetAttenuation;
static PyObject *__pyx_n_s__SetBlendMode;
static PyObject *__pyx_n_s__SetBuffer;
static PyObject *__pyx_n_s__SetCenter;
static PyObject *__pyx_n_s__SetCharacterSize;
static PyObject *__pyx_n_s__SetColor;
static PyObject *__pyx_n_s__SetCursorPosition;
static PyObject *__pyx_n_s__SetFont;
static PyObject *__pyx_n_s__SetFramerateLimit;
static PyObject *__pyx_n_s__SetIcon;
static PyObject *__pyx_n_s__SetImage;
static PyObject *__pyx_n_s__SetLoop;
static PyObject *__pyx_n_s__SetMinDistance;
static PyObject *__pyx_n_s__SetOrigin;
static PyObject *__pyx_n_s__SetOutlineThickness;
static PyObject *__pyx_n_s__SetParameter;
static PyObject *__pyx_n_s__SetPitch;
static PyObject *__pyx_n_s__SetPixel;
static PyObject *__pyx_n_s__SetPlayingOffset;
static PyObject *__pyx_n_s__SetPointColor;
static PyObject *__pyx_n_s__SetPointPosition;
static PyObject *__pyx_n_s__SetPosition;
static PyObject *__pyx_n_s__SetRotation;
static PyObject *__pyx_n_s__SetScale;
static PyObject *__pyx_n_s__SetSize;
static PyObject *__pyx_n_s__SetSmooth;
static PyObject *__pyx_n_s__SetString;
static PyObject *__pyx_n_s__SetStyle;
static PyObject *__pyx_n_s__SetSubRect;
static PyObject *__pyx_n_s__SetTexture;
static PyObject *__pyx_n_s__SetTitle;
static PyObject *__pyx_n_s__SetView;
static PyObject *__pyx_n_s__SetViewport;
static PyObject *__pyx_n_s__SetVolume;
static PyObject *__pyx_n_s__SetX;
static PyObject *__pyx_n_s__SetY;
static PyObject *__pyx_n_s__Shift;
static PyObject *__pyx_n_s__Show;
static PyObject *__pyx_n_s__ShowMouseCursor;
static PyObject *__pyx_n_s__Size;
static PyObject *__pyx_n_s__Stop;
static PyObject *__pyx_n_s__StopIteration;
static PyObject *__pyx_n_s__SubRect;
static PyObject *__pyx_n_s__T;
static PyObject *__pyx_n_s__TAB;
static PyObject *__pyx_n_s__TEXT_ENTERED;
static PyObject *__pyx_n_s__TILDE;
static PyObject *__pyx_n_s__TITLEEBAR;
static PyObject *__pyx_n_s__ToAnsiString;
static PyObject *__pyx_n_s__Top;
static PyObject *__pyx_n_s__Transform;
static PyObject *__pyx_n_s__TransformToGlobal;
static PyObject *__pyx_n_s__TransformToLocal;
static PyObject *__pyx_n_s__Type;
static PyObject *__pyx_n_s__TypeError;
static PyObject *__pyx_n_s__U;
static PyObject *__pyx_n_s__UNDERLINED;
static PyObject *__pyx_n_s__UP;
static PyObject *__pyx_n_s__Unbind;
static PyObject *__pyx_n_s__UpdatePixels;
static PyObject *__pyx_n_s__V;
static PyObject *__pyx_n_s__W;
static PyObject *__pyx_n_s__WHITE;
static PyObject *__pyx_n_s__WaitEvent;
static PyObject *__pyx_n_s__Width;
static PyObject *__pyx_n_s__X;
static PyObject *__pyx_n_s__X_BUTTON1;
static PyObject *__pyx_n_s__X_BUTTON2;
static PyObject *__pyx_n_s__Y;
static PyObject *__pyx_n_s__YELLOW;
static PyObject *__pyx_n_s__Z;
static PyObject *__pyx_n_s__Zoom;
static PyObject *__pyx_n_s____class__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____str__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s___init;
static PyObject *__pyx_n_s__a;
static PyObject *__pyx_n_s__a00;
static PyObject *__pyx_n_s__a01;
static PyObject *__pyx_n_s__a02;
static PyObject *__pyx_n_s__a10;
static PyObject *__pyx_n_s__a11;
static PyObject *__pyx_n_s__a12;
static PyObject *__pyx_n_s__a20;
static PyObject *__pyx_n_s__a21;
static PyObject *__pyx_n_s__a22;
static PyObject *__pyx_n_s__adjust_to_new_size;
static PyObject *__pyx_n_s__alpha;
static PyObject *__pyx_n_s__alt;
static PyObject *__pyx_n_s__append;
static PyObject *__pyx_n_s__apply_alpha;
static PyObject *__pyx_n_s__axis;
static PyObject *__pyx_n_s__b;
static PyObject *__pyx_n_s__begin;
static PyObject *__pyx_n_s__bits_per_pixel;
static PyObject *__pyx_n_s__bold;
static PyObject *__pyx_n_s__buffer;
static PyObject *__pyx_n_s__button;
static PyObject *__pyx_n_s__c_str;
static PyObject *__pyx_n_s__center;
static PyObject *__pyx_n_s__channels_count;
static PyObject *__pyx_n_s__character_size;
static PyObject *__pyx_n_s__circle;
static PyObject *__pyx_n_s__code;
static PyObject *__pyx_n_s__code_point;
static PyObject *__pyx_n_s__color;
static PyObject *__pyx_n_s__control;
static PyObject *__pyx_n_s__create;
static PyObject *__pyx_n_s__decode;
static PyObject *__pyx_n_s__delete_this;
static PyObject *__pyx_n_s__delta;
static PyObject *__pyx_n_s__depth;
static PyObject *__pyx_n_s__dest_x;
static PyObject *__pyx_n_s__dest_y;
static PyObject *__pyx_n_s__drawable;
static PyObject *__pyx_n_s__encode;
static PyObject *__pyx_n_s__end;
static PyObject *__pyx_n_s__first;
static PyObject *__pyx_n_s__font;
static PyObject *__pyx_n_s__format;
static PyObject *__pyx_n_s__from_rect;
static PyObject *__pyx_n_s__g;
static PyObject *__pyx_n_s__get_desktop_mode;
static PyObject *__pyx_n_s__get_maximum_size;
static PyObject *__pyx_n_s__get_mouse_x;
static PyObject *__pyx_n_s__get_mouse_y;
static PyObject *__pyx_n_s__get_pixel;
static PyObject *__pyx_n_s__height;
static PyObject *__pyx_n_s__image;
static PyObject *__pyx_n_s__index;
static PyObject *__pyx_n_s__input;
static PyObject *__pyx_n_s__intersection;
static PyObject *__pyx_n_s__is_unicode;
static PyObject *__pyx_n_s__joy_id;
static PyObject *__pyx_n_s__joystick_id;
static PyObject *__pyx_n_s__left;
static PyObject *__pyx_n_s__line;
static PyObject *__pyx_n_s__load_from_file;
static PyObject *__pyx_n_s__load_from_memory;
static PyObject *__pyx_n_s__load_from_pixels;
static PyObject *__pyx_n_s__load_from_samples;
static PyObject *__pyx_n_s__load_from_screen;
static PyObject *__pyx_n_s__loop;
static PyObject *__pyx_n_s__mode;
static PyObject *__pyx_n_s__name;
static PyObject *__pyx_n_s__origin;
static PyObject *__pyx_n_s__outline;
static PyObject *__pyx_n_s__outline_color;
static PyObject *__pyx_n_s__p1x;
static PyObject *__pyx_n_s__p1y;
static PyObject *__pyx_n_s__p2x;
static PyObject *__pyx_n_s__p2y;
static PyObject *__pyx_n_s__p_this;
static PyObject *__pyx_n_s__parent;
static PyObject *__pyx_n_s__pitch;
static PyObject *__pyx_n_s__pixels;
static PyObject *__pyx_n_s__points;
static PyObject *__pyx_n_s__position;
static PyObject *__pyx_n_s__projection;
static PyObject *__pyx_n_s__r;
static PyObject *__pyx_n_s__radius;
static PyObject *__pyx_n_s__rect;
static PyObject *__pyx_n_s__rectangle;
static PyObject *__pyx_n_s__rectangle_from_rect;
static PyObject *__pyx_n_s__rotation;
static PyObject *__pyx_n_s__sample_rate;
static PyObject *__pyx_n_s__samples;
static PyObject *__pyx_n_s__scale;
static PyObject *__pyx_n_s__second;
static PyObject *__pyx_n_s__set_pixel;
static PyObject *__pyx_n_s__sf;
static PyObject *__pyx_n_s__shader;
static PyObject *__pyx_n_s__shift;
static PyObject *__pyx_n_s__size;
static PyObject *__pyx_n_s__source;
static PyObject *__pyx_n_s__source_rect;
static PyObject *__pyx_n_s__string;
static PyObject *__pyx_n_s__style;
static PyObject *__pyx_n_s__thickness;
static PyObject *__pyx_n_s__title;
static PyObject *__pyx_n_s__top;
static PyObject *__pyx_n_s__transformation;
static PyObject *__pyx_n_s__translation;
static PyObject *__pyx_n_s__type;
static PyObject *__pyx_n_s__view;
static PyObject *__pyx_n_s__volume;
static PyObject *__pyx_n_s__w;
static PyObject *__pyx_n_s__width;
static PyObject *__pyx_n_s__window;
static PyObject *__pyx_n_s__x;
static PyObject *__pyx_n_s__y;
static PyObject *__pyx_n_s__z;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_32;
static PyObject *__pyx_int_255;
static int __pyx_k_34;
static struct __pyx_obj_2sf_Color *__pyx_k_47;
static PyObject *__pyx_k_tuple_7;
static PyObject *__pyx_k_tuple_10;
static PyObject *__pyx_k_tuple_12;
static PyObject *__pyx_k_tuple_14;
static PyObject *__pyx_k_tuple_15;
static PyObject *__pyx_k_tuple_16;
static PyObject *__pyx_k_tuple_22;
static PyObject *__pyx_k_tuple_26;
static PyObject *__pyx_k_tuple_29;
static PyObject *__pyx_k_tuple_31;
static PyObject *__pyx_k_tuple_33;
static PyObject *__pyx_k_tuple_36;
static PyObject *__pyx_k_tuple_38;
static PyObject *__pyx_k_tuple_41;
static PyObject *__pyx_k_tuple_43;
static PyObject *__pyx_k_tuple_44;
static PyObject *__pyx_k_tuple_45;
static PyObject *__pyx_k_tuple_46;
static PyObject *__pyx_k_tuple_48;
static PyObject *__pyx_k_tuple_49;
static PyObject *__pyx_k_tuple_54;
static PyObject *__pyx_k_tuple_57;
static PyObject *__pyx_k_tuple_59;
static PyObject *__pyx_k_tuple_61;
static PyObject *__pyx_k_tuple_63;
static PyObject *__pyx_k_tuple_64;
static PyObject *__pyx_k_tuple_65;
static PyObject *__pyx_k_tuple_68;
static PyObject *__pyx_k_tuple_69;
static PyObject *__pyx_k_tuple_70;
static PyObject *__pyx_k_tuple_71;
static PyObject *__pyx_k_tuple_72;
static PyObject *__pyx_k_tuple_73;
static PyObject *__pyx_k_tuple_76;
static PyObject *__pyx_k_tuple_77;
static PyObject *__pyx_k_tuple_78;
static PyObject *__pyx_k_tuple_79;
static PyObject *__pyx_k_tuple_80;
static PyObject *__pyx_k_tuple_81;
static PyObject *__pyx_k_tuple_82;
static PyObject *__pyx_k_tuple_83;

/* "sf.pyx":213
 *     cdef decl.IntRect *p_this
 * 
 *     def __cinit__(self, int left=0, int top=0, int width=0, int height=0):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.IntRect(left, top, width, height)
 * 
 */

static int __pyx_pf_2sf_7IntRect___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_7IntRect___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_left;
  int __pyx_v_top;
  int __pyx_v_width;
  int __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__left,&__pyx_n_s__top,&__pyx_n_s__width,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__left);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__top);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
        if (value) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
        if (value) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_left = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_left == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_left = ((int)0);
    }
    if (values[1]) {
      __pyx_v_top = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_top == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_top = ((int)0);
    }
    if (values[2]) {
      __pyx_v_width = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((int)0);
    }
    if (values[3]) {
      __pyx_v_height = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_height = ((int)0);
    }
  } else {
    __pyx_v_left = ((int)0);
    __pyx_v_top = ((int)0);
    __pyx_v_width = ((int)0);
    __pyx_v_height = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_top = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_top == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_left = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_left == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.IntRect.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":214
 * 
 *     def __cinit__(self, int left=0, int top=0, int width=0, int height=0):
 *         self.p_this = new decl.IntRect(left, top, width, height)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this = new sf::IntRect(__pyx_v_left, __pyx_v_top, __pyx_v_width, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":216
 *         self.p_this = new decl.IntRect(left, top, width, height)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_7IntRect_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_7IntRect_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":217
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  delete ((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":219
 *         del self.p_this
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return ('IntRect(left={0.left!r}, top={0.top!r}, '
 *                 'width={0.width!r}, height={0.height!r})'.format(self))
 */

static PyObject *__pyx_pf_2sf_7IntRect_2__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_7IntRect_2__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__");

  /* "sf.pyx":220
 * 
 *     def __repr__(self):
 *         return ('IntRect(left={0.left!r}, top={0.top!r}, '             # <<<<<<<<<<<<<<
 *                 'width={0.width!r}, height={0.height!r})'.format(self))
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "sf.pyx":221
 *     def __repr__(self):
 *         return ('IntRect(left={0.left!r}, top={0.top!r}, '
 *                 'width={0.width!r}, height={0.height!r})'.format(self))             # <<<<<<<<<<<<<<
 * 
 *     property left:
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_1), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.IntRect.__repr__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":224
 * 
 *     property left:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Left
 * 
 */

static PyObject *__pyx_pf_2sf_7IntRect_4left___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_7IntRect_4left___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":225
 *     property left:
 *         def __get__(self):
 *             return self.p_this.Left             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Left); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.IntRect.left.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":227
 *             return self.p_this.Left
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.p_this.Left = value
 * 
 */

static int __pyx_pf_2sf_7IntRect_4left_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_7IntRect_4left_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.IntRect.left.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":228
 * 
 *         def __set__(self, int value):
 *             self.p_this.Left = value             # <<<<<<<<<<<<<<
 * 
 *     property top:
 */
  ((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Left = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":231
 * 
 *     property top:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Top
 * 
 */

static PyObject *__pyx_pf_2sf_7IntRect_3top___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_7IntRect_3top___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":232
 *     property top:
 *         def __get__(self):
 *             return self.p_this.Top             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Top); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.IntRect.top.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":234
 *             return self.p_this.Top
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.p_this.Top = value
 * 
 */

static int __pyx_pf_2sf_7IntRect_3top_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_7IntRect_3top_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.IntRect.top.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":235
 * 
 *         def __set__(self, int value):
 *             self.p_this.Top = value             # <<<<<<<<<<<<<<
 * 
 *     property width:
 */
  ((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Top = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":238
 * 
 *     property width:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Width
 * 
 */

static PyObject *__pyx_pf_2sf_7IntRect_5width___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_7IntRect_5width___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":239
 *     property width:
 *         def __get__(self):
 *             return self.p_this.Width             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.IntRect.width.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":241
 *             return self.p_this.Width
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.p_this.Width = value
 * 
 */

static int __pyx_pf_2sf_7IntRect_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_7IntRect_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.IntRect.width.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":242
 * 
 *         def __set__(self, int value):
 *             self.p_this.Width = value             # <<<<<<<<<<<<<<
 * 
 *     property height:
 */
  ((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Width = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":245
 * 
 *     property height:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Height
 * 
 */

static PyObject *__pyx_pf_2sf_7IntRect_6height___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_7IntRect_6height___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":246
 *     property height:
 *         def __get__(self):
 *             return self.p_this.Height             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Height); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.IntRect.height.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":248
 *             return self.p_this.Height
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.p_this.Height = value
 * 
 */

static int __pyx_pf_2sf_7IntRect_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_7IntRect_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.IntRect.height.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":249
 * 
 *         def __set__(self, int value):
 *             self.p_this.Height = value             # <<<<<<<<<<<<<<
 * 
 *     def contains(self, int x, int y):
 */
  ((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Height = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":251
 *             self.p_this.Height = value
 * 
 *     def contains(self, int x, int y):             # <<<<<<<<<<<<<<
 *         return self.p_this.Contains(x, y)
 * 
 */

static PyObject *__pyx_pf_2sf_7IntRect_3contains(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_7IntRect_3contains(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x;
  int __pyx_v_y;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("contains");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("contains", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "contains") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("contains", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.IntRect.contains");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":252
 * 
 *     def contains(self, int x, int y):
 *         return self.p_this.Contains(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def intersects(self, IntRect rect, IntRect intersection=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Contains(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.IntRect.contains");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":254
 *         return self.p_this.Contains(x, y)
 * 
 *     def intersects(self, IntRect rect, IntRect intersection=None):             # <<<<<<<<<<<<<<
 *         if intersection is None:
 *             return self.p_this.Intersects(rect.p_this[0])
 */

static PyObject *__pyx_pf_2sf_7IntRect_4intersects(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_7IntRect_4intersects(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_IntRect *__pyx_v_rect = 0;
  struct __pyx_obj_2sf_IntRect *__pyx_v_intersection = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__rect,&__pyx_n_s__intersection,0};
  __Pyx_RefNannySetupContext("intersects");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((struct __pyx_obj_2sf_IntRect *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rect);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__intersection);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "intersects") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_rect = ((struct __pyx_obj_2sf_IntRect *)values[0]);
    __pyx_v_intersection = ((struct __pyx_obj_2sf_IntRect *)values[1]);
  } else {
    __pyx_v_intersection = ((struct __pyx_obj_2sf_IntRect *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_intersection = ((struct __pyx_obj_2sf_IntRect *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_rect = ((struct __pyx_obj_2sf_IntRect *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.IntRect.intersects");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_ptype_2sf_IntRect, 1, "rect", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_intersection), __pyx_ptype_2sf_IntRect, 1, "intersection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":255
 * 
 *     def intersects(self, IntRect rect, IntRect intersection=None):
 *         if intersection is None:             # <<<<<<<<<<<<<<
 *             return self.p_this.Intersects(rect.p_this[0])
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_intersection) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":256
 *     def intersects(self, IntRect rect, IntRect intersection=None):
 *         if intersection is None:
 *             return self.p_this.Intersects(rect.p_this[0])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.p_this.Intersects(rect.p_this[0],
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Intersects((__pyx_v_rect->p_this[0]))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":258
 *             return self.p_this.Intersects(rect.p_this[0])
 *         else:
 *             return self.p_this.Intersects(rect.p_this[0],             # <<<<<<<<<<<<<<
 *                                           intersection.p_this[0])
 * 
 */
    __Pyx_XDECREF(__pyx_r);

    /* "sf.pyx":259
 *         else:
 *             return self.p_this.Intersects(rect.p_this[0],
 *                                           intersection.p_this[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_IntRect *)__pyx_v_self)->p_this->Intersects((__pyx_v_rect->p_this[0]), (__pyx_v_intersection->p_this[0]))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.IntRect.intersects");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":262
 * 
 * 
 * cdef IntRect wrap_int_rect_instance(decl.IntRect *p_cpp_instance):             # <<<<<<<<<<<<<<
 *     cdef IntRect ret = IntRect.__new__(IntRect)
 *     ret.p_this = p_cpp_instance
 */

static  struct __pyx_obj_2sf_IntRect *__pyx_f_2sf_wrap_int_rect_instance(sf::IntRect *__pyx_v_p_cpp_instance) {
  struct __pyx_obj_2sf_IntRect *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_IntRect *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_int_rect_instance");

  /* "sf.pyx":263
 * 
 * cdef IntRect wrap_int_rect_instance(decl.IntRect *p_cpp_instance):
 *     cdef IntRect ret = IntRect.__new__(IntRect)             # <<<<<<<<<<<<<<
 *     ret.p_this = p_cpp_instance
 * 
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_IntRect)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_IntRect)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_IntRect *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":264
 * cdef IntRect wrap_int_rect_instance(decl.IntRect *p_cpp_instance):
 *     cdef IntRect ret = IntRect.__new__(IntRect)
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":266
 *     ret.p_this = p_cpp_instance
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_IntRect *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_int_rect_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":269
 * 
 * 
 * cdef decl.IntRect convert_to_int_rect(value):             # <<<<<<<<<<<<<<
 *     if isinstance(value, IntRect):
 *         return (<IntRect>value).p_this[0]
 */

static  sf::IntRect __pyx_f_2sf_convert_to_int_rect(PyObject *__pyx_v_value) {
  sf::IntRect __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("convert_to_int_rect");

  /* "sf.pyx":270
 * 
 * cdef decl.IntRect convert_to_int_rect(value):
 *     if isinstance(value, IntRect):             # <<<<<<<<<<<<<<
 *         return (<IntRect>value).p_this[0]
 * 
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_value, ((PyObject*)__pyx_ptype_2sf_IntRect)); 
  if (__pyx_t_1) {

    /* "sf.pyx":271
 * cdef decl.IntRect convert_to_int_rect(value):
 *     if isinstance(value, IntRect):
 *         return (<IntRect>value).p_this[0]             # <<<<<<<<<<<<<<
 * 
 *     if isinstance(value, tuple):
 */
    __pyx_r = (((struct __pyx_obj_2sf_IntRect *)__pyx_v_value)->p_this[0]);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "sf.pyx":273
 *         return (<IntRect>value).p_this[0]
 * 
 *     if isinstance(value, tuple):             # <<<<<<<<<<<<<<
 *         return decl.IntRect(value[0], value[1], value[2], value[3])
 * 
 */
  __pyx_t_1 = PyTuple_Check(__pyx_v_value); 
  if (__pyx_t_1) {

    /* "sf.pyx":274
 * 
 *     if isinstance(value, tuple):
 *         return decl.IntRect(value[0], value[1], value[2], value[3])             # <<<<<<<<<<<<<<
 * 
 *     raise TypeError("Required IntRect or tuple, found {0}".format(type(value)))
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_value, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_value, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_value, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_value, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = sf::IntRect(__pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "sf.pyx":276
 *         return decl.IntRect(value[0], value[1], value[2], value[3])
 * 
 *     raise TypeError("Required IntRect or tuple, found {0}".format(type(value)))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_2), __pyx_n_s__format); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_7));
  __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
  PyTuple_SET_ITEM(__pyx_t_7, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
  __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
  __pyx_t_8 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_7));
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_8);
  __pyx_t_8 = 0;
  __pyx_t_8 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
  __Pyx_Raise(__pyx_t_8, 0, 0);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_WriteUnraisable("sf.convert_to_int_rect");
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":285
 *     cdef decl.FloatRect *p_this
 * 
 *     def __init__(self, float left=0, float top=0, float width=0,             # <<<<<<<<<<<<<<
 *                   float height=0):
 *         self.p_this = new decl.FloatRect(left, top, width, height)
 */

static int __pyx_pf_2sf_9FloatRect___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_9FloatRect___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_left;
  float __pyx_v_top;
  float __pyx_v_width;
  float __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__left,&__pyx_n_s__top,&__pyx_n_s__width,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__left);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__top);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
        if (value) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
        if (value) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    if (values[0]) {
      __pyx_v_left = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_left = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_top = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_top = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_width = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_height = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "sf.pyx":286
 * 
 *     def __init__(self, float left=0, float top=0, float width=0,
 *                   float height=0):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.FloatRect(left, top, width, height)
 * 
 */
      __pyx_v_height = ((float)0.0);
    }
  } else {

    /* "sf.pyx":285
 *     cdef decl.FloatRect *p_this
 * 
 *     def __init__(self, float left=0, float top=0, float width=0,             # <<<<<<<<<<<<<<
 *                   float height=0):
 *         self.p_this = new decl.FloatRect(left, top, width, height)
 */
    __pyx_v_left = ((float)0.0);
    __pyx_v_top = ((float)0.0);
    __pyx_v_width = ((float)0.0);

    /* "sf.pyx":286
 * 
 *     def __init__(self, float left=0, float top=0, float width=0,
 *                   float height=0):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.FloatRect(left, top, width, height)
 * 
 */
    __pyx_v_height = ((float)0.0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: __pyx_v_height = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_width = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_top = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_left = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.FloatRect.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":287
 *     def __init__(self, float left=0, float top=0, float width=0,
 *                   float height=0):
 *         self.p_this = new decl.FloatRect(left, top, width, height)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this = new sf::FloatRect(__pyx_v_left, __pyx_v_top, __pyx_v_width, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":289
 *         self.p_this = new decl.FloatRect(left, top, width, height)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_9FloatRect_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_9FloatRect_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":290
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  delete ((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":292
 *         del self.p_this
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return ('FloatRect(left={0.left!r}, top={0.top!r}, '
 *                 'width={0.width!r}, height={0.height!r})'.format(self))
 */

static PyObject *__pyx_pf_2sf_9FloatRect_2__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9FloatRect_2__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__");

  /* "sf.pyx":293
 * 
 *     def __repr__(self):
 *         return ('FloatRect(left={0.left!r}, top={0.top!r}, '             # <<<<<<<<<<<<<<
 *                 'width={0.width!r}, height={0.height!r})'.format(self))
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "sf.pyx":294
 *     def __repr__(self):
 *         return ('FloatRect(left={0.left!r}, top={0.top!r}, '
 *                 'width={0.width!r}, height={0.height!r})'.format(self))             # <<<<<<<<<<<<<<
 * 
 *     property left:
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_3), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.FloatRect.__repr__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":297
 * 
 *     property left:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Left
 * 
 */

static PyObject *__pyx_pf_2sf_9FloatRect_4left___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9FloatRect_4left___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":298
 *     property left:
 *         def __get__(self):
 *             return self.p_this.Left             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Left); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.FloatRect.left.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":300
 *             return self.p_this.Left
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.Left = value
 * 
 */

static int __pyx_pf_2sf_9FloatRect_4left_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_9FloatRect_4left_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.FloatRect.left.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":301
 * 
 *         def __set__(self, float value):
 *             self.p_this.Left = value             # <<<<<<<<<<<<<<
 * 
 *     property top:
 */
  ((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Left = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":304
 * 
 *     property top:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Top
 * 
 */

static PyObject *__pyx_pf_2sf_9FloatRect_3top___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9FloatRect_3top___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":305
 *     property top:
 *         def __get__(self):
 *             return self.p_this.Top             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Top); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.FloatRect.top.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":307
 *             return self.p_this.Top
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.Top = value
 * 
 */

static int __pyx_pf_2sf_9FloatRect_3top_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_9FloatRect_3top_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.FloatRect.top.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":308
 * 
 *         def __set__(self, float value):
 *             self.p_this.Top = value             # <<<<<<<<<<<<<<
 * 
 *     property width:
 */
  ((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Top = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":311
 * 
 *     property width:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Width
 * 
 */

static PyObject *__pyx_pf_2sf_9FloatRect_5width___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9FloatRect_5width___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":312
 *     property width:
 *         def __get__(self):
 *             return self.p_this.Width             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.FloatRect.width.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":314
 *             return self.p_this.Width
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.Width = value
 * 
 */

static int __pyx_pf_2sf_9FloatRect_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_9FloatRect_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.FloatRect.width.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":315
 * 
 *         def __set__(self, float value):
 *             self.p_this.Width = value             # <<<<<<<<<<<<<<
 * 
 *     property height:
 */
  ((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Width = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":318
 * 
 *     property height:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Height
 * 
 */

static PyObject *__pyx_pf_2sf_9FloatRect_6height___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9FloatRect_6height___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":319
 *     property height:
 *         def __get__(self):
 *             return self.p_this.Height             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Height); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.FloatRect.height.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":321
 *             return self.p_this.Height
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.Height = value
 * 
 */

static int __pyx_pf_2sf_9FloatRect_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_9FloatRect_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.FloatRect.height.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":322
 * 
 *         def __set__(self, float value):
 *             self.p_this.Height = value             # <<<<<<<<<<<<<<
 * 
 *     def contains(self, int x, int y):
 */
  ((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Height = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":324
 *             self.p_this.Height = value
 * 
 *     def contains(self, int x, int y):             # <<<<<<<<<<<<<<
 *         return self.p_this.Contains(x, y)
 * 
 */

static PyObject *__pyx_pf_2sf_9FloatRect_3contains(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_9FloatRect_3contains(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x;
  int __pyx_v_y;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("contains");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("contains", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "contains") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("contains", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.FloatRect.contains");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":325
 * 
 *     def contains(self, int x, int y):
 *         return self.p_this.Contains(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def intersects(self, FloatRect rect, FloatRect intersection=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Contains(__pyx_v_x, __pyx_v_y)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.FloatRect.contains");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":327
 *         return self.p_this.Contains(x, y)
 * 
 *     def intersects(self, FloatRect rect, FloatRect intersection=None):             # <<<<<<<<<<<<<<
 *         if intersection is None:
 *             return self.p_this.Intersects(rect.p_this[0])
 */

static PyObject *__pyx_pf_2sf_9FloatRect_4intersects(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_9FloatRect_4intersects(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_FloatRect *__pyx_v_rect = 0;
  struct __pyx_obj_2sf_FloatRect *__pyx_v_intersection = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__rect,&__pyx_n_s__intersection,0};
  __Pyx_RefNannySetupContext("intersects");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((struct __pyx_obj_2sf_FloatRect *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rect);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__intersection);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "intersects") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_rect = ((struct __pyx_obj_2sf_FloatRect *)values[0]);
    __pyx_v_intersection = ((struct __pyx_obj_2sf_FloatRect *)values[1]);
  } else {
    __pyx_v_intersection = ((struct __pyx_obj_2sf_FloatRect *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_intersection = ((struct __pyx_obj_2sf_FloatRect *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_rect = ((struct __pyx_obj_2sf_FloatRect *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("intersects", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.FloatRect.intersects");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_ptype_2sf_FloatRect, 1, "rect", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_intersection), __pyx_ptype_2sf_FloatRect, 1, "intersection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":328
 * 
 *     def intersects(self, FloatRect rect, FloatRect intersection=None):
 *         if intersection is None:             # <<<<<<<<<<<<<<
 *             return self.p_this.Intersects(rect.p_this[0])
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_intersection) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":329
 *     def intersects(self, FloatRect rect, FloatRect intersection=None):
 *         if intersection is None:
 *             return self.p_this.Intersects(rect.p_this[0])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.p_this.Intersects(rect.p_this[0],
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Intersects((__pyx_v_rect->p_this[0]))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":331
 *             return self.p_this.Intersects(rect.p_this[0])
 *         else:
 *             return self.p_this.Intersects(rect.p_this[0],             # <<<<<<<<<<<<<<
 *                                           intersection.p_this[0])
 * 
 */
    __Pyx_XDECREF(__pyx_r);

    /* "sf.pyx":332
 *         else:
 *             return self.p_this.Intersects(rect.p_this[0],
 *                                           intersection.p_this[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_FloatRect *)__pyx_v_self)->p_this->Intersects((__pyx_v_rect->p_this[0]), (__pyx_v_intersection->p_this[0]))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.FloatRect.intersects");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":335
 * 
 * 
 * cdef FloatRect wrap_float_rect_instance(decl.FloatRect *p_cpp_instance):             # <<<<<<<<<<<<<<
 *     cdef FloatRect ret = FloatRect.__new__(FloatRect)
 *     ret.p_this = p_cpp_instance
 */

static  struct __pyx_obj_2sf_FloatRect *__pyx_f_2sf_wrap_float_rect_instance(sf::FloatRect *__pyx_v_p_cpp_instance) {
  struct __pyx_obj_2sf_FloatRect *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_FloatRect *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_float_rect_instance");

  /* "sf.pyx":336
 * 
 * cdef FloatRect wrap_float_rect_instance(decl.FloatRect *p_cpp_instance):
 *     cdef FloatRect ret = FloatRect.__new__(FloatRect)             # <<<<<<<<<<<<<<
 *     ret.p_this = p_cpp_instance
 * 
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_FloatRect)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_FloatRect)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_FloatRect *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":337
 * cdef FloatRect wrap_float_rect_instance(decl.FloatRect *p_cpp_instance):
 *     cdef FloatRect ret = FloatRect.__new__(FloatRect)
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":339
 *     ret.p_this = p_cpp_instance
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_FloatRect *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_float_rect_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":349
 *     IDENTITY = wrap_matrix_instance(<decl.Matrix3*>&decl.Identity)
 * 
 *     def __init__(self, float a00, float a01, float a02,             # <<<<<<<<<<<<<<
 *                   float a10, float a11, float a12,
 *                   float a20, float a21, float a22):
 */

static int __pyx_pf_2sf_7Matrix3___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_7Matrix3___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_a00;
  float __pyx_v_a01;
  float __pyx_v_a02;
  float __pyx_v_a10;
  float __pyx_v_a11;
  float __pyx_v_a12;
  float __pyx_v_a20;
  float __pyx_v_a21;
  float __pyx_v_a22;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__a00,&__pyx_n_s__a01,&__pyx_n_s__a02,&__pyx_n_s__a10,&__pyx_n_s__a11,&__pyx_n_s__a12,&__pyx_n_s__a20,&__pyx_n_s__a21,&__pyx_n_s__a22,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a00);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a01);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a02);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a10);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a11);
      if (likely(values[4])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  5:
      values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a12);
      if (likely(values[5])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  6:
      values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a20);
      if (likely(values[6])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  7:
      values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a21);
      if (likely(values[7])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  8:
      values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a22);
      if (likely(values[8])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, 8); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_a00 = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_a00 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a01 = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_a01 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a02 = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_a02 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a10 = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_a10 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a11 = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_a11 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a12 = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_a12 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a20 = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_a20 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a21 = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_a21 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a22 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_a22 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_a00 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_a00 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a01 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_a01 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a02 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_a02 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a10 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_a10 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a11 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_a11 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a12 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 5)); if (unlikely((__pyx_v_a12 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a20 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 6)); if (unlikely((__pyx_v_a20 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a21 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 7)); if (unlikely((__pyx_v_a21 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_a22 = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 8)); if (unlikely((__pyx_v_a22 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Matrix3.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":352
 *                   float a10, float a11, float a12,
 *                   float a20, float a21, float a22):
 *         self.p_this = new decl.Matrix3(a00, a01, a02,             # <<<<<<<<<<<<<<
 *                                        a10, a11, a12,
 *                                        a20, a21, a22)
 */
  ((struct __pyx_obj_2sf_Matrix3 *)__pyx_v_self)->p_this = new sf::Matrix3(__pyx_v_a00, __pyx_v_a01, __pyx_v_a02, __pyx_v_a10, __pyx_v_a11, __pyx_v_a12, __pyx_v_a20, __pyx_v_a21, __pyx_v_a22);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":356
 *                                        a20, a21, a22)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_7Matrix3_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_7Matrix3_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":357
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  delete ((struct __pyx_obj_2sf_Matrix3 *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":359
 *         del self.p_this
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         cdef float *p
 * 
 */

static PyObject *__pyx_pf_2sf_7Matrix3_2__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_7Matrix3_2__str__(PyObject *__pyx_v_self) {
  float *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  __Pyx_RefNannySetupContext("__str__");

  /* "sf.pyx":362
 *         cdef float *p
 * 
 *         p = <float*>self.p_this.Get4x4Elements()             # <<<<<<<<<<<<<<
 * 
 *         return ('[{0} {4} {8} {12}]\n'
 */
  __pyx_v_p = ((float *)((struct __pyx_obj_2sf_Matrix3 *)__pyx_v_self)->p_this->Get4x4Elements());

  /* "sf.pyx":364
 *         p = <float*>self.p_this.Get4x4Elements()
 * 
 *         return ('[{0} {4} {8} {12}]\n'             # <<<<<<<<<<<<<<
 *                 '[{1} {5} {9} {13}]\n'
 *                 '[{2} {6} {10} {14}]\n'
 */
  __Pyx_XDECREF(__pyx_r);

  /* "sf.pyx":368
 *                 '[{2} {6} {10} {14}]\n'
 *                 '[{3} {7} {11} {15}]'
 *                 .format(p[0], p[1], p[2], p[3],             # <<<<<<<<<<<<<<
 *                         p[4], p[5], p[6], p[7],
 *                         p[8], p[9], p[10], p[11],
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_4), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_p[0])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_p[1])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble((__pyx_v_p[2])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble((__pyx_v_p[3])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);

  /* "sf.pyx":369
 *                 '[{3} {7} {11} {15}]'
 *                 .format(p[0], p[1], p[2], p[3],
 *                         p[4], p[5], p[6], p[7],             # <<<<<<<<<<<<<<
 *                         p[8], p[9], p[10], p[11],
 *                         p[12], p[13], p[14], p[15]))
 */
  __pyx_t_6 = PyFloat_FromDouble((__pyx_v_p[4])); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyFloat_FromDouble((__pyx_v_p[5])); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyFloat_FromDouble((__pyx_v_p[6])); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = PyFloat_FromDouble((__pyx_v_p[7])); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);

  /* "sf.pyx":370
 *                 .format(p[0], p[1], p[2], p[3],
 *                         p[4], p[5], p[6], p[7],
 *                         p[8], p[9], p[10], p[11],             # <<<<<<<<<<<<<<
 *                         p[12], p[13], p[14], p[15]))
 * 
 */
  __pyx_t_10 = PyFloat_FromDouble((__pyx_v_p[8])); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = PyFloat_FromDouble((__pyx_v_p[9])); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_12 = PyFloat_FromDouble((__pyx_v_p[10])); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_13 = PyFloat_FromDouble((__pyx_v_p[11])); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_13);

  /* "sf.pyx":371
 *                         p[4], p[5], p[6], p[7],
 *                         p[8], p[9], p[10], p[11],
 *                         p[12], p[13], p[14], p[15]))             # <<<<<<<<<<<<<<
 * 
 *     def __mul__(Matrix3 self, Matrix3 other):
 */
  __pyx_t_14 = PyFloat_FromDouble((__pyx_v_p[12])); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_15 = PyFloat_FromDouble((__pyx_v_p[13])); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_t_16 = PyFloat_FromDouble((__pyx_v_p[14])); if (unlikely(!__pyx_t_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_16);
  __pyx_t_17 = PyFloat_FromDouble((__pyx_v_p[15])); if (unlikely(!__pyx_t_17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_17);
  __pyx_t_18 = PyTuple_New(16); if (unlikely(!__pyx_t_18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_18));
  PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_18, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_18, 3, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_18, 4, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_18, 5, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_18, 6, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_18, 7, __pyx_t_9);
  __Pyx_GIVEREF(__pyx_t_9);
  PyTuple_SET_ITEM(__pyx_t_18, 8, __pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_10);
  PyTuple_SET_ITEM(__pyx_t_18, 9, __pyx_t_11);
  __Pyx_GIVEREF(__pyx_t_11);
  PyTuple_SET_ITEM(__pyx_t_18, 10, __pyx_t_12);
  __Pyx_GIVEREF(__pyx_t_12);
  PyTuple_SET_ITEM(__pyx_t_18, 11, __pyx_t_13);
  __Pyx_GIVEREF(__pyx_t_13);
  PyTuple_SET_ITEM(__pyx_t_18, 12, __pyx_t_14);
  __Pyx_GIVEREF(__pyx_t_14);
  PyTuple_SET_ITEM(__pyx_t_18, 13, __pyx_t_15);
  __Pyx_GIVEREF(__pyx_t_15);
  PyTuple_SET_ITEM(__pyx_t_18, 14, __pyx_t_16);
  __Pyx_GIVEREF(__pyx_t_16);
  PyTuple_SET_ITEM(__pyx_t_18, 15, __pyx_t_17);
  __Pyx_GIVEREF(__pyx_t_17);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_t_9 = 0;
  __pyx_t_10 = 0;
  __pyx_t_11 = 0;
  __pyx_t_12 = 0;
  __pyx_t_13 = 0;
  __pyx_t_14 = 0;
  __pyx_t_15 = 0;
  __pyx_t_16 = 0;
  __pyx_t_17 = 0;
  __pyx_t_17 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_18), NULL); if (unlikely(!__pyx_t_17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_17);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_18)); __pyx_t_18 = 0;
  __pyx_r = __pyx_t_17;
  __pyx_t_17 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_AddTraceback("sf.Matrix3.__str__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":373
 *                         p[12], p[13], p[14], p[15]))
 * 
 *     def __mul__(Matrix3 self, Matrix3 other):             # <<<<<<<<<<<<<<
 *         cdef decl.Matrix3 *p = new decl.Matrix3()
 * 
 */

static PyObject *__pyx_pf_2sf_7Matrix3_3__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pf_2sf_7Matrix3_3__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  sf::Matrix3 *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__mul__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_2sf_Matrix3, 1, "self", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_2sf_Matrix3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":374
 * 
 *     def __mul__(Matrix3 self, Matrix3 other):
 *         cdef decl.Matrix3 *p = new decl.Matrix3()             # <<<<<<<<<<<<<<
 * 
 *         p[0] = self.p_this[0] * other.p_this[0]
 */
  __pyx_v_p = new sf::Matrix3();

  /* "sf.pyx":376
 *         cdef decl.Matrix3 *p = new decl.Matrix3()
 * 
 *         p[0] = self.p_this[0] * other.p_this[0]             # <<<<<<<<<<<<<<
 * 
 *         return wrap_matrix_instance(p)
 */
  (__pyx_v_p[0]) = ((((struct __pyx_obj_2sf_Matrix3 *)__pyx_v_self)->p_this[0]) * (((struct __pyx_obj_2sf_Matrix3 *)__pyx_v_other)->p_this[0]));

  /* "sf.pyx":378
 *         p[0] = self.p_this[0] * other.p_this[0]
 * 
 *         return wrap_matrix_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_matrix_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Matrix3.__mul__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":381
 * 
 *     @classmethod
 *     def projection(cls, tuple center, tuple size, float rotation):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f cpp_center
 *         cdef decl.Vector2f cpp_size
 */

static PyObject *__pyx_pf_2sf_7Matrix3_4projection(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_7Matrix3_4projection(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_center = 0;
  PyObject *__pyx_v_size = 0;
  float __pyx_v_rotation;
  sf::Vector2f __pyx_v_cpp_center;
  sf::Vector2f __pyx_v_cpp_size;
  sf::Matrix3 *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__center,&__pyx_n_s__size,&__pyx_n_s__rotation,0};
  __Pyx_RefNannySetupContext("projection");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__center);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__size);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("projection", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rotation);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("projection", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "projection") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_center = ((PyObject*)values[0]);
    __pyx_v_size = ((PyObject*)values[1]);
    __pyx_v_rotation = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_rotation == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_center = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_size = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_rotation = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_rotation == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("projection", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Matrix3.projection");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_center), (&PyTuple_Type), 1, "center", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_size), (&PyTuple_Type), 1, "size", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":386
 *         cdef decl.Matrix3 *p
 * 
 *         cpp_center.x, cpp_center.y = center             # <<<<<<<<<<<<<<
 *         cpp_size.x, cpp_size.y = size
 *         p[0] = decl.Projection(cpp_center, cpp_size, rotation)
 */
  if (likely(((PyObject *)__pyx_v_center) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_center)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_center);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cpp_center.x = __pyx_t_3;
    __pyx_v_cpp_center.y = __pyx_t_4;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_center), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":387
 * 
 *         cpp_center.x, cpp_center.y = center
 *         cpp_size.x, cpp_size.y = size             # <<<<<<<<<<<<<<
 *         p[0] = decl.Projection(cpp_center, cpp_size, rotation)
 * 
 */
  if (likely(((PyObject *)__pyx_v_size) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_size)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_size);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_cpp_size.x = __pyx_t_4;
    __pyx_v_cpp_size.y = __pyx_t_3;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_size), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":388
 *         cpp_center.x, cpp_center.y = center
 *         cpp_size.x, cpp_size.y = size
 *         p[0] = decl.Projection(cpp_center, cpp_size, rotation)             # <<<<<<<<<<<<<<
 * 
 *         return wrap_matrix_instance(p)
 */
  (__pyx_v_p[0]) = sf::Matrix3::Projection(__pyx_v_cpp_center, __pyx_v_cpp_size, __pyx_v_rotation);

  /* "sf.pyx":390
 *         p[0] = decl.Projection(cpp_center, cpp_size, rotation)
 * 
 *         return wrap_matrix_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_matrix_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Matrix3.projection");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":393
 * 
 *     @classmethod
 *     def transformation(cls, tuple origin, tuple translation, float rotation,             # <<<<<<<<<<<<<<
 *                        tuple scale):
 *         cdef decl.Vector2f cpp_origin
 */

static PyObject *__pyx_pf_2sf_7Matrix3_5transformation(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_7Matrix3_5transformation(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_origin = 0;
  PyObject *__pyx_v_translation = 0;
  float __pyx_v_rotation;
  PyObject *__pyx_v_scale = 0;
  sf::Vector2f __pyx_v_cpp_origin;
  sf::Vector2f __pyx_v_cpp_translation;
  sf::Vector2f __pyx_v_cpp_scale;
  sf::Matrix3 *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__origin,&__pyx_n_s__translation,&__pyx_n_s__rotation,&__pyx_n_s__scale,0};
  __Pyx_RefNannySetupContext("transformation");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__origin);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__translation);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("transformation", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rotation);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("transformation", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__scale);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("transformation", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "transformation") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_origin = ((PyObject*)values[0]);
    __pyx_v_translation = ((PyObject*)values[1]);
    __pyx_v_rotation = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_rotation == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_scale = ((PyObject*)values[3]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_origin = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_translation = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_rotation = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_rotation == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_scale = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 3));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("transformation", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Matrix3.transformation");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_origin), (&PyTuple_Type), 1, "origin", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_translation), (&PyTuple_Type), 1, "translation", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_scale), (&PyTuple_Type), 1, "scale", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":398
 *         cdef decl.Vector2f cpp_translation
 *         cdef decl.Vector2f cpp_scale
 *         cdef decl.Matrix3 *p = new decl.Matrix3()             # <<<<<<<<<<<<<<
 * 
 *         cpp_origin.x, cpp_origin.y = origin
 */
  __pyx_v_p = new sf::Matrix3();

  /* "sf.pyx":400
 *         cdef decl.Matrix3 *p = new decl.Matrix3()
 * 
 *         cpp_origin.x, cpp_origin.y = origin             # <<<<<<<<<<<<<<
 *         cpp_translation.x, cpp_translation.y = translation
 *         cpp_scale.x, cpp_scale.y = scale
 */
  if (likely(((PyObject *)__pyx_v_origin) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_origin)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_origin);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cpp_origin.x = __pyx_t_3;
    __pyx_v_cpp_origin.y = __pyx_t_4;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_origin), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":401
 * 
 *         cpp_origin.x, cpp_origin.y = origin
 *         cpp_translation.x, cpp_translation.y = translation             # <<<<<<<<<<<<<<
 *         cpp_scale.x, cpp_scale.y = scale
 * 
 */
  if (likely(((PyObject *)__pyx_v_translation) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_translation)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_translation);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_cpp_translation.x = __pyx_t_4;
    __pyx_v_cpp_translation.y = __pyx_t_3;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_translation), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":402
 *         cpp_origin.x, cpp_origin.y = origin
 *         cpp_translation.x, cpp_translation.y = translation
 *         cpp_scale.x, cpp_scale.y = scale             # <<<<<<<<<<<<<<
 * 
 *         p[0] = decl.Transformation(cpp_origin, cpp_translation, rotation,
 */
  if (likely(((PyObject *)__pyx_v_scale) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_scale)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_scale);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cpp_scale.x = __pyx_t_3;
    __pyx_v_cpp_scale.y = __pyx_t_4;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_scale), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":404
 *         cpp_scale.x, cpp_scale.y = scale
 * 
 *         p[0] = decl.Transformation(cpp_origin, cpp_translation, rotation,             # <<<<<<<<<<<<<<
 *                                    cpp_scale)
 * 
 */
  (__pyx_v_p[0]) = sf::Matrix3::Transformation(__pyx_v_cpp_origin, __pyx_v_cpp_translation, __pyx_v_rotation, __pyx_v_cpp_scale);

  /* "sf.pyx":407
 *                                    cpp_scale)
 * 
 *         return wrap_matrix_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     def get_inverse(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_matrix_instance(__pyx_v_p)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Matrix3.transformation");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":409
 *         return wrap_matrix_instance(p)
 * 
 *     def get_inverse(self):             # <<<<<<<<<<<<<<
 *         cdef decl.Matrix3 m = self.p_this.GetInverse()
 *         cdef decl.Matrix3 *p = new decl.Matrix3()
 */

static PyObject *__pyx_pf_2sf_7Matrix3_6get_inverse(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_7Matrix3_6get_inverse(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  sf::Matrix3 __pyx_v_m;
  sf::Matrix3 *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_inverse");

  /* "sf.pyx":410
 * 
 *     def get_inverse(self):
 *         cdef decl.Matrix3 m = self.p_this.GetInverse()             # <<<<<<<<<<<<<<
 *         cdef decl.Matrix3 *p = new decl.Matrix3()
 * 
 */
  __pyx_v_m = ((struct __pyx_obj_2sf_Matrix3 *)__pyx_v_self)->p_this->GetInverse();

  /* "sf.pyx":411
 *     def get_inverse(self):
 *         cdef decl.Matrix3 m = self.p_this.GetInverse()
 *         cdef decl.Matrix3 *p = new decl.Matrix3()             # <<<<<<<<<<<<<<
 * 
 *         p[0] = m
 */
  __pyx_v_p = new sf::Matrix3();

  /* "sf.pyx":413
 *         cdef decl.Matrix3 *p = new decl.Matrix3()
 * 
 *         p[0] = m             # <<<<<<<<<<<<<<
 * 
 *         return wrap_matrix_instance(p)
 */
  (__pyx_v_p[0]) = __pyx_v_m;

  /* "sf.pyx":415
 *         p[0] = m
 * 
 *         return wrap_matrix_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     def transform(self, tuple point):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_matrix_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Matrix3.get_inverse");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":417
 *         return wrap_matrix_instance(p)
 * 
 *     def transform(self, tuple point):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f cpp_point
 *         cdef decl.Vector2f res
 */

static PyObject *__pyx_pf_2sf_7Matrix3_7transform(PyObject *__pyx_v_self, PyObject *__pyx_v_point); /*proto*/
static PyObject *__pyx_pf_2sf_7Matrix3_7transform(PyObject *__pyx_v_self, PyObject *__pyx_v_point) {
  sf::Vector2f __pyx_v_cpp_point;
  sf::Vector2f __pyx_v_res;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  float __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("transform");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_point), (&PyTuple_Type), 1, "point", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":421
 *         cdef decl.Vector2f res
 * 
 *         cpp_point.x = point.x             # <<<<<<<<<<<<<<
 *         cpp_point.y = point.y
 *         res = self.p_this.Transform(cpp_point)
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_point), __pyx_n_s__x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cpp_point.x = __pyx_t_2;

  /* "sf.pyx":422
 * 
 *         cpp_point.x = point.x
 *         cpp_point.y = point.y             # <<<<<<<<<<<<<<
 *         res = self.p_this.Transform(cpp_point)
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_point), __pyx_n_s__y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cpp_point.y = __pyx_t_2;

  /* "sf.pyx":423
 *         cpp_point.x = point.x
 *         cpp_point.y = point.y
 *         res = self.p_this.Transform(cpp_point)             # <<<<<<<<<<<<<<
 * 
 *         return (res.x, res.y)
 */
  __pyx_v_res = ((struct __pyx_obj_2sf_Matrix3 *)__pyx_v_self)->p_this->Transform(__pyx_v_cpp_point);

  /* "sf.pyx":425
 *         res = self.p_this.Transform(cpp_point)
 * 
 *         return (res.x, res.y)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_res.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_res.y); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_r = ((PyObject *)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.Matrix3.transform");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":428
 * 
 * 
 * cdef Matrix3 wrap_matrix_instance(decl.Matrix3 *p_cpp_instance):             # <<<<<<<<<<<<<<
 *     cdef Matrix3 ret = Matrix3.__new__(Matrix3)
 * 
 */

static  struct __pyx_obj_2sf_Matrix3 *__pyx_f_2sf_wrap_matrix_instance(sf::Matrix3 *__pyx_v_p_cpp_instance) {
  struct __pyx_obj_2sf_Matrix3 *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_Matrix3 *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_matrix_instance");

  /* "sf.pyx":429
 * 
 * cdef Matrix3 wrap_matrix_instance(decl.Matrix3 *p_cpp_instance):
 *     cdef Matrix3 ret = Matrix3.__new__(Matrix3)             # <<<<<<<<<<<<<<
 * 
 *     ret.p_this = p_cpp_instance
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_Matrix3)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Matrix3)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_Matrix3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":431
 *     cdef Matrix3 ret = Matrix3.__new__(Matrix3)
 * 
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":433
 *     ret.p_this = p_cpp_instance
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_Matrix3 *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_matrix_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":442
 *     cdef decl.Clock *p_this
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.Clock()
 * 
 */

static int __pyx_pf_2sf_5Clock___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_5Clock___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "sf.pyx":443
 * 
 *     def __cinit__(self):
 *         self.p_this = new decl.Clock()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_Clock *)__pyx_v_self)->p_this = new sf::Clock();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":445
 *         self.p_this = new decl.Clock()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_5Clock_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_5Clock_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":446
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     property elapsed_time:
 */
  delete ((struct __pyx_obj_2sf_Clock *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":449
 * 
 *     property elapsed_time:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetElapsedTime()
 * 
 */

static PyObject *__pyx_pf_2sf_5Clock_12elapsed_time___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Clock_12elapsed_time___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":450
 *     property elapsed_time:
 *         def __get__(self):
 *             return self.p_this.GetElapsedTime()             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_Clock *)__pyx_v_self)->p_this->GetElapsedTime()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Clock.elapsed_time.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":452
 *             return self.p_this.GetElapsedTime()
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Reset()
 * 
 */

static PyObject *__pyx_pf_2sf_5Clock_2reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_5Clock_2reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("reset");

  /* "sf.pyx":453
 * 
 *     def reset(self):
 *         self.p_this.Reset()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_Clock *)__pyx_v_self)->p_this->Reset();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":469
 *     cdef decl.Color *p_this
 * 
 *     def __init__(self, int r, int g, int b, int a=255):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.Color(r, g, b, a)
 * 
 */

static int __pyx_pf_2sf_5Color___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_5Color___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_r;
  int __pyx_v_g;
  int __pyx_v_b;
  int __pyx_v_a;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__r,&__pyx_n_s__g,&__pyx_n_s__b,&__pyx_n_s__a,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__r);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__g);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__b);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__a);
        if (value) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_r = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_r == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_g = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_g == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_b = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_b == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[3]) {
      __pyx_v_a = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_a == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_a = ((int)255);
    }
  } else {
    __pyx_v_a = ((int)255);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4:
      __pyx_v_a = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_a == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3:
      __pyx_v_b = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_b == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_g = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_g == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_r = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_r == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Color.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":470
 * 
 *     def __init__(self, int r, int g, int b, int a=255):
 *         self.p_this = new decl.Color(r, g, b, a)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this = new sf::Color(__pyx_v_r, __pyx_v_g, __pyx_v_b, __pyx_v_a);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":472
 *         self.p_this = new decl.Color(r, g, b, a)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_5Color_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_5Color_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":473
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  delete ((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":475
 *         del self.p_this
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'Color({0.r}, {0.g}, {0.b}, {0.a})'.format(self)
 * 
 */

static PyObject *__pyx_pf_2sf_5Color_2__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Color_2__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__");

  /* "sf.pyx":476
 * 
 *     def __repr__(self):
 *         return 'Color({0.r}, {0.g}, {0.b}, {0.a})'.format(self)             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(Color x, Color y, int op):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_5), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Color.__repr__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":478
 *         return 'Color({0.r}, {0.g}, {0.b}, {0.a})'.format(self)
 * 
 *     def __richcmp__(Color x, Color y, int op):             # <<<<<<<<<<<<<<
 *         # ==
 *         if op == 2:
 */

static PyObject *__pyx_pf_2sf_5Color_3__richcmp__(PyObject *__pyx_v_x, PyObject *__pyx_v_y, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pf_2sf_5Color_3__richcmp__(PyObject *__pyx_v_x, PyObject *__pyx_v_y, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_2sf_Color, 1, "x", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_2sf_Color, 1, "y", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":486
 *                     x.a == y.a)
 *         # !=
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return not x == y
 * 
 */
  switch (__pyx_v_op) {

    /* "sf.pyx":480
 *     def __richcmp__(Color x, Color y, int op):
 *         # ==
 *         if op == 2:             # <<<<<<<<<<<<<<
 *             return (x.r == y.r and
 *                     x.g == y.g and
 */
    case 2:

    /* "sf.pyx":481
 *         # ==
 *         if op == 2:
 *             return (x.r == y.r and             # <<<<<<<<<<<<<<
 *                     x.g == y.g and
 *                     x.b == y.b and
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__r); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__r); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_4) {
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "sf.pyx":482
 *         if op == 2:
 *             return (x.r == y.r and
 *                     x.g == y.g and             # <<<<<<<<<<<<<<
 *                     x.b == y.b and
 *                     x.a == y.a)
 */
      __pyx_t_2 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__g); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__g); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_4) {
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "sf.pyx":483
 *             return (x.r == y.r and
 *                     x.g == y.g and
 *                     x.b == y.b and             # <<<<<<<<<<<<<<
 *                     x.a == y.a)
 *         # !=
 */
        __pyx_t_1 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__b); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__b); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        if (__pyx_t_4) {
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "sf.pyx":484
 *                     x.g == y.g and
 *                     x.b == y.b and
 *                     x.a == y.a)             # <<<<<<<<<<<<<<
 *         # !=
 *         elif op == 3:
 */
          __pyx_t_2 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__a); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__a); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __pyx_t_7;
          __pyx_t_7 = 0;
        } else {
          __pyx_t_1 = __pyx_t_6;
          __pyx_t_6 = 0;
        }
        __pyx_t_6 = __pyx_t_1;
        __pyx_t_1 = 0;
      } else {
        __pyx_t_6 = __pyx_t_5;
        __pyx_t_5 = 0;
      }
      __pyx_t_5 = __pyx_t_6;
      __pyx_t_6 = 0;
    } else {
      __pyx_t_5 = __pyx_t_3;
      __pyx_t_3 = 0;
    }
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
    break;

    /* "sf.pyx":486
 *                     x.a == y.a)
 *         # !=
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return not x == y
 * 
 */
    case 3:

    /* "sf.pyx":487
 *         # !=
 *         elif op == 3:
 *             return not x == y             # <<<<<<<<<<<<<<
 * 
 *         return NotImplemented
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_v_y, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyBool_FromLong((!__pyx_t_4)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
    break;
  }

  /* "sf.pyx":489
 *             return not x == y
 * 
 *         return NotImplemented             # <<<<<<<<<<<<<<
 * 
 *     def __add__(Color x, Color y):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_builtin_NotImplemented);
  __pyx_r = __pyx_builtin_NotImplemented;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("sf.Color.__richcmp__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":491
 *         return NotImplemented
 * 
 *     def __add__(Color x, Color y):             # <<<<<<<<<<<<<<
 *         return Color(min(x.r + y.r, 255),
 *                      min(x.g + y.g, 255),
 */

static PyObject *__pyx_pf_2sf_5Color_4__add__(PyObject *__pyx_v_x, PyObject *__pyx_v_y); /*proto*/
static PyObject *__pyx_pf_2sf_5Color_4__add__(PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("__add__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_2sf_Color, 1, "x", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_2sf_Color, 1, "y", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":492
 * 
 *     def __add__(Color x, Color y):
 *         return Color(min(x.r + y.r, 255),             # <<<<<<<<<<<<<<
 *                      min(x.g + y.g, 255),
 *                      min(x.b + y.b, 255),
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 255;
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__r); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__r); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_2 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_2, __pyx_t_4, Py_LT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_6) {
    __pyx_t_5 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __pyx_t_5;
    __pyx_t_5 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = 255;

  /* "sf.pyx":493
 *     def __add__(Color x, Color y):
 *         return Color(min(x.r + y.r, 255),
 *                      min(x.g + y.g, 255),             # <<<<<<<<<<<<<<
 *                      min(x.b + y.b, 255),
 *                      min(x.a + y.a, 255))
 */
  __pyx_t_4 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__g); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__g); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_4 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = PyObject_RichCompare(__pyx_t_4, __pyx_t_2, Py_LT); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (__pyx_t_6) {
    __pyx_t_7 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_5 = __pyx_t_7;
    __pyx_t_7 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_5 = __pyx_t_2;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = 255;

  /* "sf.pyx":494
 *         return Color(min(x.r + y.r, 255),
 *                      min(x.g + y.g, 255),
 *                      min(x.b + y.b, 255),             # <<<<<<<<<<<<<<
 *                      min(x.a + y.a, 255))
 * 
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__b); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__b); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_2 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyObject_RichCompare(__pyx_t_2, __pyx_t_4, Py_LT); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (__pyx_t_6) {
    __pyx_t_8 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __pyx_t_8;
    __pyx_t_8 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_4);
    __pyx_t_7 = __pyx_t_4;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_1 = 255;

  /* "sf.pyx":495
 *                      min(x.g + y.g, 255),
 *                      min(x.b + y.b, 255),
 *                      min(x.a + y.a, 255))             # <<<<<<<<<<<<<<
 * 
 *     def __mul__(Color x, Color y):
 */
  __pyx_t_4 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__a); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__a); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_t_8); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_4 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = PyObject_RichCompare(__pyx_t_4, __pyx_t_2, Py_LT); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (__pyx_t_6) {
    __pyx_t_9 = PyInt_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = __pyx_t_9;
    __pyx_t_9 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_8 = __pyx_t_2;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  __Pyx_INCREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_8;
  __pyx_t_8 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("sf.Color.__add__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":497
 *                      min(x.a + y.a, 255))
 * 
 *     def __mul__(Color x, Color y):             # <<<<<<<<<<<<<<
 *         return Color(x.r * y.r / 255,
 *                      x.g * y.g / 255,
 */

static PyObject *__pyx_pf_2sf_5Color_5__mul__(PyObject *__pyx_v_x, PyObject *__pyx_v_y); /*proto*/
static PyObject *__pyx_pf_2sf_5Color_5__mul__(PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__mul__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_2sf_Color, 1, "x", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_2sf_Color, 1, "y", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":498
 * 
 *     def __mul__(Color x, Color y):
 *         return Color(x.r * y.r / 255,             # <<<<<<<<<<<<<<
 *                      x.g * y.g / 255,
 *                      x.b * y.b / 255,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__r); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__r); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_int_255); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "sf.pyx":499
 *     def __mul__(Color x, Color y):
 *         return Color(x.r * y.r / 255,
 *                      x.g * y.g / 255,             # <<<<<<<<<<<<<<
 *                      x.b * y.b / 255,
 *                      x.a * y.a / 255)
 */
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__g); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__g); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_int_255); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "sf.pyx":500
 *         return Color(x.r * y.r / 255,
 *                      x.g * y.g / 255,
 *                      x.b * y.b / 255,             # <<<<<<<<<<<<<<
 *                      x.a * y.a / 255)
 * 
 */
  __pyx_t_4 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__b); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__b); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_int_255); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "sf.pyx":501
 *                      x.g * y.g / 255,
 *                      x.b * y.b / 255,
 *                      x.a * y.a / 255)             # <<<<<<<<<<<<<<
 * 
 *     property r:
 */
  __pyx_t_5 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__a); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__a); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = PyNumber_Multiply(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_6, __pyx_int_255); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_6));
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("sf.Color.__mul__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":504
 * 
 *     property r:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.r
 * 
 */

static PyObject *__pyx_pf_2sf_5Color_1r___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Color_1r___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":505
 *     property r:
 *         def __get__(self):
 *             return self.p_this.r             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this->r); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Color.r.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":507
 *             return self.p_this.r
 * 
 *         def __set__(self, unsigned int value):             # <<<<<<<<<<<<<<
 *             self.p_this.r = value
 * 
 */

static int __pyx_pf_2sf_5Color_1r_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Color_1r_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 507; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Color.r.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":508
 * 
 *         def __set__(self, unsigned int value):
 *             self.p_this.r = value             # <<<<<<<<<<<<<<
 * 
 *     property g:
 */
  ((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this->r = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":511
 * 
 *     property g:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.g
 * 
 */

static PyObject *__pyx_pf_2sf_5Color_1g___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Color_1g___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":512
 *     property g:
 *         def __get__(self):
 *             return self.p_this.g             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this->g); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Color.g.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":514
 *             return self.p_this.g
 * 
 *         def __set__(self, unsigned int value):             # <<<<<<<<<<<<<<
 *             self.p_this.g = value
 * 
 */

static int __pyx_pf_2sf_5Color_1g_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Color_1g_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Color.g.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":515
 * 
 *         def __set__(self, unsigned int value):
 *             self.p_this.g = value             # <<<<<<<<<<<<<<
 * 
 *     property b:
 */
  ((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this->g = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":518
 * 
 *     property b:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.b
 * 
 */

static PyObject *__pyx_pf_2sf_5Color_1b___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Color_1b___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":519
 *     property b:
 *         def __get__(self):
 *             return self.p_this.b             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this->b); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Color.b.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":521
 *             return self.p_this.b
 * 
 *         def __set__(self, unsigned int value):             # <<<<<<<<<<<<<<
 *             self.p_this.b = value
 * 
 */

static int __pyx_pf_2sf_5Color_1b_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Color_1b_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Color.b.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":522
 * 
 *         def __set__(self, unsigned int value):
 *             self.p_this.b = value             # <<<<<<<<<<<<<<
 * 
 *     property a:
 */
  ((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this->b = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":525
 * 
 *     property a:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.a
 * 
 */

static PyObject *__pyx_pf_2sf_5Color_1a___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Color_1a___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":526
 *     property a:
 *         def __get__(self):
 *             return self.p_this.a             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this->a); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Color.a.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":528
 *             return self.p_this.a
 * 
 *         def __set__(self, unsigned int value):             # <<<<<<<<<<<<<<
 *             self.p_this.a = value
 * 
 */

static int __pyx_pf_2sf_5Color_1a_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Color_1a_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Color.a.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":529
 * 
 *         def __set__(self, unsigned int value):
 *             self.p_this.a = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_Color *)__pyx_v_self)->p_this->a = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":532
 * 
 * 
 * cdef wrap_color_instance(decl.Color *p_cpp_instance):             # <<<<<<<<<<<<<<
 *     cdef Color ret = Color.__new__(Color)
 *     ret.p_this = p_cpp_instance
 */

static  PyObject *__pyx_f_2sf_wrap_color_instance(sf::Color *__pyx_v_p_cpp_instance) {
  struct __pyx_obj_2sf_Color *__pyx_v_ret = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_color_instance");

  /* "sf.pyx":533
 * 
 * cdef wrap_color_instance(decl.Color *p_cpp_instance):
 *     cdef Color ret = Color.__new__(Color)             # <<<<<<<<<<<<<<
 *     ret.p_this = p_cpp_instance
 * 
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_Color)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Color)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_Color *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":534
 * cdef wrap_color_instance(decl.Color *p_cpp_instance):
 *     cdef Color ret = Color.__new__(Color)
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":536
 *     ret.p_this = p_cpp_instance
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_color_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":545
 *     cdef bint delete_this
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         # self.delete_this = True
 *         raise NotImplementedError("Use static methods like load_from_file "
 */

static int __pyx_pf_2sf_11SoundBuffer___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_11SoundBuffer___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;

  /* "sf.pyx":547
 *     def __init__(self):
 *         # self.delete_this = True
 *         raise NotImplementedError("Use static methods like load_from_file "             # <<<<<<<<<<<<<<
 *                                   "to create SoundBuffer instances")
 * 
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_7), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.SoundBuffer.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":550
 *                                   "to create SoundBuffer instances")
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.delete_this:
 *             del self.p_this
 */

static void __pyx_pf_2sf_11SoundBuffer_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_11SoundBuffer_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":551
 * 
 *     def __dealloc__(self):
 *         if self.delete_this:             # <<<<<<<<<<<<<<
 *             del self.p_this
 * 
 */
  if (((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->delete_this) {

    /* "sf.pyx":552
 *     def __dealloc__(self):
 *         if self.delete_this:
 *             del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     property channels_count:
 */
    delete ((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->p_this;
    goto __pyx_L5;
  }
  __pyx_L5:;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":555
 * 
 *     property channels_count:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetChannelsCount()
 * 
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_14channels_count___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_14channels_count___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":556
 *     property channels_count:
 *         def __get__(self):
 *             return self.p_this.GetChannelsCount()             # <<<<<<<<<<<<<<
 * 
 *     property duration:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->p_this->GetChannelsCount()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.SoundBuffer.channels_count.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":559
 * 
 *     property duration:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetDuration()
 * 
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_8duration___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_8duration___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":560
 *     property duration:
 *         def __get__(self):
 *             return self.p_this.GetDuration()             # <<<<<<<<<<<<<<
 * 
 *     property sample_rate:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->p_this->GetDuration()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.SoundBuffer.duration.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":563
 * 
 *     property sample_rate:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetSampleRate()
 * 
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_11sample_rate___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_11sample_rate___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":564
 *     property sample_rate:
 *         def __get__(self):
 *             return self.p_this.GetSampleRate()             # <<<<<<<<<<<<<<
 * 
 *     property samples:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->p_this->GetSampleRate()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.SoundBuffer.sample_rate.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":567
 * 
 *     property samples:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Int16 *p = <decl.Int16*>self.p_this.GetSamples()
 *             ret = []
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_7samples___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_7samples___get__(PyObject *__pyx_v_self) {
  sf::Int16 *__pyx_v_p;
  PyObject *__pyx_v_ret;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__get__");
  __pyx_v_ret = ((PyObject*)Py_None); __Pyx_INCREF(Py_None);

  /* "sf.pyx":568
 *     property samples:
 *         def __get__(self):
 *             cdef decl.Int16 *p = <decl.Int16*>self.p_this.GetSamples()             # <<<<<<<<<<<<<<
 *             ret = []
 * 
 */
  __pyx_v_p = ((sf::Int16 *)((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->p_this->GetSamples());

  /* "sf.pyx":569
 *         def __get__(self):
 *             cdef decl.Int16 *p = <decl.Int16*>self.p_this.GetSamples()
 *             ret = []             # <<<<<<<<<<<<<<
 * 
 *             for i from 0 <= i < self.p_this.GetSamplesCount():
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_ret));
  __pyx_v_ret = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "sf.pyx":571
 *             ret = []
 * 
 *             for i from 0 <= i < self.p_this.GetSamplesCount():             # <<<<<<<<<<<<<<
 *                 ret.append(int(p[i]))
 * 
 */
  __pyx_t_2 = ((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->p_this->GetSamplesCount();
  for (__pyx_v_i = 0; __pyx_v_i < __pyx_t_2; __pyx_v_i++) {

    /* "sf.pyx":572
 * 
 *             for i from 0 <= i < self.p_this.GetSamplesCount():
 *                 ret.append(int(p[i]))             # <<<<<<<<<<<<<<
 * 
 *             return ret
 */
    if (unlikely(__pyx_v_ret == Py_None)) {
      PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
    }
    __pyx_t_1 = __Pyx_PyInt_to_py_sf__Int16((__pyx_v_p[__pyx_v_i])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_4 = PyList_Append(__pyx_v_ret, __pyx_t_1); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "sf.pyx":574
 *                 ret.append(int(p[i]))
 * 
 *             return ret             # <<<<<<<<<<<<<<
 * 
 *     property samples_count:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.SoundBuffer.samples.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":577
 * 
 *     property samples_count:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetSamplesCount()
 * 
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_13samples_count___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_13samples_count___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":578
 *     property samples_count:
 *         def __get__(self):
 *             return self.p_this.GetSamplesCount()             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->p_this->GetSamplesCount()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.SoundBuffer.samples_count.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":581
 * 
 *     @classmethod
 *     def load_from_file(cls, char* filename):             # <<<<<<<<<<<<<<
 *         cdef declaudio.SoundBuffer *p = new declaudio.SoundBuffer()
 * 
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_2load_from_file(PyObject *__pyx_v_cls, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_2load_from_file(PyObject *__pyx_v_cls, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  sf::SoundBuffer *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("load_from_file");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.SoundBuffer.load_from_file");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":582
 *     @classmethod
 *     def load_from_file(cls, char* filename):
 *         cdef declaudio.SoundBuffer *p = new declaudio.SoundBuffer()             # <<<<<<<<<<<<<<
 * 
 *         if p.LoadFromFile(filename):
 */
  __pyx_v_p = new sf::SoundBuffer();

  /* "sf.pyx":584
 *         cdef declaudio.SoundBuffer *p = new declaudio.SoundBuffer()
 * 
 *         if p.LoadFromFile(filename):             # <<<<<<<<<<<<<<
 *             return wrap_sound_buffer_instance(p, True)
 * 
 */
  __pyx_t_1 = __pyx_v_p->LoadFromFile(__pyx_v_filename);
  if (__pyx_t_1) {

    /* "sf.pyx":585
 * 
 *         if p.LoadFromFile(filename):
 *             return wrap_sound_buffer_instance(p, True)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Couldn't load sound buffer from " + filename)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_sound_buffer_instance(__pyx_v_p, 1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "sf.pyx":587
 *             return wrap_sound_buffer_instance(p, True)
 * 
 *         raise PySFMLException("Couldn't load sound buffer from " + filename)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyBytes_FromString(__pyx_v_filename); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_8), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_Raise(__pyx_t_4, 0, 0);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.SoundBuffer.load_from_file");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":590
 * 
 *     @classmethod
 *     def load_from_memory(cls, char* data):             # <<<<<<<<<<<<<<
 *         cdef declaudio.SoundBuffer *p = new declaudio.SoundBuffer()
 * 
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_3load_from_memory(PyObject *__pyx_v_cls, PyObject *__pyx_arg_data); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_3load_from_memory(PyObject *__pyx_v_cls, PyObject *__pyx_arg_data) {
  char *__pyx_v_data;
  sf::SoundBuffer *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  size_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("load_from_memory");
  assert(__pyx_arg_data); {
    __pyx_v_data = PyBytes_AsString(__pyx_arg_data); if (unlikely((!__pyx_v_data) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.SoundBuffer.load_from_memory");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":591
 *     @classmethod
 *     def load_from_memory(cls, char* data):
 *         cdef declaudio.SoundBuffer *p = new declaudio.SoundBuffer()             # <<<<<<<<<<<<<<
 * 
 *         if p.LoadFromMemory(data, len(data)):
 */
  __pyx_v_p = new sf::SoundBuffer();

  /* "sf.pyx":593
 *         cdef declaudio.SoundBuffer *p = new declaudio.SoundBuffer()
 * 
 *         if p.LoadFromMemory(data, len(data)):             # <<<<<<<<<<<<<<
 *             return wrap_sound_buffer_instance(p, True)
 * 
 */
  __pyx_t_1 = strlen(__pyx_v_data); 
  __pyx_t_2 = __pyx_v_p->LoadFromMemory(__pyx_v_data, __pyx_t_1);
  if (__pyx_t_2) {

    /* "sf.pyx":594
 * 
 *         if p.LoadFromMemory(data, len(data)):
 *             return wrap_sound_buffer_instance(p, True)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Couldn't load sound buffer from memory")
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = ((PyObject *)__pyx_f_2sf_wrap_sound_buffer_instance(__pyx_v_p, 1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "sf.pyx":596
 *             return wrap_sound_buffer_instance(p, True)
 * 
 *         raise PySFMLException("Couldn't load sound buffer from memory")             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_10), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_Raise(__pyx_t_4, 0, 0);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.SoundBuffer.load_from_memory");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":599
 * 
 *     @classmethod
 *     def load_from_samples(cls, list samples, unsigned int channels_count,             # <<<<<<<<<<<<<<
 *                           unsigned int sample_rate):
 *         cdef declaudio.SoundBuffer *p_sb = new declaudio.SoundBuffer()
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_4load_from_samples(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_4load_from_samples(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_samples = 0;
  unsigned int __pyx_v_channels_count;
  unsigned int __pyx_v_sample_rate;
  sf::SoundBuffer *__pyx_v_p_sb;
  sf::Int16 *__pyx_v_p_samples;
  sf::Int16 *__pyx_v_p_temp;
  PyObject *__pyx_v_sample;
  PyObject *__pyx_r = NULL;
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__samples,&__pyx_n_s__channels_count,&__pyx_n_s__sample_rate,0};
  __Pyx_RefNannySetupContext("load_from_samples");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__samples);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__channels_count);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("load_from_samples", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sample_rate);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("load_from_samples", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "load_from_samples") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_samples = ((PyObject*)values[0]);
    __pyx_v_channels_count = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_channels_count == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_sample_rate = __Pyx_PyInt_AsUnsignedInt(values[2]); if (unlikely((__pyx_v_sample_rate == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_samples = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_channels_count = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_channels_count == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_sample_rate = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_sample_rate == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 600; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_from_samples", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.SoundBuffer.load_from_samples");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_sample = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_samples), (&PyList_Type), 1, "samples", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":601
 *     def load_from_samples(cls, list samples, unsigned int channels_count,
 *                           unsigned int sample_rate):
 *         cdef declaudio.SoundBuffer *p_sb = new declaudio.SoundBuffer()             # <<<<<<<<<<<<<<
 *         cdef decl.Int16 *p_samples = <decl.Int16*>malloc(
 *             len(samples) * sizeof(decl.Int16))
 */
  __pyx_v_p_sb = new sf::SoundBuffer();

  /* "sf.pyx":603
 *         cdef declaudio.SoundBuffer *p_sb = new declaudio.SoundBuffer()
 *         cdef decl.Int16 *p_samples = <decl.Int16*>malloc(
 *             len(samples) * sizeof(decl.Int16))             # <<<<<<<<<<<<<<
 *         cdef decl.Int16 *p_temp = NULL
 * 
 */
  if (unlikely(__pyx_v_samples == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyList_GET_SIZE(((PyObject *)__pyx_v_samples)); 
  __pyx_v_p_samples = ((sf::Int16 *)malloc((__pyx_t_1 * (sizeof(sf::Int16)))));

  /* "sf.pyx":604
 *         cdef decl.Int16 *p_samples = <decl.Int16*>malloc(
 *             len(samples) * sizeof(decl.Int16))
 *         cdef decl.Int16 *p_temp = NULL             # <<<<<<<<<<<<<<
 * 
 *         if p_samples == NULL:
 */
  __pyx_v_p_temp = NULL;

  /* "sf.pyx":606
 *         cdef decl.Int16 *p_temp = NULL
 * 
 *         if p_samples == NULL:             # <<<<<<<<<<<<<<
 *             raise PySFMLException("Couldn't allocate memory for samples")
 *         else:
 */
  __pyx_t_2 = (__pyx_v_p_samples == NULL);
  if (__pyx_t_2) {

    /* "sf.pyx":607
 * 
 *         if p_samples == NULL:
 *             raise PySFMLException("Couldn't allocate memory for samples")             # <<<<<<<<<<<<<<
 *         else:
 *             p_temp = p_samples
 */
    __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_12), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":609
 *             raise PySFMLException("Couldn't allocate memory for samples")
 *         else:
 *             p_temp = p_samples             # <<<<<<<<<<<<<<
 * 
 *             for sample in samples:
 */
    __pyx_v_p_temp = __pyx_v_p_samples;

    /* "sf.pyx":611
 *             p_temp = p_samples
 * 
 *             for sample in samples:             # <<<<<<<<<<<<<<
 *                 p_temp[0] = <int>sample
 *                 preinc(p_temp)
 */
    if (unlikely(__pyx_v_samples == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
    }
    __pyx_t_1 = 0; __pyx_t_4 = ((PyObject *)__pyx_v_samples); __Pyx_INCREF(__pyx_t_4);
    for (;;) {
      if (__pyx_t_1 >= PyList_GET_SIZE(__pyx_t_4)) break;
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++;
      __Pyx_DECREF(__pyx_v_sample);
      __pyx_v_sample = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "sf.pyx":612
 * 
 *             for sample in samples:
 *                 p_temp[0] = <int>sample             # <<<<<<<<<<<<<<
 *                 preinc(p_temp)
 * 
 */
      __pyx_t_5 = __Pyx_PyInt_AsInt(__pyx_v_sample); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      (__pyx_v_p_temp[0]) = __pyx_t_5;

      /* "sf.pyx":613
 *             for sample in samples:
 *                 p_temp[0] = <int>sample
 *                 preinc(p_temp)             # <<<<<<<<<<<<<<
 * 
 *             if p_sb.LoadFromSamples(p_samples, len(samples), channels_count,
 */
      (++__pyx_v_p_temp);
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "sf.pyx":615
 *                 preinc(p_temp)
 * 
 *             if p_sb.LoadFromSamples(p_samples, len(samples), channels_count,             # <<<<<<<<<<<<<<
 *                                     sample_rate):
 *                 free(p_samples)
 */
    if (unlikely(__pyx_v_samples == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
    }
    __pyx_t_1 = PyList_GET_SIZE(((PyObject *)__pyx_v_samples)); 

    /* "sf.pyx":616
 * 
 *             if p_sb.LoadFromSamples(p_samples, len(samples), channels_count,
 *                                     sample_rate):             # <<<<<<<<<<<<<<
 *                 free(p_samples)
 *                 return wrap_sound_buffer_instance(p_sb, True)
 */
    __pyx_t_2 = __pyx_v_p_sb->LoadFromSamples(__pyx_v_p_samples, __pyx_t_1, __pyx_v_channels_count, __pyx_v_sample_rate);
    if (__pyx_t_2) {

      /* "sf.pyx":617
 *             if p_sb.LoadFromSamples(p_samples, len(samples), channels_count,
 *                                     sample_rate):
 *                 free(p_samples)             # <<<<<<<<<<<<<<
 *                 return wrap_sound_buffer_instance(p_sb, True)
 *             else:
 */
      free(__pyx_v_p_samples);

      /* "sf.pyx":618
 *                                     sample_rate):
 *                 free(p_samples)
 *                 return wrap_sound_buffer_instance(p_sb, True)             # <<<<<<<<<<<<<<
 *             else:
 *                 free(p_samples)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_4 = ((PyObject *)__pyx_f_2sf_wrap_sound_buffer_instance(__pyx_v_p_sb, 1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L0;
      goto __pyx_L9;
    }
    /*else*/ {

      /* "sf.pyx":620
 *                 return wrap_sound_buffer_instance(p_sb, True)
 *             else:
 *                 free(p_samples)             # <<<<<<<<<<<<<<
 *                 raise PySFMLException("Couldn't load samples")
 * 
 */
      free(__pyx_v_p_samples);

      /* "sf.pyx":621
 *             else:
 *                 free(p_samples)
 *                 raise PySFMLException("Couldn't load samples")             # <<<<<<<<<<<<<<
 * 
 *     def save_to_file(self, char* filename):
 */
      __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_k_tuple_14), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L9:;
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.SoundBuffer.load_from_samples");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_sample);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":623
 *                 raise PySFMLException("Couldn't load samples")
 * 
 *     def save_to_file(self, char* filename):             # <<<<<<<<<<<<<<
 *         self.p_this.SaveToFile(filename)
 * 
 */

static PyObject *__pyx_pf_2sf_11SoundBuffer_5save_to_file(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_2sf_11SoundBuffer_5save_to_file(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("save_to_file");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 623; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.SoundBuffer.save_to_file");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":624
 * 
 *     def save_to_file(self, char* filename):
 *         self.p_this.SaveToFile(filename)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_self)->p_this->SaveToFile(__pyx_v_filename);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":627
 * 
 * 
 * cdef SoundBuffer wrap_sound_buffer_instance(             # <<<<<<<<<<<<<<
 *     declaudio.SoundBuffer *p_cpp_instance, bint delete_this):
 *     cdef SoundBuffer ret = SoundBuffer.__new__(SoundBuffer)
 */

static  struct __pyx_obj_2sf_SoundBuffer *__pyx_f_2sf_wrap_sound_buffer_instance(sf::SoundBuffer *__pyx_v_p_cpp_instance, int __pyx_v_delete_this) {
  struct __pyx_obj_2sf_SoundBuffer *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_SoundBuffer *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_sound_buffer_instance");

  /* "sf.pyx":629
 * cdef SoundBuffer wrap_sound_buffer_instance(
 *     declaudio.SoundBuffer *p_cpp_instance, bint delete_this):
 *     cdef SoundBuffer ret = SoundBuffer.__new__(SoundBuffer)             # <<<<<<<<<<<<<<
 * 
 *     ret.p_this = p_cpp_instance
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_SoundBuffer)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_SoundBuffer)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_SoundBuffer *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":631
 *     cdef SoundBuffer ret = SoundBuffer.__new__(SoundBuffer)
 * 
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 *     ret.delete_this = delete_this
 * 
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":632
 * 
 *     ret.p_this = p_cpp_instance
 *     ret.delete_this = delete_this             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->delete_this = __pyx_v_delete_this;

  /* "sf.pyx":634
 *     ret.delete_this = delete_this
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_SoundBuffer *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_sound_buffer_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":646
 *     PLAYING = declaudio.Playing
 * 
 *     def __cinit__(self, SoundBuffer buffer=None, bint loop=False,             # <<<<<<<<<<<<<<
 *                   float pitch=1.0, float volume=100.0, tuple position=(0,0,0)):
 *         cdef decl.Vector3f cpp_position
 */

static int __pyx_pf_2sf_5Sound___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_5Sound___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_SoundBuffer *__pyx_v_buffer = 0;
  int __pyx_v_loop;
  float __pyx_v_pitch;
  float __pyx_v_volume;
  PyObject *__pyx_v_position = 0;
  sf::Vector3f __pyx_v_cpp_position;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  float __pyx_t_2;
  int __pyx_t_3;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__buffer,&__pyx_n_s__loop,&__pyx_n_s__pitch,&__pyx_n_s__volume,&__pyx_n_s__position,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = (PyObject *)((struct __pyx_obj_2sf_SoundBuffer *)Py_None);

    /* "sf.pyx":647
 * 
 *     def __cinit__(self, SoundBuffer buffer=None, bint loop=False,
 *                   float pitch=1.0, float volume=100.0, tuple position=(0,0,0)):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector3f cpp_position
 * 
 */
    values[4] = ((PyObject*)__pyx_k_tuple_15);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__buffer);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__loop);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__pitch);
        if (value) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__volume);
        if (value) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__position);
        if (value) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_buffer = ((struct __pyx_obj_2sf_SoundBuffer *)values[0]);
    if (values[1]) {
      __pyx_v_loop = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_loop == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "sf.pyx":646
 *     PLAYING = declaudio.Playing
 * 
 *     def __cinit__(self, SoundBuffer buffer=None, bint loop=False,             # <<<<<<<<<<<<<<
 *                   float pitch=1.0, float volume=100.0, tuple position=(0,0,0)):
 *         cdef decl.Vector3f cpp_position
 */
      __pyx_v_loop = ((int)0);
    }
    if (values[2]) {
      __pyx_v_pitch = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_pitch == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "sf.pyx":647
 * 
 *     def __cinit__(self, SoundBuffer buffer=None, bint loop=False,
 *                   float pitch=1.0, float volume=100.0, tuple position=(0,0,0)):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector3f cpp_position
 * 
 */
      __pyx_v_pitch = ((float)1.0);
    }
    if (values[3]) {
      __pyx_v_volume = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_volume == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_volume = ((float)100.0);
    }
    __pyx_v_position = ((PyObject*)values[4]);
  } else {

    /* "sf.pyx":646
 *     PLAYING = declaudio.Playing
 * 
 *     def __cinit__(self, SoundBuffer buffer=None, bint loop=False,             # <<<<<<<<<<<<<<
 *                   float pitch=1.0, float volume=100.0, tuple position=(0,0,0)):
 *         cdef decl.Vector3f cpp_position
 */
    __pyx_v_buffer = ((struct __pyx_obj_2sf_SoundBuffer *)Py_None);
    __pyx_v_loop = ((int)0);

    /* "sf.pyx":647
 * 
 *     def __cinit__(self, SoundBuffer buffer=None, bint loop=False,
 *                   float pitch=1.0, float volume=100.0, tuple position=(0,0,0)):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector3f cpp_position
 * 
 */
    __pyx_v_pitch = ((float)1.0);
    __pyx_v_volume = ((float)100.0);
    __pyx_v_position = ((PyObject*)__pyx_k_tuple_16);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_position = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 4));
      case  4: __pyx_v_volume = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_volume == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_pitch = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_pitch == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_loop = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_loop == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_buffer = ((struct __pyx_obj_2sf_SoundBuffer *)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sound.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_buffer), __pyx_ptype_2sf_SoundBuffer, 1, "buffer", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_position), (&PyTuple_Type), 1, "position", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":650
 *         cdef decl.Vector3f cpp_position
 * 
 *         cpp_position.x = position[0]             # <<<<<<<<<<<<<<
 *         cpp_position.y = position[1]
 *         cpp_position.z = position[2]
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_position), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cpp_position.x = __pyx_t_2;

  /* "sf.pyx":651
 * 
 *         cpp_position.x = position[0]
 *         cpp_position.y = position[1]             # <<<<<<<<<<<<<<
 *         cpp_position.z = position[2]
 * 
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_position), 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cpp_position.y = __pyx_t_2;

  /* "sf.pyx":652
 *         cpp_position.x = position[0]
 *         cpp_position.y = position[1]
 *         cpp_position.z = position[2]             # <<<<<<<<<<<<<<
 * 
 *         if buffer is None:
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_position), 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cpp_position.z = __pyx_t_2;

  /* "sf.pyx":654
 *         cpp_position.z = position[2]
 * 
 *         if buffer is None:             # <<<<<<<<<<<<<<
 *             self.p_this = new declaudio.Sound()
 *         else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_buffer) == Py_None);
  if (__pyx_t_3) {

    /* "sf.pyx":655
 * 
 *         if buffer is None:
 *             self.p_this = new declaudio.Sound()             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this = new declaudio.Sound(buffer.p_this[0], loop, pitch,
 */
    ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this = new sf::Sound();
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":657
 *             self.p_this = new declaudio.Sound()
 *         else:
 *             self.p_this = new declaudio.Sound(buffer.p_this[0], loop, pitch,             # <<<<<<<<<<<<<<
 *                                               volume, cpp_position)
 * 
 */
    ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this = new sf::Sound((__pyx_v_buffer->p_this[0]), __pyx_v_loop, __pyx_v_pitch, __pyx_v_volume, __pyx_v_cpp_position);
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":660
 *                                               volume, cpp_position)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_5Sound_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_5Sound_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":661
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     property attenuation:
 */
  delete ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":664
 * 
 *     property attenuation:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetAttenuation()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_11attenuation___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_11attenuation___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":665
 *     property attenuation:
 *         def __get__(self):
 *             return self.p_this.GetAttenuation()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetAttenuation()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.attenuation.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":667
 *             return self.p_this.GetAttenuation()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetAttenuation(value)
 * 
 */

static int __pyx_pf_2sf_5Sound_11attenuation_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Sound_11attenuation_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sound.attenuation.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":668
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetAttenuation(value)             # <<<<<<<<<<<<<<
 * 
 *     property buffer:
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetAttenuation(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":671
 * 
 *     property buffer:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return wrap_sound_buffer_instance(
 *                 <declaudio.SoundBuffer*>self.p_this.GetBuffer(), False)
 */

static PyObject *__pyx_pf_2sf_5Sound_6buffer___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_6buffer___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":672
 *     property buffer:
 *         def __get__(self):
 *             return wrap_sound_buffer_instance(             # <<<<<<<<<<<<<<
 *                 <declaudio.SoundBuffer*>self.p_this.GetBuffer(), False)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "sf.pyx":673
 *         def __get__(self):
 *             return wrap_sound_buffer_instance(
 *                 <declaudio.SoundBuffer*>self.p_this.GetBuffer(), False)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, SoundBuffer value):
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_sound_buffer_instance(((sf::SoundBuffer *)((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetBuffer()), 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.buffer.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":675
 *                 <declaudio.SoundBuffer*>self.p_this.GetBuffer(), False)
 * 
 *         def __set__(self, SoundBuffer value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetBuffer(value.p_this[0])
 * 
 */

static int __pyx_pf_2sf_5Sound_6buffer_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_5Sound_6buffer_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_2sf_SoundBuffer, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":676
 * 
 *         def __set__(self, SoundBuffer value):
 *             self.p_this.SetBuffer(value.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property loop:
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetBuffer((((struct __pyx_obj_2sf_SoundBuffer *)__pyx_v_value)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Sound.buffer.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":679
 * 
 *     property loop:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetLoop()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_4loop___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_4loop___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":680
 *     property loop:
 *         def __get__(self):
 *             return self.p_this.GetLoop()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetLoop()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.loop.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":682
 *             return self.p_this.GetLoop()
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetLoop(value)
 * 
 */

static int __pyx_pf_2sf_5Sound_4loop_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Sound_4loop_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 682; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sound.loop.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":683
 * 
 *         def __set__(self, bint value):
 *             self.p_this.SetLoop(value)             # <<<<<<<<<<<<<<
 * 
 *     property min_distance:
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetLoop(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":686
 * 
 *     property min_distance:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetMinDistance()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_12min_distance___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_12min_distance___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":687
 *     property min_distance:
 *         def __get__(self):
 *             return self.p_this.GetMinDistance()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetMinDistance()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.min_distance.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":689
 *             return self.p_this.GetMinDistance()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetMinDistance(value)
 * 
 */

static int __pyx_pf_2sf_5Sound_12min_distance_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Sound_12min_distance_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 689; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sound.min_distance.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":690
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetMinDistance(value)             # <<<<<<<<<<<<<<
 * 
 *     property pitch:
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetMinDistance(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":693
 * 
 *     property pitch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetPitch()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_5pitch___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_5pitch___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":694
 *     property pitch:
 *         def __get__(self):
 *             return self.p_this.GetPitch()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetPitch()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.pitch.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":696
 *             return self.p_this.GetPitch()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetPitch(value)
 * 
 */

static int __pyx_pf_2sf_5Sound_5pitch_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Sound_5pitch_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 696; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sound.pitch.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":697
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetPitch(value)             # <<<<<<<<<<<<<<
 * 
 *     property playing_offset:
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetPitch(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":700
 * 
 *     property playing_offset:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetPlayingOffset()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_14playing_offset___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_14playing_offset___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":701
 *     property playing_offset:
 *         def __get__(self):
 *             return self.p_this.GetPlayingOffset()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetPlayingOffset()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.playing_offset.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":703
 *             return self.p_this.GetPlayingOffset()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetPlayingOffset(value)
 * 
 */

static int __pyx_pf_2sf_5Sound_14playing_offset_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Sound_14playing_offset_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 703; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sound.playing_offset.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":704
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetPlayingOffset(value)             # <<<<<<<<<<<<<<
 * 
 *     property position:
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetPlayingOffset(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":707
 * 
 *     property position:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector3f pos = self.p_this.GetPosition()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_8position___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_8position___get__(PyObject *__pyx_v_self) {
  sf::Vector3f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":708
 *     property position:
 *         def __get__(self):
 *             cdef decl.Vector3f pos = self.p_this.GetPosition()             # <<<<<<<<<<<<<<
 * 
 *             return (pos.x, pos.y, pos.z)
 */
  __pyx_v_pos = ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetPosition();

  /* "sf.pyx":710
 *             cdef decl.Vector3f pos = self.p_this.GetPosition()
 * 
 *             return (pos.x, pos.y, pos.z)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, tuple value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_pos.z); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = ((PyObject *)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.Sound.position.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":712
 *             return (pos.x, pos.y, pos.z)
 * 
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             x, y, z = value
 * 
 */

static int __pyx_pf_2sf_5Sound_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_5Sound_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  PyObject *__pyx_v_z;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  float __pyx_t_4;
  float __pyx_t_5;
  float __pyx_t_6;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_z = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":713
 * 
 *         def __set__(self, tuple value):
 *             x, y, z = value             # <<<<<<<<<<<<<<
 * 
 *             self.p_this.SetPosition(x, y, z)
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 3)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_GET_ITEM(tuple, 2); __Pyx_INCREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_v_z);
    __pyx_v_z = __pyx_t_3;
    __pyx_t_3 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 3);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 713; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":715
 *             x, y, z = value
 * 
 *             self.p_this.SetPosition(x, y, z)             # <<<<<<<<<<<<<<
 * 
 *     property relative_to_listener:
 */
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_6 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetPosition(__pyx_t_4, __pyx_t_5, __pyx_t_6);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Sound.position.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_DECREF(__pyx_v_z);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":718
 * 
 *     property relative_to_listener:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.IsRelativeToListener()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_20relative_to_listener___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_20relative_to_listener___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":719
 *     property relative_to_listener:
 *         def __get__(self):
 *             return self.p_this.IsRelativeToListener()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->IsRelativeToListener()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.relative_to_listener.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":721
 *             return self.p_this.IsRelativeToListener()
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetRelativeToListener(value)
 * 
 */

static int __pyx_pf_2sf_5Sound_20relative_to_listener_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Sound_20relative_to_listener_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 721; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sound.relative_to_listener.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":722
 * 
 *         def __set__(self, bint value):
 *             self.p_this.SetRelativeToListener(value)             # <<<<<<<<<<<<<<
 * 
 *     property status:
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetRelativeToListener(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":725
 * 
 *     property status:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return <int>self.p_this.GetStatus()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_6status___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_6status___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":726
 *     property status:
 *         def __get__(self):
 *             return <int>self.p_this.GetStatus()             # <<<<<<<<<<<<<<
 * 
 *     property volume:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((int)((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetStatus())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.status.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":729
 * 
 *     property volume:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetVolume()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_6volume___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_6volume___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":730
 *     property volume:
 *         def __get__(self):
 *             return self.p_this.GetVolume()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->GetVolume()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sound.volume.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":732
 *             return self.p_this.GetVolume()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetVolume(value)
 * 
 */

static int __pyx_pf_2sf_5Sound_6volume_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Sound_6volume_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sound.volume.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":733
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetVolume(value)             # <<<<<<<<<<<<<<
 * 
 *     def pause(self):
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->SetVolume(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":735
 *             self.p_this.SetVolume(value)
 * 
 *     def pause(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Pause()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_2pause(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_2pause(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("pause");

  /* "sf.pyx":736
 * 
 *     def pause(self):
 *         self.p_this.Pause()             # <<<<<<<<<<<<<<
 * 
 *     def play(self):
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->Pause();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":738
 *         self.p_this.Pause()
 * 
 *     def play(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Play()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_3play(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_3play(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("play");

  /* "sf.pyx":739
 * 
 *     def play(self):
 *         self.p_this.Play()             # <<<<<<<<<<<<<<
 * 
 *     def stop(self):
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->Play();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":741
 *         self.p_this.Play()
 * 
 *     def stop(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Stop()
 * 
 */

static PyObject *__pyx_pf_2sf_5Sound_4stop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_5Sound_4stop(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("stop");

  /* "sf.pyx":742
 * 
 *     def stop(self):
 *         self.p_this.Stop()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_Sound *)__pyx_v_self)->p_this->Stop();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":785
 *         }
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         """Return a short description of the event."""
 * 
 */

static PyObject *__pyx_pf_2sf_5Event___str__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static char __pyx_doc_2sf_5Event___str__[] = "Return a short description of the event.";
static PyMethodDef __pyx_mdef_2sf_5Event___str__ = {__Pyx_NAMESTR("__str__"), (PyCFunction)__pyx_pf_2sf_5Event___str__, METH_O, __Pyx_DOCSTR(__pyx_doc_2sf_5Event___str__)};
static PyObject *__pyx_pf_2sf_5Event___str__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__str__");
  __pyx_self = __pyx_self;

  /* "sf.pyx":788
 *         """Return a short description of the event."""
 * 
 *         return self.NAMES[self.type]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__NAMES); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__type); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Event.__str__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":793
 * # Create an Python Event object that matches the C++ object
 * # by dynamically setting the corresponding attributes.
 * cdef wrap_event_instance(decl.Event *p_cpp_instance):             # <<<<<<<<<<<<<<
 *     cdef ret = Event()
 * 
 */

static  PyObject *__pyx_f_2sf_wrap_event_instance(sf::Event *__pyx_v_p_cpp_instance) {
  PyObject *__pyx_v_ret = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("wrap_event_instance");

  /* "sf.pyx":794
 * # by dynamically setting the corresponding attributes.
 * cdef wrap_event_instance(decl.Event *p_cpp_instance):
 *     cdef ret = Event()             # <<<<<<<<<<<<<<
 * 
 *     # Set the type
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_ret = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sf.pyx":797
 * 
 *     # Set the type
 *     if p_cpp_instance.Type == declevent.Closed:             # <<<<<<<<<<<<<<
 *         ret.type = Event.CLOSED
 *     elif p_cpp_instance.Type == declevent.KeyPressed:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::Closed);
  if (__pyx_t_3) {

    /* "sf.pyx":798
 *     # Set the type
 *     if p_cpp_instance.Type == declevent.Closed:
 *         ret.type = Event.CLOSED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.KeyPressed:
 *         ret.type = Event.KEY_PRESSED
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__CLOSED); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":799
 *     if p_cpp_instance.Type == declevent.Closed:
 *         ret.type = Event.CLOSED
 *     elif p_cpp_instance.Type == declevent.KeyPressed:             # <<<<<<<<<<<<<<
 *         ret.type = Event.KEY_PRESSED
 *     elif p_cpp_instance.Type == declevent.KeyReleased:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::KeyPressed);
  if (__pyx_t_3) {

    /* "sf.pyx":800
 *         ret.type = Event.CLOSED
 *     elif p_cpp_instance.Type == declevent.KeyPressed:
 *         ret.type = Event.KEY_PRESSED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.KeyReleased:
 *         ret.type = Event.KEY_RELEASED
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__KEY_PRESSED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":801
 *     elif p_cpp_instance.Type == declevent.KeyPressed:
 *         ret.type = Event.KEY_PRESSED
 *     elif p_cpp_instance.Type == declevent.KeyReleased:             # <<<<<<<<<<<<<<
 *         ret.type = Event.KEY_RELEASED
 *     elif p_cpp_instance.Type == declevent.Resized:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::KeyReleased);
  if (__pyx_t_3) {

    /* "sf.pyx":802
 *         ret.type = Event.KEY_PRESSED
 *     elif p_cpp_instance.Type == declevent.KeyReleased:
 *         ret.type = Event.KEY_RELEASED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.Resized:
 *         ret.type = Event.RESIZED
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__KEY_RELEASED); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":803
 *     elif p_cpp_instance.Type == declevent.KeyReleased:
 *         ret.type = Event.KEY_RELEASED
 *     elif p_cpp_instance.Type == declevent.Resized:             # <<<<<<<<<<<<<<
 *         ret.type = Event.RESIZED
 *     elif p_cpp_instance.Type == declevent.TextEntered:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::Resized);
  if (__pyx_t_3) {

    /* "sf.pyx":804
 *         ret.type = Event.KEY_RELEASED
 *     elif p_cpp_instance.Type == declevent.Resized:
 *         ret.type = Event.RESIZED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.TextEntered:
 *         ret.type = Event.TEXT_ENTERED
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__RESIZED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 804; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":805
 *     elif p_cpp_instance.Type == declevent.Resized:
 *         ret.type = Event.RESIZED
 *     elif p_cpp_instance.Type == declevent.TextEntered:             # <<<<<<<<<<<<<<
 *         ret.type = Event.TEXT_ENTERED
 *     elif p_cpp_instance.Type == declevent.MouseButtonPressed:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::TextEntered);
  if (__pyx_t_3) {

    /* "sf.pyx":806
 *         ret.type = Event.RESIZED
 *     elif p_cpp_instance.Type == declevent.TextEntered:
 *         ret.type = Event.TEXT_ENTERED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseButtonPressed:
 *         ret.type = Event.MOUSE_BUTTON_PRESSED
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__TEXT_ENTERED); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":807
 *     elif p_cpp_instance.Type == declevent.TextEntered:
 *         ret.type = Event.TEXT_ENTERED
 *     elif p_cpp_instance.Type == declevent.MouseButtonPressed:             # <<<<<<<<<<<<<<
 *         ret.type = Event.MOUSE_BUTTON_PRESSED
 *     elif p_cpp_instance.Type == declevent.MouseButtonReleased:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseButtonPressed);
  if (__pyx_t_3) {

    /* "sf.pyx":808
 *         ret.type = Event.TEXT_ENTERED
 *     elif p_cpp_instance.Type == declevent.MouseButtonPressed:
 *         ret.type = Event.MOUSE_BUTTON_PRESSED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseButtonReleased:
 *         ret.type = Event.MOUSE_BUTTON_RELEASED
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s_19); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":809
 *     elif p_cpp_instance.Type == declevent.MouseButtonPressed:
 *         ret.type = Event.MOUSE_BUTTON_PRESSED
 *     elif p_cpp_instance.Type == declevent.MouseButtonReleased:             # <<<<<<<<<<<<<<
 *         ret.type = Event.MOUSE_BUTTON_RELEASED
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseButtonReleased);
  if (__pyx_t_3) {

    /* "sf.pyx":810
 *         ret.type = Event.MOUSE_BUTTON_PRESSED
 *     elif p_cpp_instance.Type == declevent.MouseButtonReleased:
 *         ret.type = Event.MOUSE_BUTTON_RELEASED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.type = Event.MOUSE_MOVED
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s_20); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":811
 *     elif p_cpp_instance.Type == declevent.MouseButtonReleased:
 *         ret.type = Event.MOUSE_BUTTON_RELEASED
 *     elif p_cpp_instance.Type == declevent.MouseMoved:             # <<<<<<<<<<<<<<
 *         ret.type = Event.MOUSE_MOVED
 *     elif p_cpp_instance.Type == declevent.LostFocus:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseMoved);
  if (__pyx_t_3) {

    /* "sf.pyx":812
 *         ret.type = Event.MOUSE_BUTTON_RELEASED
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.type = Event.MOUSE_MOVED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.LostFocus:
 *         ret.type = Event.LOST_FOCUS
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__MOUSE_MOVED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":813
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.type = Event.MOUSE_MOVED
 *     elif p_cpp_instance.Type == declevent.LostFocus:             # <<<<<<<<<<<<<<
 *         ret.type = Event.LOST_FOCUS
 *     elif p_cpp_instance.Type == declevent.GainedFocus:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::LostFocus);
  if (__pyx_t_3) {

    /* "sf.pyx":814
 *         ret.type = Event.MOUSE_MOVED
 *     elif p_cpp_instance.Type == declevent.LostFocus:
 *         ret.type = Event.LOST_FOCUS             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.GainedFocus:
 *         ret.type = Event.GAINED_FOCUS
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__LOST_FOCUS); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":815
 *     elif p_cpp_instance.Type == declevent.LostFocus:
 *         ret.type = Event.LOST_FOCUS
 *     elif p_cpp_instance.Type == declevent.GainedFocus:             # <<<<<<<<<<<<<<
 *         ret.type = Event.GAINED_FOCUS
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::GainedFocus);
  if (__pyx_t_3) {

    /* "sf.pyx":816
 *         ret.type = Event.LOST_FOCUS
 *     elif p_cpp_instance.Type == declevent.GainedFocus:
 *         ret.type = Event.GAINED_FOCUS             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:
 *         ret.type = Event.MOUSE_WHEEL_MOVED
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__GAINED_FOCUS); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":817
 *     elif p_cpp_instance.Type == declevent.GainedFocus:
 *         ret.type = Event.GAINED_FOCUS
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:             # <<<<<<<<<<<<<<
 *         ret.type = Event.MOUSE_WHEEL_MOVED
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseWheelMoved);
  if (__pyx_t_3) {

    /* "sf.pyx":818
 *         ret.type = Event.GAINED_FOCUS
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:
 *         ret.type = Event.MOUSE_WHEEL_MOVED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.type = Event.MOUSE_MOVED
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__MOUSE_WHEEL_MOVED); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":819
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:
 *         ret.type = Event.MOUSE_WHEEL_MOVED
 *     elif p_cpp_instance.Type == declevent.MouseMoved:             # <<<<<<<<<<<<<<
 *         ret.type = Event.MOUSE_MOVED
 *     elif p_cpp_instance.Type == declevent.MouseEntered:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseMoved);
  if (__pyx_t_3) {

    /* "sf.pyx":820
 *         ret.type = Event.MOUSE_WHEEL_MOVED
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.type = Event.MOUSE_MOVED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseEntered:
 *         ret.type = Event.MOUSE_ENTERED
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__MOUSE_MOVED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":821
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.type = Event.MOUSE_MOVED
 *     elif p_cpp_instance.Type == declevent.MouseEntered:             # <<<<<<<<<<<<<<
 *         ret.type = Event.MOUSE_ENTERED
 *     elif p_cpp_instance.Type == declevent.MouseLeft:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseEntered);
  if (__pyx_t_3) {

    /* "sf.pyx":822
 *         ret.type = Event.MOUSE_MOVED
 *     elif p_cpp_instance.Type == declevent.MouseEntered:
 *         ret.type = Event.MOUSE_ENTERED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseLeft:
 *         ret.type = Event.MOUSE_LEFT
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__MOUSE_ENTERED); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":823
 *     elif p_cpp_instance.Type == declevent.MouseEntered:
 *         ret.type = Event.MOUSE_ENTERED
 *     elif p_cpp_instance.Type == declevent.MouseLeft:             # <<<<<<<<<<<<<<
 *         ret.type = Event.MOUSE_LEFT
 *     elif p_cpp_instance.Type == declevent.JoyButtonPressed:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseLeft);
  if (__pyx_t_3) {

    /* "sf.pyx":824
 *         ret.type = Event.MOUSE_ENTERED
 *     elif p_cpp_instance.Type == declevent.MouseLeft:
 *         ret.type = Event.MOUSE_LEFT             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.JoyButtonPressed:
 *         ret.type = Event.JOY_BUTTON_PRESSED
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__MOUSE_LEFT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":825
 *     elif p_cpp_instance.Type == declevent.MouseLeft:
 *         ret.type = Event.MOUSE_LEFT
 *     elif p_cpp_instance.Type == declevent.JoyButtonPressed:             # <<<<<<<<<<<<<<
 *         ret.type = Event.JOY_BUTTON_PRESSED
 *     elif p_cpp_instance.Type == declevent.JoyButtonReleased:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::JoyButtonPressed);
  if (__pyx_t_3) {

    /* "sf.pyx":826
 *         ret.type = Event.MOUSE_LEFT
 *     elif p_cpp_instance.Type == declevent.JoyButtonPressed:
 *         ret.type = Event.JOY_BUTTON_PRESSED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.JoyButtonReleased:
 *         ret.type = Event.JOY_BUTTON_RELEASED
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__JOY_BUTTON_PRESSED); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":827
 *     elif p_cpp_instance.Type == declevent.JoyButtonPressed:
 *         ret.type = Event.JOY_BUTTON_PRESSED
 *     elif p_cpp_instance.Type == declevent.JoyButtonReleased:             # <<<<<<<<<<<<<<
 *         ret.type = Event.JOY_BUTTON_RELEASED
 *     elif p_cpp_instance.Type == declevent.JoyMoved:
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::JoyButtonReleased);
  if (__pyx_t_3) {

    /* "sf.pyx":828
 *         ret.type = Event.JOY_BUTTON_PRESSED
 *     elif p_cpp_instance.Type == declevent.JoyButtonReleased:
 *         ret.type = Event.JOY_BUTTON_RELEASED             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.JoyMoved:
 *         ret.type = Event.JOY_MOVED
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__JOY_BUTTON_RELEASED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }

  /* "sf.pyx":829
 *     elif p_cpp_instance.Type == declevent.JoyButtonReleased:
 *         ret.type = Event.JOY_BUTTON_RELEASED
 *     elif p_cpp_instance.Type == declevent.JoyMoved:             # <<<<<<<<<<<<<<
 *         ret.type = Event.JOY_MOVED
 * 
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::JoyMoved);
  if (__pyx_t_3) {

    /* "sf.pyx":830
 *         ret.type = Event.JOY_BUTTON_RELEASED
 *     elif p_cpp_instance.Type == declevent.JoyMoved:
 *         ret.type = Event.JOY_MOVED             # <<<<<<<<<<<<<<
 * 
 *     # Set other attributes if needed
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__Event); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__JOY_MOVED); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__type, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "sf.pyx":833
 * 
 *     # Set other attributes if needed
 *     if p_cpp_instance.Type == declevent.Resized:             # <<<<<<<<<<<<<<
 *         ret.width = p_cpp_instance.Size.Width
 *         ret.height = p_cpp_instance.Size.Height
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::Resized);
  if (__pyx_t_3) {

    /* "sf.pyx":834
 *     # Set other attributes if needed
 *     if p_cpp_instance.Type == declevent.Resized:
 *         ret.width = p_cpp_instance.Size.Width             # <<<<<<<<<<<<<<
 *         ret.height = p_cpp_instance.Size.Height
 *     elif (p_cpp_instance.Type == declevent.KeyPressed or
 */
    __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_p_cpp_instance->Size.Width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__width, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":835
 *     if p_cpp_instance.Type == declevent.Resized:
 *         ret.width = p_cpp_instance.Size.Width
 *         ret.height = p_cpp_instance.Size.Height             # <<<<<<<<<<<<<<
 *     elif (p_cpp_instance.Type == declevent.KeyPressed or
 *           p_cpp_instance.Type == declevent.KeyReleased):
 */
    __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_p_cpp_instance->Size.Height); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__height, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "sf.pyx":836
 *         ret.width = p_cpp_instance.Size.Width
 *         ret.height = p_cpp_instance.Size.Height
 *     elif (p_cpp_instance.Type == declevent.KeyPressed or             # <<<<<<<<<<<<<<
 *           p_cpp_instance.Type == declevent.KeyReleased):
 *         ret.code = p_cpp_instance.Key.Code
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::KeyPressed);
  if (!__pyx_t_3) {

    /* "sf.pyx":837
 *         ret.height = p_cpp_instance.Size.Height
 *     elif (p_cpp_instance.Type == declevent.KeyPressed or
 *           p_cpp_instance.Type == declevent.KeyReleased):             # <<<<<<<<<<<<<<
 *         ret.code = p_cpp_instance.Key.Code
 *         ret.alt = p_cpp_instance.Key.Alt
 */
    __pyx_t_4 = (__pyx_v_p_cpp_instance->Type == sf::Event::KeyReleased);
    __pyx_t_5 = __pyx_t_4;
  } else {
    __pyx_t_5 = __pyx_t_3;
  }
  if (__pyx_t_5) {

    /* "sf.pyx":838
 *     elif (p_cpp_instance.Type == declevent.KeyPressed or
 *           p_cpp_instance.Type == declevent.KeyReleased):
 *         ret.code = p_cpp_instance.Key.Code             # <<<<<<<<<<<<<<
 *         ret.alt = p_cpp_instance.Key.Alt
 *         ret.control = p_cpp_instance.Key.Control
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->Key.Code); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__code, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":839
 *           p_cpp_instance.Type == declevent.KeyReleased):
 *         ret.code = p_cpp_instance.Key.Code
 *         ret.alt = p_cpp_instance.Key.Alt             # <<<<<<<<<<<<<<
 *         ret.control = p_cpp_instance.Key.Control
 *         ret.shift = p_cpp_instance.Key.Shift
 */
    __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_p_cpp_instance->Key.Alt); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__alt, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":840
 *         ret.code = p_cpp_instance.Key.Code
 *         ret.alt = p_cpp_instance.Key.Alt
 *         ret.control = p_cpp_instance.Key.Control             # <<<<<<<<<<<<<<
 *         ret.shift = p_cpp_instance.Key.Shift
 *     elif (p_cpp_instance.Type == declevent.MouseButtonPressed or
 */
    __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_p_cpp_instance->Key.Control); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__control, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":841
 *         ret.alt = p_cpp_instance.Key.Alt
 *         ret.control = p_cpp_instance.Key.Control
 *         ret.shift = p_cpp_instance.Key.Shift             # <<<<<<<<<<<<<<
 *     elif (p_cpp_instance.Type == declevent.MouseButtonPressed or
 *           p_cpp_instance.Type == declevent.MouseButtonReleased):
 */
    __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_p_cpp_instance->Key.Shift); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__shift, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "sf.pyx":842
 *         ret.control = p_cpp_instance.Key.Control
 *         ret.shift = p_cpp_instance.Key.Shift
 *     elif (p_cpp_instance.Type == declevent.MouseButtonPressed or             # <<<<<<<<<<<<<<
 *           p_cpp_instance.Type == declevent.MouseButtonReleased):
 *         ret.button = p_cpp_instance.MouseButton.Button
 */
  __pyx_t_5 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseButtonPressed);
  if (!__pyx_t_5) {

    /* "sf.pyx":843
 *         ret.shift = p_cpp_instance.Key.Shift
 *     elif (p_cpp_instance.Type == declevent.MouseButtonPressed or
 *           p_cpp_instance.Type == declevent.MouseButtonReleased):             # <<<<<<<<<<<<<<
 *         ret.button = p_cpp_instance.MouseButton.Button
 *         ret.x = p_cpp_instance.MouseButton.X
 */
    __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseButtonReleased);
    __pyx_t_4 = __pyx_t_3;
  } else {
    __pyx_t_4 = __pyx_t_5;
  }
  if (__pyx_t_4) {

    /* "sf.pyx":844
 *     elif (p_cpp_instance.Type == declevent.MouseButtonPressed or
 *           p_cpp_instance.Type == declevent.MouseButtonReleased):
 *         ret.button = p_cpp_instance.MouseButton.Button             # <<<<<<<<<<<<<<
 *         ret.x = p_cpp_instance.MouseButton.X
 *         ret.y = p_cpp_instance.MouseButton.Y
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->MouseButton.Button); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__button, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":845
 *           p_cpp_instance.Type == declevent.MouseButtonReleased):
 *         ret.button = p_cpp_instance.MouseButton.Button
 *         ret.x = p_cpp_instance.MouseButton.X             # <<<<<<<<<<<<<<
 *         ret.y = p_cpp_instance.MouseButton.Y
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->MouseButton.X); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__x, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":846
 *         ret.button = p_cpp_instance.MouseButton.Button
 *         ret.x = p_cpp_instance.MouseButton.X
 *         ret.y = p_cpp_instance.MouseButton.Y             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.x = p_cpp_instance.MouseMove.X
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->MouseButton.Y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__y, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "sf.pyx":847
 *         ret.x = p_cpp_instance.MouseButton.X
 *         ret.y = p_cpp_instance.MouseButton.Y
 *     elif p_cpp_instance.Type == declevent.MouseMoved:             # <<<<<<<<<<<<<<
 *         ret.x = p_cpp_instance.MouseMove.X
 *         ret.y = p_cpp_instance.MouseMove.Y
 */
  __pyx_t_4 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseMoved);
  if (__pyx_t_4) {

    /* "sf.pyx":848
 *         ret.y = p_cpp_instance.MouseButton.Y
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.x = p_cpp_instance.MouseMove.X             # <<<<<<<<<<<<<<
 *         ret.y = p_cpp_instance.MouseMove.Y
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->MouseMove.X); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__x, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":849
 *     elif p_cpp_instance.Type == declevent.MouseMoved:
 *         ret.x = p_cpp_instance.MouseMove.X
 *         ret.y = p_cpp_instance.MouseMove.Y             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:
 *         ret.delta = p_cpp_instance.MouseWheel.Delta
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->MouseMove.Y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__y, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "sf.pyx":850
 *         ret.x = p_cpp_instance.MouseMove.X
 *         ret.y = p_cpp_instance.MouseMove.Y
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:             # <<<<<<<<<<<<<<
 *         ret.delta = p_cpp_instance.MouseWheel.Delta
 *         ret.x = p_cpp_instance.MouseWheel.X
 */
  __pyx_t_4 = (__pyx_v_p_cpp_instance->Type == sf::Event::MouseWheelMoved);
  if (__pyx_t_4) {

    /* "sf.pyx":851
 *         ret.y = p_cpp_instance.MouseMove.Y
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:
 *         ret.delta = p_cpp_instance.MouseWheel.Delta             # <<<<<<<<<<<<<<
 *         ret.x = p_cpp_instance.MouseWheel.X
 *         ret.y = p_cpp_instance.MouseWheel.Y
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->MouseWheel.Delta); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__delta, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":852
 *     elif p_cpp_instance.Type == declevent.MouseWheelMoved:
 *         ret.delta = p_cpp_instance.MouseWheel.Delta
 *         ret.x = p_cpp_instance.MouseWheel.X             # <<<<<<<<<<<<<<
 *         ret.y = p_cpp_instance.MouseWheel.Y
 *     elif (p_cpp_instance.Type == declevent.JoyButtonPressed or
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->MouseWheel.X); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__x, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":853
 *         ret.delta = p_cpp_instance.MouseWheel.Delta
 *         ret.x = p_cpp_instance.MouseWheel.X
 *         ret.y = p_cpp_instance.MouseWheel.Y             # <<<<<<<<<<<<<<
 *     elif (p_cpp_instance.Type == declevent.JoyButtonPressed or
 *           p_cpp_instance.Type == declevent.JoyButtonReleased):
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->MouseWheel.Y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__y, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "sf.pyx":854
 *         ret.x = p_cpp_instance.MouseWheel.X
 *         ret.y = p_cpp_instance.MouseWheel.Y
 *     elif (p_cpp_instance.Type == declevent.JoyButtonPressed or             # <<<<<<<<<<<<<<
 *           p_cpp_instance.Type == declevent.JoyButtonReleased):
 *         ret.joystick_id = p_cpp_instance.JoyButton.JoystickId
 */
  __pyx_t_4 = (__pyx_v_p_cpp_instance->Type == sf::Event::JoyButtonPressed);
  if (!__pyx_t_4) {

    /* "sf.pyx":855
 *         ret.y = p_cpp_instance.MouseWheel.Y
 *     elif (p_cpp_instance.Type == declevent.JoyButtonPressed or
 *           p_cpp_instance.Type == declevent.JoyButtonReleased):             # <<<<<<<<<<<<<<
 *         ret.joystick_id = p_cpp_instance.JoyButton.JoystickId
 *         ret.button = p_cpp_instance.JoyButton.Button
 */
    __pyx_t_5 = (__pyx_v_p_cpp_instance->Type == sf::Event::JoyButtonReleased);
    __pyx_t_3 = __pyx_t_5;
  } else {
    __pyx_t_3 = __pyx_t_4;
  }
  if (__pyx_t_3) {

    /* "sf.pyx":856
 *     elif (p_cpp_instance.Type == declevent.JoyButtonPressed or
 *           p_cpp_instance.Type == declevent.JoyButtonReleased):
 *         ret.joystick_id = p_cpp_instance.JoyButton.JoystickId             # <<<<<<<<<<<<<<
 *         ret.button = p_cpp_instance.JoyButton.Button
 *     elif p_cpp_instance.Type == declevent.JoyMoved:
 */
    __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_p_cpp_instance->JoyButton.JoystickId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__joystick_id, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":857
 *           p_cpp_instance.Type == declevent.JoyButtonReleased):
 *         ret.joystick_id = p_cpp_instance.JoyButton.JoystickId
 *         ret.button = p_cpp_instance.JoyButton.Button             # <<<<<<<<<<<<<<
 *     elif p_cpp_instance.Type == declevent.JoyMoved:
 *         ret.joystick_id = p_cpp_instance.JoyMove.JoystickId
 */
    __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_p_cpp_instance->JoyButton.Button); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 857; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__button, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 857; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }

  /* "sf.pyx":858
 *         ret.joystick_id = p_cpp_instance.JoyButton.JoystickId
 *         ret.button = p_cpp_instance.JoyButton.Button
 *     elif p_cpp_instance.Type == declevent.JoyMoved:             # <<<<<<<<<<<<<<
 *         ret.joystick_id = p_cpp_instance.JoyMove.JoystickId
 *         ret.axis = p_cpp_instance.JoyMove.Axis
 */
  __pyx_t_3 = (__pyx_v_p_cpp_instance->Type == sf::Event::JoyMoved);
  if (__pyx_t_3) {

    /* "sf.pyx":859
 *         ret.button = p_cpp_instance.JoyButton.Button
 *     elif p_cpp_instance.Type == declevent.JoyMoved:
 *         ret.joystick_id = p_cpp_instance.JoyMove.JoystickId             # <<<<<<<<<<<<<<
 *         ret.axis = p_cpp_instance.JoyMove.Axis
 *         ret.position = p_cpp_instance.JoyMove.Position
 */
    __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_p_cpp_instance->JoyMove.JoystickId); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 859; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__joystick_id, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 859; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":860
 *     elif p_cpp_instance.Type == declevent.JoyMoved:
 *         ret.joystick_id = p_cpp_instance.JoyMove.JoystickId
 *         ret.axis = p_cpp_instance.JoyMove.Axis             # <<<<<<<<<<<<<<
 *         ret.position = p_cpp_instance.JoyMove.Position
 * 
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_p_cpp_instance->JoyMove.Axis); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 860; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__axis, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 860; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":861
 *         ret.joystick_id = p_cpp_instance.JoyMove.JoystickId
 *         ret.axis = p_cpp_instance.JoyMove.Axis
 *         ret.position = p_cpp_instance.JoyMove.Position             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_p_cpp_instance->JoyMove.Position); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyObject_SetAttr(__pyx_v_ret, __pyx_n_s__position, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "sf.pyx":863
 *         ret.position = p_cpp_instance.JoyMove.Position
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ret);
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.wrap_event_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":871
 *     cdef decl.Input *p_this
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError("You shouldn't need to create Input objects")
 * 
 */

static int __pyx_pf_2sf_5Input___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_5Input___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;

  /* "sf.pyx":872
 * 
 *     def __init__(self):
 *         raise NotImplementedError("You shouldn't need to create Input objects")             # <<<<<<<<<<<<<<
 * 
 *     property mouse_x:
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_22), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Input.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":875
 * 
 *     property mouse_x:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.get_mouse_x()
 * 
 */

static PyObject *__pyx_pf_2sf_5Input_7mouse_x___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Input_7mouse_x___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":876
 *     property mouse_x:
 *         def __get__(self):
 *             return self.get_mouse_x()             # <<<<<<<<<<<<<<
 * 
 *     property mouse_y:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_mouse_x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Input.mouse_x.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":879
 * 
 *     property mouse_y:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.get_mouse_y()
 * 
 */

static PyObject *__pyx_pf_2sf_5Input_7mouse_y___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Input_7mouse_y___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":880
 *     property mouse_y:
 *         def __get__(self):
 *             return self.get_mouse_y()             # <<<<<<<<<<<<<<
 * 
 *     def get_joystick_axis(self, unsigned int joy_id, int axis):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_mouse_y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Input.mouse_y.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":882
 *             return self.get_mouse_y()
 * 
 *     def get_joystick_axis(self, unsigned int joy_id, int axis):             # <<<<<<<<<<<<<<
 *         return self.GetJoystickAxis(joy_id, axis)
 * 
 */

static PyObject *__pyx_pf_2sf_5Input_1get_joystick_axis(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Input_1get_joystick_axis(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_joy_id;
  int __pyx_v_axis;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__joy_id,&__pyx_n_s__axis,0};
  __Pyx_RefNannySetupContext("get_joystick_axis");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__joy_id);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__axis);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("get_joystick_axis", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "get_joystick_axis") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_joy_id = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_joy_id == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_axis = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_axis == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_joy_id = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_joy_id == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_axis = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_axis == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_joystick_axis", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 882; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Input.get_joystick_axis");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":883
 * 
 *     def get_joystick_axis(self, unsigned int joy_id, int axis):
 *         return self.GetJoystickAxis(joy_id, axis)             # <<<<<<<<<<<<<<
 * 
 *     def get_mouse_x(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__GetJoystickAxis); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyLong_FromUnsignedLong(__pyx_v_joy_id); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyInt_FromLong(__pyx_v_axis); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.Input.get_joystick_axis");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":885
 *         return self.GetJoystickAxis(joy_id, axis)
 * 
 *     def get_mouse_x(self):             # <<<<<<<<<<<<<<
 *          return self.p_this.GetMouseX()
 * 
 */

static PyObject *__pyx_pf_2sf_5Input_2get_mouse_x(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_5Input_2get_mouse_x(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_mouse_x");

  /* "sf.pyx":886
 * 
 *     def get_mouse_x(self):
 *          return self.p_this.GetMouseX()             # <<<<<<<<<<<<<<
 * 
 *     def get_mouse_y(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_Input *)__pyx_v_self)->p_this->GetMouseX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Input.get_mouse_x");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":888
 *          return self.p_this.GetMouseX()
 * 
 *     def get_mouse_y(self):             # <<<<<<<<<<<<<<
 *          return self.p_this.GetMouseY()
 * 
 */

static PyObject *__pyx_pf_2sf_5Input_3get_mouse_y(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_5Input_3get_mouse_y(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_mouse_y");

  /* "sf.pyx":889
 * 
 *     def get_mouse_y(self):
 *          return self.p_this.GetMouseY()             # <<<<<<<<<<<<<<
 * 
 *     def is_key_down(self, int key_code):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_Input *)__pyx_v_self)->p_this->GetMouseY()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Input.get_mouse_y");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":891
 *          return self.p_this.GetMouseY()
 * 
 *     def is_key_down(self, int key_code):             # <<<<<<<<<<<<<<
 *          return self.p_this.IsKeyDown(<declkey.Code>key_code)
 * 
 */

static PyObject *__pyx_pf_2sf_5Input_4is_key_down(PyObject *__pyx_v_self, PyObject *__pyx_arg_key_code); /*proto*/
static PyObject *__pyx_pf_2sf_5Input_4is_key_down(PyObject *__pyx_v_self, PyObject *__pyx_arg_key_code) {
  int __pyx_v_key_code;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_key_down");
  assert(__pyx_arg_key_code); {
    __pyx_v_key_code = __Pyx_PyInt_AsInt(__pyx_arg_key_code); if (unlikely((__pyx_v_key_code == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 891; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Input.is_key_down");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":892
 * 
 *     def is_key_down(self, int key_code):
 *          return self.p_this.IsKeyDown(<declkey.Code>key_code)             # <<<<<<<<<<<<<<
 * 
 *     def is_mouse_button_down(self, int button):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_Input *)__pyx_v_self)->p_this->IsKeyDown(((sf::Key::Code)__pyx_v_key_code))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Input.is_key_down");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":894
 *          return self.p_this.IsKeyDown(<declkey.Code>key_code)
 * 
 *     def is_mouse_button_down(self, int button):             # <<<<<<<<<<<<<<
 *          return self.p_this.IsMouseButtonDown(<declmouse.Button>button)
 * 
 */

static PyObject *__pyx_pf_2sf_5Input_5is_mouse_button_down(PyObject *__pyx_v_self, PyObject *__pyx_arg_button); /*proto*/
static PyObject *__pyx_pf_2sf_5Input_5is_mouse_button_down(PyObject *__pyx_v_self, PyObject *__pyx_arg_button) {
  int __pyx_v_button;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_mouse_button_down");
  assert(__pyx_arg_button); {
    __pyx_v_button = __Pyx_PyInt_AsInt(__pyx_arg_button); if (unlikely((__pyx_v_button == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 894; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Input.is_mouse_button_down");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":895
 * 
 *     def is_mouse_button_down(self, int button):
 *          return self.p_this.IsMouseButtonDown(<declmouse.Button>button)             # <<<<<<<<<<<<<<
 * 
 *     def is_joystick_button_down(self, unsigned int joy_id, unsigned int button):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_Input *)__pyx_v_self)->p_this->IsMouseButtonDown(((sf::Mouse::Button)__pyx_v_button))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Input.is_mouse_button_down");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":897
 *          return self.p_this.IsMouseButtonDown(<declmouse.Button>button)
 * 
 *     def is_joystick_button_down(self, unsigned int joy_id, unsigned int button):             # <<<<<<<<<<<<<<
 *          return self.p_this.IsJoystickButtonDown(joy_id, button)
 * 
 */

static PyObject *__pyx_pf_2sf_5Input_6is_joystick_button_down(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Input_6is_joystick_button_down(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_joy_id;
  unsigned int __pyx_v_button;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__joy_id,&__pyx_n_s__button,0};
  __Pyx_RefNannySetupContext("is_joystick_button_down");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__joy_id);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__button);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("is_joystick_button_down", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "is_joystick_button_down") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_joy_id = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_joy_id == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_button = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_button == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_joy_id = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_joy_id == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_button = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_button == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("is_joystick_button_down", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Input.is_joystick_button_down");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":898
 * 
 *     def is_joystick_button_down(self, unsigned int joy_id, unsigned int button):
 *          return self.p_this.IsJoystickButtonDown(joy_id, button)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_Input *)__pyx_v_self)->p_this->IsJoystickButtonDown(__pyx_v_joy_id, __pyx_v_button)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Input.is_joystick_button_down");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":906
 *     cdef decl.Glyph *p_this
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.Glyph()
 * 
 */

static int __pyx_pf_2sf_5Glyph___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_5Glyph___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;

  /* "sf.pyx":907
 * 
 *     def __init__(self):
 *         self.p_this = new decl.Glyph()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_Glyph *)__pyx_v_self)->p_this = new sf::Glyph();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":909
 *         self.p_this = new decl.Glyph()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_5Glyph_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_5Glyph_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":910
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     property advance:
 */
  delete ((struct __pyx_obj_2sf_Glyph *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":913
 * 
 *     property advance:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Advance
 * 
 */

static PyObject *__pyx_pf_2sf_5Glyph_7advance___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Glyph_7advance___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":914
 *     property advance:
 *         def __get__(self):
 *             return self.p_this.Advance             # <<<<<<<<<<<<<<
 * 
 *     property bounds:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_Glyph *)__pyx_v_self)->p_this->Advance); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Glyph.advance.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":917
 * 
 *     property bounds:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.IntRect *p = new decl.IntRect()
 * 
 */

static PyObject *__pyx_pf_2sf_5Glyph_6bounds___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Glyph_6bounds___get__(PyObject *__pyx_v_self) {
  sf::IntRect *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":918
 *     property bounds:
 *         def __get__(self):
 *             cdef decl.IntRect *p = new decl.IntRect()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = self.p_this.Bounds
 */
  __pyx_v_p = new sf::IntRect();

  /* "sf.pyx":920
 *             cdef decl.IntRect *p = new decl.IntRect()
 * 
 *             p[0] = self.p_this.Bounds             # <<<<<<<<<<<<<<
 * 
 *             return wrap_int_rect_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_Glyph *)__pyx_v_self)->p_this->Bounds;

  /* "sf.pyx":922
 *             p[0] = self.p_this.Bounds
 * 
 *             return wrap_int_rect_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     property sub_rect:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_int_rect_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Glyph.bounds.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":925
 * 
 *     property sub_rect:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.IntRect *p = new decl.IntRect()
 * 
 */

static PyObject *__pyx_pf_2sf_5Glyph_8sub_rect___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Glyph_8sub_rect___get__(PyObject *__pyx_v_self) {
  sf::IntRect *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":926
 *     property sub_rect:
 *         def __get__(self):
 *             cdef decl.IntRect *p = new decl.IntRect()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = self.p_this.SubRect
 */
  __pyx_v_p = new sf::IntRect();

  /* "sf.pyx":928
 *             cdef decl.IntRect *p = new decl.IntRect()
 * 
 *             p[0] = self.p_this.SubRect             # <<<<<<<<<<<<<<
 * 
 *             return wrap_int_rect_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_Glyph *)__pyx_v_self)->p_this->SubRect;

  /* "sf.pyx":930
 *             p[0] = self.p_this.SubRect
 * 
 *             return wrap_int_rect_instance(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_int_rect_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Glyph.sub_rect.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":933
 * 
 * 
 * cdef Glyph wrap_glyph_instance(decl.Glyph *p_cpp_instance):             # <<<<<<<<<<<<<<
 *     cdef Glyph ret = Glyph.__new__(Glyph)
 * 
 */

static  struct __pyx_obj_2sf_Glyph *__pyx_f_2sf_wrap_glyph_instance(sf::Glyph *__pyx_v_p_cpp_instance) {
  struct __pyx_obj_2sf_Glyph *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_Glyph *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_glyph_instance");

  /* "sf.pyx":934
 * 
 * cdef Glyph wrap_glyph_instance(decl.Glyph *p_cpp_instance):
 *     cdef Glyph ret = Glyph.__new__(Glyph)             # <<<<<<<<<<<<<<
 * 
 *     ret.p_this = p_cpp_instance
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_Glyph)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Glyph)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_Glyph *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":936
 *     cdef Glyph ret = Glyph.__new__(Glyph)
 * 
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":938
 *     ret.p_this = p_cpp_instance
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_Glyph *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_glyph_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":950
 *     DEFAULT_FONT = wrap_font_instance(<decl.Font*>&decl.GetDefaultFont(), False)
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.Font()
 *         self.delete_this = True
 */

static int __pyx_pf_2sf_4Font___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_4Font___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "sf.pyx":951
 * 
 *     def __cinit__(self):
 *         self.p_this = new decl.Font()             # <<<<<<<<<<<<<<
 *         self.delete_this = True
 * 
 */
  ((struct __pyx_obj_2sf_Font *)__pyx_v_self)->p_this = new sf::Font();

  /* "sf.pyx":952
 *     def __cinit__(self):
 *         self.p_this = new decl.Font()
 *         self.delete_this = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_Font *)__pyx_v_self)->delete_this = 1;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":954
 *         self.delete_this = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.delete_this:
 *             del self.p_this
 */

static void __pyx_pf_2sf_4Font_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_4Font_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":955
 * 
 *     def __dealloc__(self):
 *         if self.delete_this:             # <<<<<<<<<<<<<<
 *             del self.p_this
 * 
 */
  if (((struct __pyx_obj_2sf_Font *)__pyx_v_self)->delete_this) {

    /* "sf.pyx":956
 *     def __dealloc__(self):
 *         if self.delete_this:
 *             del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
    delete ((struct __pyx_obj_2sf_Font *)__pyx_v_self)->p_this;
    goto __pyx_L5;
  }
  __pyx_L5:;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":959
 * 
 *     @classmethod
 *     def load_from_file(cls, char* filename):             # <<<<<<<<<<<<<<
 *         cdef decl.Font *p = new decl.Font()
 * 
 */

static PyObject *__pyx_pf_2sf_4Font_2load_from_file(PyObject *__pyx_v_cls, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_2sf_4Font_2load_from_file(PyObject *__pyx_v_cls, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  sf::Font *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("load_from_file");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 959; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Font.load_from_file");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":960
 *     @classmethod
 *     def load_from_file(cls, char* filename):
 *         cdef decl.Font *p = new decl.Font()             # <<<<<<<<<<<<<<
 * 
 *         if p.LoadFromFile(filename):
 */
  __pyx_v_p = new sf::Font();

  /* "sf.pyx":962
 *         cdef decl.Font *p = new decl.Font()
 * 
 *         if p.LoadFromFile(filename):             # <<<<<<<<<<<<<<
 *             return wrap_font_instance(p, True)
 * 
 */
  __pyx_t_1 = __pyx_v_p->LoadFromFile(__pyx_v_filename);
  if (__pyx_t_1) {

    /* "sf.pyx":963
 * 
 *         if p.LoadFromFile(filename):
 *             return wrap_font_instance(p, True)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Couldn't load font from file " + filename)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_font_instance(__pyx_v_p, 1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "sf.pyx":965
 *             return wrap_font_instance(p, True)
 * 
 *         raise PySFMLException("Couldn't load font from file " + filename)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyBytes_FromString(__pyx_v_filename); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_24), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_Raise(__pyx_t_4, 0, 0);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.Font.load_from_file");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":968
 * 
 *     @classmethod
 *     def load_from_memory(cls, char* data):             # <<<<<<<<<<<<<<
 *         cdef decl.Font *p = new decl.Font()
 * 
 */

static PyObject *__pyx_pf_2sf_4Font_3load_from_memory(PyObject *__pyx_v_cls, PyObject *__pyx_arg_data); /*proto*/
static PyObject *__pyx_pf_2sf_4Font_3load_from_memory(PyObject *__pyx_v_cls, PyObject *__pyx_arg_data) {
  char *__pyx_v_data;
  sf::Font *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  size_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("load_from_memory");
  assert(__pyx_arg_data); {
    __pyx_v_data = PyBytes_AsString(__pyx_arg_data); if (unlikely((!__pyx_v_data) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Font.load_from_memory");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":969
 *     @classmethod
 *     def load_from_memory(cls, char* data):
 *         cdef decl.Font *p = new decl.Font()             # <<<<<<<<<<<<<<
 * 
 *         if p.LoadFromMemory(data, len(data)):
 */
  __pyx_v_p = new sf::Font();

  /* "sf.pyx":971
 *         cdef decl.Font *p = new decl.Font()
 * 
 *         if p.LoadFromMemory(data, len(data)):             # <<<<<<<<<<<<<<
 *             return wrap_font_instance(p, True)
 * 
 */
  __pyx_t_1 = strlen(__pyx_v_data); 
  __pyx_t_2 = __pyx_v_p->LoadFromMemory(__pyx_v_data, __pyx_t_1);
  if (__pyx_t_2) {

    /* "sf.pyx":972
 * 
 *         if p.LoadFromMemory(data, len(data)):
 *             return wrap_font_instance(p, True)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Couldn't load font from memory")
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = ((PyObject *)__pyx_f_2sf_wrap_font_instance(__pyx_v_p, 1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "sf.pyx":974
 *             return wrap_font_instance(p, True)
 * 
 *         raise PySFMLException("Couldn't load font from memory")             # <<<<<<<<<<<<<<
 * 
 *     def get_glyph(self, unsigned int code_point, unsigned int character_size,
 */
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 974; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_26), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 974; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_Raise(__pyx_t_4, 0, 0);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 974; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.Font.load_from_memory");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":976
 *         raise PySFMLException("Couldn't load font from memory")
 * 
 *     def get_glyph(self, unsigned int code_point, unsigned int character_size,             # <<<<<<<<<<<<<<
 *                   bint bold):
 *         cdef decl.Glyph *p = new decl.Glyph()
 */

static PyObject *__pyx_pf_2sf_4Font_4get_glyph(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_4Font_4get_glyph(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_code_point;
  unsigned int __pyx_v_character_size;
  int __pyx_v_bold;
  sf::Glyph *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__code_point,&__pyx_n_s__character_size,&__pyx_n_s__bold,0};
  __Pyx_RefNannySetupContext("get_glyph");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__code_point);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__character_size);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("get_glyph", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bold);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("get_glyph", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "get_glyph") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_code_point = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_code_point == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_character_size = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_character_size == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_bold = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_bold == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 977; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_code_point = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_code_point == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_character_size = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_character_size == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_bold = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_bold == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 977; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_glyph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Font.get_glyph");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":978
 *     def get_glyph(self, unsigned int code_point, unsigned int character_size,
 *                   bint bold):
 *         cdef decl.Glyph *p = new decl.Glyph()             # <<<<<<<<<<<<<<
 * 
 *         p[0] = self.p_this.GetGlyph(code_point, character_size, bold)
 */
  __pyx_v_p = new sf::Glyph();

  /* "sf.pyx":980
 *         cdef decl.Glyph *p = new decl.Glyph()
 * 
 *         p[0] = self.p_this.GetGlyph(code_point, character_size, bold)             # <<<<<<<<<<<<<<
 * 
 *         return wrap_glyph_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_Font *)__pyx_v_self)->p_this->GetGlyph(__pyx_v_code_point, __pyx_v_character_size, __pyx_v_bold);

  /* "sf.pyx":982
 *         p[0] = self.p_this.GetGlyph(code_point, character_size, bold)
 * 
 *         return wrap_glyph_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     def get_image(self, unsigned int character_size):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_glyph_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Font.get_glyph");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":984
 *         return wrap_glyph_instance(p)
 * 
 *     def get_image(self, unsigned int character_size):             # <<<<<<<<<<<<<<
 *         cdef decl.Image *p = <decl.Image*>&self.p_this.GetImage(character_size)
 * 
 */

static PyObject *__pyx_pf_2sf_4Font_5get_image(PyObject *__pyx_v_self, PyObject *__pyx_arg_character_size); /*proto*/
static PyObject *__pyx_pf_2sf_4Font_5get_image(PyObject *__pyx_v_self, PyObject *__pyx_arg_character_size) {
  unsigned int __pyx_v_character_size;
  sf::Image *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_image");
  assert(__pyx_arg_character_size); {
    __pyx_v_character_size = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_character_size); if (unlikely((__pyx_v_character_size == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 984; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Font.get_image");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":985
 * 
 *     def get_image(self, unsigned int character_size):
 *         cdef decl.Image *p = <decl.Image*>&self.p_this.GetImage(character_size)             # <<<<<<<<<<<<<<
 * 
 *         return wrap_image_instance(p, False)
 */
  __pyx_v_p = ((sf::Image *)(&((struct __pyx_obj_2sf_Font *)__pyx_v_self)->p_this->GetImage(__pyx_v_character_size)));

  /* "sf.pyx":987
 *         cdef decl.Image *p = <decl.Image*>&self.p_this.GetImage(character_size)
 * 
 *         return wrap_image_instance(p, False)             # <<<<<<<<<<<<<<
 * 
 *     def get_kerning(self, unsigned int first, unsigned int second,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_image_instance(__pyx_v_p, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Font.get_image");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":989
 *         return wrap_image_instance(p, False)
 * 
 *     def get_kerning(self, unsigned int first, unsigned int second,             # <<<<<<<<<<<<<<
 *                     unsigned int character_size):
 *         return self.p_this.GetKerning(first, second, character_size)
 */

static PyObject *__pyx_pf_2sf_4Font_6get_kerning(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_4Font_6get_kerning(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_first;
  unsigned int __pyx_v_second;
  unsigned int __pyx_v_character_size;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__first,&__pyx_n_s__second,&__pyx_n_s__character_size,0};
  __Pyx_RefNannySetupContext("get_kerning");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__first);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__second);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("get_kerning", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__character_size);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("get_kerning", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "get_kerning") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_first = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_first == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_second = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_second == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_character_size = __Pyx_PyInt_AsUnsignedInt(values[2]); if (unlikely((__pyx_v_character_size == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_first = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_first == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_second = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_second == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_character_size = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_character_size == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_kerning", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Font.get_kerning");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":991
 *     def get_kerning(self, unsigned int first, unsigned int second,
 *                     unsigned int character_size):
 *         return self.p_this.GetKerning(first, second, character_size)             # <<<<<<<<<<<<<<
 * 
 *     def get_line_spacing(self, unsigned int character_size):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_Font *)__pyx_v_self)->p_this->GetKerning(__pyx_v_first, __pyx_v_second, __pyx_v_character_size)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Font.get_kerning");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":993
 *         return self.p_this.GetKerning(first, second, character_size)
 * 
 *     def get_line_spacing(self, unsigned int character_size):             # <<<<<<<<<<<<<<
 *         return self.p_this.GetLineSpacing(character_size)
 * 
 */

static PyObject *__pyx_pf_2sf_4Font_7get_line_spacing(PyObject *__pyx_v_self, PyObject *__pyx_arg_character_size); /*proto*/
static PyObject *__pyx_pf_2sf_4Font_7get_line_spacing(PyObject *__pyx_v_self, PyObject *__pyx_arg_character_size) {
  unsigned int __pyx_v_character_size;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_line_spacing");
  assert(__pyx_arg_character_size); {
    __pyx_v_character_size = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_character_size); if (unlikely((__pyx_v_character_size == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 993; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Font.get_line_spacing");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":994
 * 
 *     def get_line_spacing(self, unsigned int character_size):
 *         return self.p_this.GetLineSpacing(character_size)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_2sf_Font *)__pyx_v_self)->p_this->GetLineSpacing(__pyx_v_character_size)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Font.get_line_spacing");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":997
 * 
 * 
 * cdef Font wrap_font_instance(decl.Font *p_cpp_instance, bint delete_this):             # <<<<<<<<<<<<<<
 *     cdef Font ret = Font.__new__(Font)
 * 
 */

static  struct __pyx_obj_2sf_Font *__pyx_f_2sf_wrap_font_instance(sf::Font *__pyx_v_p_cpp_instance, int __pyx_v_delete_this) {
  struct __pyx_obj_2sf_Font *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_Font *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_font_instance");

  /* "sf.pyx":998
 * 
 * cdef Font wrap_font_instance(decl.Font *p_cpp_instance, bint delete_this):
 *     cdef Font ret = Font.__new__(Font)             # <<<<<<<<<<<<<<
 * 
 *     ret.p_this = p_cpp_instance
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_Font)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Font)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_Font *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":1000
 *     cdef Font ret = Font.__new__(Font)
 * 
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 *     ret.delete_this = delete_this
 * 
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":1001
 * 
 *     ret.p_this = p_cpp_instance
 *     ret.delete_this = delete_this             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->delete_this = __pyx_v_delete_this;

  /* "sf.pyx":1003
 *     ret.delete_this = delete_this
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_Font *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_font_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1013
 *     cdef bint delete_this
 * 
 *     def __init__(self, int width, int height, Color color=None):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.Image()
 *         self.delete_this = True
 */

static int __pyx_pf_2sf_5Image___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_5Image___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_width;
  int __pyx_v_height;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  int __pyx_r;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,&__pyx_n_s__color,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[2]);
  } else {
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 2));
      case  2:
      __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1014
 * 
 *     def __init__(self, int width, int height, Color color=None):
 *         self.p_this = new decl.Image()             # <<<<<<<<<<<<<<
 *         self.delete_this = True
 * 
 */
  ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this = new sf::Image();

  /* "sf.pyx":1015
 *     def __init__(self, int width, int height, Color color=None):
 *         self.p_this = new decl.Image()
 *         self.delete_this = True             # <<<<<<<<<<<<<<
 * 
 *         if color is None:
 */
  ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->delete_this = 1;

  /* "sf.pyx":1017
 *         self.delete_this = True
 * 
 *         if color is None:             # <<<<<<<<<<<<<<
 *             self.p_this.Create(width, height)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_color) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1018
 * 
 *         if color is None:
 *             self.p_this.Create(width, height)             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this.Create(width, height, color.p_this[0])
 */
    ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->Create(__pyx_v_width, __pyx_v_height);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1020
 *             self.p_this.Create(width, height)
 *         else:
 *             self.p_this.Create(width, height, color.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->Create(__pyx_v_width, __pyx_v_height, (__pyx_v_color->p_this[0]));
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Image.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1022
 *             self.p_this.Create(width, height, color.p_this[0])
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.delete_this:
 *             del self.p_this
 */

static void __pyx_pf_2sf_5Image_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_5Image_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":1023
 * 
 *     def __dealloc__(self):
 *         if self.delete_this:             # <<<<<<<<<<<<<<
 *             del self.p_this
 * 
 */
  if (((struct __pyx_obj_2sf_Image *)__pyx_v_self)->delete_this) {

    /* "sf.pyx":1024
 *     def __dealloc__(self):
 *         if self.delete_this:
 *             del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, tuple coords):
 */
    delete ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this;
    goto __pyx_L5;
  }
  __pyx_L5:;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":1026
 *             del self.p_this
 * 
 *     def __getitem__(self, tuple coords):             # <<<<<<<<<<<<<<
 *         x, y = coords
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_2__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_coords); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_2__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_coords) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__getitem__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_coords), (&PyTuple_Type), 1, "coords", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1027
 * 
 *     def __getitem__(self, tuple coords):
 *         x, y = coords             # <<<<<<<<<<<<<<
 * 
 *         return self.get_pixel(x, y)
 */
  if (likely(((PyObject *)__pyx_v_coords) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_coords)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_coords);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_coords), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1029
 *         x, y = coords
 * 
 *         return self.get_pixel(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, tuple coords, Color color):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_pixel); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Image.__getitem__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1031
 *         return self.get_pixel(x, y)
 * 
 *     def __setitem__(self, tuple coords, Color color):             # <<<<<<<<<<<<<<
 *         x, y = coords
 * 
 */

static int __pyx_pf_2sf_5Image_3__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_coords, PyObject *__pyx_v_color); /*proto*/
static int __pyx_pf_2sf_5Image_3__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_coords, PyObject *__pyx_v_color) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__setitem__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_coords), (&PyTuple_Type), 1, "coords", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1032
 * 
 *     def __setitem__(self, tuple coords, Color color):
 *         x, y = coords             # <<<<<<<<<<<<<<
 * 
 *         self.set_pixel(x, y, color)
 */
  if (likely(((PyObject *)__pyx_v_coords) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_coords)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_coords);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_coords), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1034
 *         x, y = coords
 * 
 *         self.set_pixel(x, y, color)             # <<<<<<<<<<<<<<
 * 
 *     property height:
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__set_pixel); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __Pyx_INCREF(__pyx_v_color);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_color);
  __Pyx_GIVEREF(__pyx_v_color);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Image.__setitem__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1037
 * 
 *     property height:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetHeight()
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_6height___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_6height___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1038
 *     property height:
 *         def __get__(self):
 *             return self.p_this.GetHeight()             # <<<<<<<<<<<<<<
 * 
 *     property smooth:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->GetHeight()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Image.height.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1041
 * 
 *     property smooth:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.IsSmooth()
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_6smooth___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_6smooth___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1042
 *     property smooth:
 *         def __get__(self):
 *             return self.p_this.IsSmooth()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->IsSmooth()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Image.smooth.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1044
 *             return self.p_this.IsSmooth()
 * 
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetSmooth(value)
 * 
 */

static int __pyx_pf_2sf_5Image_6smooth_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Image_6smooth_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1044; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.smooth.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1045
 * 
 *         def __set__(self, bint value):
 *             self.p_this.SetSmooth(value)             # <<<<<<<<<<<<<<
 * 
 *     property width:
 */
  ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->SetSmooth(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1048
 * 
 *     property width:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetWidth()
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_5width___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_5width___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1049
 *     property width:
 *         def __get__(self):
 *             return self.p_this.GetWidth()             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->GetWidth()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Image.width.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1052
 * 
 *     @classmethod
 *     def load_from_file(cls, char *filename):             # <<<<<<<<<<<<<<
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_4load_from_file(PyObject *__pyx_v_cls, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_4load_from_file(PyObject *__pyx_v_cls, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  sf::Image *__pyx_v_p_cpp_instance;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("load_from_file");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.load_from_file");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1053
 *     @classmethod
 *     def load_from_file(cls, char *filename):
 *         cdef decl.Image *p_cpp_instance = new decl.Image()             # <<<<<<<<<<<<<<
 * 
 *         if p_cpp_instance.LoadFromFile(filename):
 */
  __pyx_v_p_cpp_instance = new sf::Image();

  /* "sf.pyx":1055
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 *         if p_cpp_instance.LoadFromFile(filename):             # <<<<<<<<<<<<<<
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 */
  __pyx_t_1 = __pyx_v_p_cpp_instance->LoadFromFile(__pyx_v_filename);
  if (__pyx_t_1) {

    /* "sf.pyx":1056
 * 
 *         if p_cpp_instance.LoadFromFile(filename):
 *             return wrap_image_instance(p_cpp_instance, True)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Couldn't load file {0}".format(filename))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_image_instance(__pyx_v_p_cpp_instance, 1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "sf.pyx":1058
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 *         raise PySFMLException("Couldn't load file {0}".format(filename))             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_27), __pyx_n_s__format); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyBytes_FromString(__pyx_v_filename); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_5));
  PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_t_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_4));
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_5));
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
  __Pyx_Raise(__pyx_t_4, 0, 0);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("sf.Image.load_from_file");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1061
 * 
 *     @classmethod
 *     def load_from_screen(cls, RenderWindow window, IntRect source_rect=None):             # <<<<<<<<<<<<<<
 *         """Return a new image with the screen content."""
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_5load_from_screen(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_2sf_5Image_5load_from_screen[] = "Return a new image with the screen content.";
static PyObject *__pyx_pf_2sf_5Image_5load_from_screen(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_RenderWindow *__pyx_v_window = 0;
  struct __pyx_obj_2sf_IntRect *__pyx_v_source_rect = 0;
  sf::Image *__pyx_v_p_cpp_instance;
  int __pyx_v_result;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__window,&__pyx_n_s__source_rect,0};
  __Pyx_RefNannySetupContext("load_from_screen");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((struct __pyx_obj_2sf_IntRect *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__window);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__source_rect);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "load_from_screen") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_window = ((struct __pyx_obj_2sf_RenderWindow *)values[0]);
    __pyx_v_source_rect = ((struct __pyx_obj_2sf_IntRect *)values[1]);
  } else {
    __pyx_v_source_rect = ((struct __pyx_obj_2sf_IntRect *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_source_rect = ((struct __pyx_obj_2sf_IntRect *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_window = ((struct __pyx_obj_2sf_RenderWindow *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_from_screen", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.load_from_screen");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_window), __pyx_ptype_2sf_RenderWindow, 1, "window", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_source_rect), __pyx_ptype_2sf_IntRect, 1, "source_rect", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1064
 *         """Return a new image with the screen content."""
 * 
 *         cdef decl.Image *p_cpp_instance = new decl.Image()             # <<<<<<<<<<<<<<
 *         cdef bint result = False
 * 
 */
  __pyx_v_p_cpp_instance = new sf::Image();

  /* "sf.pyx":1065
 * 
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 *         cdef bint result = False             # <<<<<<<<<<<<<<
 * 
 *         if source_rect is None:
 */
  __pyx_v_result = 0;

  /* "sf.pyx":1067
 *         cdef bint result = False
 * 
 *         if source_rect is None:             # <<<<<<<<<<<<<<
 *             result = p_cpp_instance.CopyScreen(window.p_this[0])
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_source_rect) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1068
 * 
 *         if source_rect is None:
 *             result = p_cpp_instance.CopyScreen(window.p_this[0])             # <<<<<<<<<<<<<<
 *         else:
 *             result = p_cpp_instance.CopyScreen(window.p_this[0],
 */
    __pyx_v_result = __pyx_v_p_cpp_instance->CopyScreen((__pyx_v_window->p_this[0]));
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1071
 *         else:
 *             result = p_cpp_instance.CopyScreen(window.p_this[0],
 *                                                source_rect.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *         if result:
 */
    __pyx_v_result = __pyx_v_p_cpp_instance->CopyScreen((__pyx_v_window->p_this[0]), (__pyx_v_source_rect->p_this[0]));
  }
  __pyx_L6:;

  /* "sf.pyx":1073
 *                                                source_rect.p_this[0])
 * 
 *         if result:             # <<<<<<<<<<<<<<
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 */
  if (__pyx_v_result) {

    /* "sf.pyx":1074
 * 
 *         if result:
 *             return wrap_image_instance(p_cpp_instance, True)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Couldn't copy screen")
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_image_instance(__pyx_v_p_cpp_instance, 1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "sf.pyx":1076
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 *         raise PySFMLException("Couldn't copy screen")             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_29), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_3, 0, 0);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Image.load_from_screen");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1079
 * 
 *     @classmethod
 *     def load_from_memory(cls, char* mem):             # <<<<<<<<<<<<<<
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_6load_from_memory(PyObject *__pyx_v_cls, PyObject *__pyx_arg_mem); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_6load_from_memory(PyObject *__pyx_v_cls, PyObject *__pyx_arg_mem) {
  char *__pyx_v_mem;
  sf::Image *__pyx_v_p_cpp_instance;
  PyObject *__pyx_r = NULL;
  size_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("load_from_memory");
  assert(__pyx_arg_mem); {
    __pyx_v_mem = PyBytes_AsString(__pyx_arg_mem); if (unlikely((!__pyx_v_mem) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.load_from_memory");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1080
 *     @classmethod
 *     def load_from_memory(cls, char* mem):
 *         cdef decl.Image *p_cpp_instance = new decl.Image()             # <<<<<<<<<<<<<<
 * 
 *         if p_cpp_instance.LoadFromMemory(mem, len(mem)):
 */
  __pyx_v_p_cpp_instance = new sf::Image();

  /* "sf.pyx":1082
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 *         if p_cpp_instance.LoadFromMemory(mem, len(mem)):             # <<<<<<<<<<<<<<
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 */
  __pyx_t_1 = strlen(__pyx_v_mem); 
  __pyx_t_2 = __pyx_v_p_cpp_instance->LoadFromMemory(__pyx_v_mem, __pyx_t_1);
  if (__pyx_t_2) {

    /* "sf.pyx":1083
 * 
 *         if p_cpp_instance.LoadFromMemory(mem, len(mem)):
 *             return wrap_image_instance(p_cpp_instance, True)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Couldn't create image from memory")
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = ((PyObject *)__pyx_f_2sf_wrap_image_instance(__pyx_v_p_cpp_instance, 1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1083; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "sf.pyx":1085
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 *         raise PySFMLException("Couldn't create image from memory")             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_31), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_Raise(__pyx_t_4, 0, 0);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.Image.load_from_memory");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1088
 * 
 *     @classmethod
 *     def load_from_pixels(cls, int width, int height, char *pixels):             # <<<<<<<<<<<<<<
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_7load_from_pixels(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_7load_from_pixels(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_width;
  int __pyx_v_height;
  char *__pyx_v_pixels;
  sf::Image *__pyx_v_p_cpp_instance;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,&__pyx_n_s__pixels,0};
  __Pyx_RefNannySetupContext("load_from_pixels");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("load_from_pixels", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__pixels);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("load_from_pixels", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "load_from_pixels") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_pixels = PyBytes_AsString(values[2]); if (unlikely((!__pyx_v_pixels) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_width = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_width == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_pixels = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((!__pyx_v_pixels) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_from_pixels", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.load_from_pixels");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1089
 *     @classmethod
 *     def load_from_pixels(cls, int width, int height, char *pixels):
 *         cdef decl.Image *p_cpp_instance = new decl.Image()             # <<<<<<<<<<<<<<
 * 
 *         if p_cpp_instance.LoadFromPixels(width, height, <unsigned char*>pixels):
 */
  __pyx_v_p_cpp_instance = new sf::Image();

  /* "sf.pyx":1091
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 *         if p_cpp_instance.LoadFromPixels(width, height, <unsigned char*>pixels):             # <<<<<<<<<<<<<<
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 */
  __pyx_t_1 = __pyx_v_p_cpp_instance->LoadFromPixels(__pyx_v_width, __pyx_v_height, ((unsigned char *)__pyx_v_pixels));
  if (__pyx_t_1) {

    /* "sf.pyx":1092
 * 
 *         if p_cpp_instance.LoadFromPixels(width, height, <unsigned char*>pixels):
 *             return wrap_image_instance(p_cpp_instance, True)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Couldn't create image from pixels")
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_image_instance(__pyx_v_p_cpp_instance, 1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "sf.pyx":1094
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 *         raise PySFMLException("Couldn't create image from pixels")             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_33), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_3, 0, 0);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Image.load_from_pixels");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1097
 * 
 *     @classmethod
 *     def get_maximum_size(cls):             # <<<<<<<<<<<<<<
 *         return decl.GetMaximumSize()
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_8get_maximum_size(PyObject *__pyx_v_cls, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_8get_maximum_size(PyObject *__pyx_v_cls, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_maximum_size");

  /* "sf.pyx":1098
 *     @classmethod
 *     def get_maximum_size(cls):
 *         return decl.GetMaximumSize()             # <<<<<<<<<<<<<<
 * 
 *     def bind(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(sf::Image::GetMaximumSize()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Image.get_maximum_size");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1100
 *         return decl.GetMaximumSize()
 * 
 *     def bind(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Bind()
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_9bind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_9bind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("bind");

  /* "sf.pyx":1101
 * 
 *     def bind(self):
 *         self.p_this.Bind()             # <<<<<<<<<<<<<<
 * 
 *     def copy(self, Image source, int dest_x, int dest_y,
 */
  ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->Bind();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1103
 *         self.p_this.Bind()
 * 
 *     def copy(self, Image source, int dest_x, int dest_y,             # <<<<<<<<<<<<<<
 *              source_rect=None, bint apply_alpha=None):
 *         cdef decl.IntRect cpp_source_rect
 */

static PyObject *__pyx_pf_2sf_5Image_10copy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_10copy(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_Image *__pyx_v_source = 0;
  int __pyx_v_dest_x;
  int __pyx_v_dest_y;
  PyObject *__pyx_v_source_rect = 0;
  int __pyx_v_apply_alpha;
  sf::IntRect __pyx_v_cpp_source_rect;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__source,&__pyx_n_s__dest_x,&__pyx_n_s__dest_y,&__pyx_n_s__source_rect,&__pyx_n_s__apply_alpha,0};
  __Pyx_RefNannySetupContext("copy");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};

    /* "sf.pyx":1104
 * 
 *     def copy(self, Image source, int dest_x, int dest_y,
 *              source_rect=None, bint apply_alpha=None):             # <<<<<<<<<<<<<<
 *         cdef decl.IntRect cpp_source_rect
 * 
 */
    values[3] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__source);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__dest_x);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("copy", 0, 3, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__dest_y);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("copy", 0, 3, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__source_rect);
        if (value) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__apply_alpha);
        if (value) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "copy") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_source = ((struct __pyx_obj_2sf_Image *)values[0]);
    __pyx_v_dest_x = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_dest_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_dest_y = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_dest_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_source_rect = values[3];
    if (values[4]) {
      __pyx_v_apply_alpha = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_apply_alpha == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_apply_alpha = __pyx_k_34;
    }
  } else {
    __pyx_v_source_rect = ((PyObject *)Py_None);
    __pyx_v_apply_alpha = __pyx_k_34;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5:
      __pyx_v_apply_alpha = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_apply_alpha == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4:
      __pyx_v_source_rect = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3:
      __pyx_v_dest_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_dest_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_dest_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_dest_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_source = ((struct __pyx_obj_2sf_Image *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("copy", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.copy");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_source), __pyx_ptype_2sf_Image, 1, "source", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1107
 *         cdef decl.IntRect cpp_source_rect
 * 
 *         if source_rect is None:             # <<<<<<<<<<<<<<
 *             self.p_this.Copy(source.p_this[0], dest_x, dest_y)
 *         else:
 */
  __pyx_t_1 = (__pyx_v_source_rect == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1108
 * 
 *         if source_rect is None:
 *             self.p_this.Copy(source.p_this[0], dest_x, dest_y)             # <<<<<<<<<<<<<<
 *         else:
 *             if isinstance(source_rect, tuple):
 */
    ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->Copy((__pyx_v_source->p_this[0]), __pyx_v_dest_x, __pyx_v_dest_y);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1110
 *             self.p_this.Copy(source.p_this[0], dest_x, dest_y)
 *         else:
 *             if isinstance(source_rect, tuple):             # <<<<<<<<<<<<<<
 *                 cpp_source_rect = decl.IntRect(source_rect[0],
 *                                                source_rect[1],
 */
    __pyx_t_1 = PyTuple_Check(__pyx_v_source_rect); 
    if (__pyx_t_1) {

      /* "sf.pyx":1111
 *         else:
 *             if isinstance(source_rect, tuple):
 *                 cpp_source_rect = decl.IntRect(source_rect[0],             # <<<<<<<<<<<<<<
 *                                                source_rect[1],
 *                                                source_rect[2],
 */
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_source_rect, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "sf.pyx":1112
 *             if isinstance(source_rect, tuple):
 *                 cpp_source_rect = decl.IntRect(source_rect[0],
 *                                                source_rect[1],             # <<<<<<<<<<<<<<
 *                                                source_rect[2],
 *                                                source_rect[3])
 */
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_source_rect, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "sf.pyx":1113
 *                 cpp_source_rect = decl.IntRect(source_rect[0],
 *                                                source_rect[1],
 *                                                source_rect[2],             # <<<<<<<<<<<<<<
 *                                                source_rect[3])
 *             elif isinstance(source_rect, IntRect):
 */
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_source_rect, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "sf.pyx":1114
 *                                                source_rect[1],
 *                                                source_rect[2],
 *                                                source_rect[3])             # <<<<<<<<<<<<<<
 *             elif isinstance(source_rect, IntRect):
 *                 cpp_source_rect = (<IntRect>source_rect).p_this[0]
 */
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_source_rect, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_v_cpp_source_rect = sf::IntRect(__pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6);
      goto __pyx_L7;
    }

    /* "sf.pyx":1115
 *                                                source_rect[2],
 *                                                source_rect[3])
 *             elif isinstance(source_rect, IntRect):             # <<<<<<<<<<<<<<
 *                 cpp_source_rect = (<IntRect>source_rect).p_this[0]
 *             else:
 */
    __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_source_rect, ((PyObject*)__pyx_ptype_2sf_IntRect)); 
    if (__pyx_t_1) {

      /* "sf.pyx":1116
 *                                                source_rect[3])
 *             elif isinstance(source_rect, IntRect):
 *                 cpp_source_rect = (<IntRect>source_rect).p_this[0]             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError('source_rect must be tuple or IntRect')
 */
      __pyx_v_cpp_source_rect = (((struct __pyx_obj_2sf_IntRect *)__pyx_v_source_rect)->p_this[0]);
      goto __pyx_L7;
    }
    /*else*/ {

      /* "sf.pyx":1118
 *                 cpp_source_rect = (<IntRect>source_rect).p_this[0]
 *             else:
 *                 raise TypeError('source_rect must be tuple or IntRect')             # <<<<<<<<<<<<<<
 * 
 *             if apply_alpha is None:
 */
      __pyx_t_2 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_k_tuple_36), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_Raise(__pyx_t_2, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L7:;

    /* "sf.pyx":1120
 *                 raise TypeError('source_rect must be tuple or IntRect')
 * 
 *             if apply_alpha is None:             # <<<<<<<<<<<<<<
 *                 self.p_this.Copy(source.p_this[0], dest_x, dest_y,
 *                                  cpp_source_rect)
 */
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_apply_alpha); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = (__pyx_t_2 == Py_None);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "sf.pyx":1122
 *             if apply_alpha is None:
 *                 self.p_this.Copy(source.p_this[0], dest_x, dest_y,
 *                                  cpp_source_rect)             # <<<<<<<<<<<<<<
 *             else:
 *                 self.p_this.Copy(source.p_this[0], dest_x, dest_y,
 */
      ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->Copy((__pyx_v_source->p_this[0]), __pyx_v_dest_x, __pyx_v_dest_y, __pyx_v_cpp_source_rect);
      goto __pyx_L8;
    }
    /*else*/ {

      /* "sf.pyx":1125
 *             else:
 *                 self.p_this.Copy(source.p_this[0], dest_x, dest_y,
 *                                  cpp_source_rect, apply_alpha)             # <<<<<<<<<<<<<<
 * 
 *     def create_mask_from_color(self, Color color, int alpha=0):
 */
      ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->Copy((__pyx_v_source->p_this[0]), __pyx_v_dest_x, __pyx_v_dest_y, __pyx_v_cpp_source_rect, __pyx_v_apply_alpha);
    }
    __pyx_L8:;
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Image.copy");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1127
 *                                  cpp_source_rect, apply_alpha)
 * 
 *     def create_mask_from_color(self, Color color, int alpha=0):             # <<<<<<<<<<<<<<
 *         self.p_this.CreateMaskFromColor(color.p_this[0], alpha)
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_11create_mask_from_color(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_11create_mask_from_color(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  int __pyx_v_alpha;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__color,&__pyx_n_s__alpha,0};
  __Pyx_RefNannySetupContext("create_mask_from_color");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__alpha);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "create_mask_from_color") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[0]);
    if (values[1]) {
      __pyx_v_alpha = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_alpha == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_alpha = ((int)0);
    }
  } else {
    __pyx_v_alpha = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_alpha = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_alpha == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_mask_from_color", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.create_mask_from_color");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1128
 * 
 *     def create_mask_from_color(self, Color color, int alpha=0):
 *         self.p_this.CreateMaskFromColor(color.p_this[0], alpha)             # <<<<<<<<<<<<<<
 * 
 *     def get_pixel(self, int x, int y):
 */
  ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->CreateMaskFromColor((__pyx_v_color->p_this[0]), __pyx_v_alpha);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Image.create_mask_from_color");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1130
 *         self.p_this.CreateMaskFromColor(color.p_this[0], alpha)
 * 
 *     def get_pixel(self, int x, int y):             # <<<<<<<<<<<<<<
 *         cdef decl.Color *p_color = new decl.Color()
 *         cdef decl.Color temp = self.p_this.GetPixel(x, y)
 */

static PyObject *__pyx_pf_2sf_5Image_12get_pixel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_12get_pixel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x;
  int __pyx_v_y;
  sf::Color *__pyx_v_p_color;
  sf::Color __pyx_v_temp;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("get_pixel");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("get_pixel", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "get_pixel") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_pixel", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.get_pixel");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1131
 * 
 *     def get_pixel(self, int x, int y):
 *         cdef decl.Color *p_color = new decl.Color()             # <<<<<<<<<<<<<<
 *         cdef decl.Color temp = self.p_this.GetPixel(x, y)
 * 
 */
  __pyx_v_p_color = new sf::Color();

  /* "sf.pyx":1132
 *     def get_pixel(self, int x, int y):
 *         cdef decl.Color *p_color = new decl.Color()
 *         cdef decl.Color temp = self.p_this.GetPixel(x, y)             # <<<<<<<<<<<<<<
 * 
 *         p_color[0] = temp
 */
  __pyx_v_temp = ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->GetPixel(__pyx_v_x, __pyx_v_y);

  /* "sf.pyx":1134
 *         cdef decl.Color temp = self.p_this.GetPixel(x, y)
 * 
 *         p_color[0] = temp             # <<<<<<<<<<<<<<
 * 
 *         return wrap_color_instance(p_color)
 */
  (__pyx_v_p_color[0]) = __pyx_v_temp;

  /* "sf.pyx":1136
 *         p_color[0] = temp
 * 
 *         return wrap_color_instance(p_color)             # <<<<<<<<<<<<<<
 * 
 *     def get_pixels(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_2sf_wrap_color_instance(__pyx_v_p_color); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Image.get_pixel");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1138
 *         return wrap_color_instance(p_color)
 * 
 *     def get_pixels(self):             # <<<<<<<<<<<<<<
 *         """Return a string containing the pixels of the image in RGBA fomat."""
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_13get_pixels(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_2sf_5Image_13get_pixels[] = "Return a string containing the pixels of the image in RGBA fomat.";
static PyObject *__pyx_pf_2sf_5Image_13get_pixels(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  char *__pyx_v_p;
  int __pyx_v_length;
  PyObject *__pyx_v_ret = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("get_pixels");

  /* "sf.pyx":1141
 *         """Return a string containing the pixels of the image in RGBA fomat."""
 * 
 *         cdef char* p = <char*>self.p_this.GetPixelsPtr()             # <<<<<<<<<<<<<<
 *         cdef int length = self.width * self.height * 4
 *         cdef bytes ret = p[:length]
 */
  __pyx_v_p = ((char *)((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->GetPixelsPtr());

  /* "sf.pyx":1142
 * 
 *         cdef char* p = <char*>self.p_this.GetPixelsPtr()
 *         cdef int length = self.width * self.height * 4             # <<<<<<<<<<<<<<
 *         cdef bytes ret = p[:length]
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__height); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_3, __pyx_int_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_length = __pyx_t_4;

  /* "sf.pyx":1143
 *         cdef char* p = <char*>self.p_this.GetPixelsPtr()
 *         cdef int length = self.width * self.height * 4
 *         cdef bytes ret = p[:length]             # <<<<<<<<<<<<<<
 * 
 *         return ret
 */
  __pyx_t_2 = PyBytes_FromStringAndSize(__pyx_v_p + 0, __pyx_v_length - 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_v_ret = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "sf.pyx":1145
 *         cdef bytes ret = p[:length]
 * 
 *         return ret             # <<<<<<<<<<<<<<
 * 
 *     def get_tex_coords(self, rect):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Image.get_pixels");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1147
 *         return ret
 * 
 *     def get_tex_coords(self, rect):             # <<<<<<<<<<<<<<
 *         cdef decl.IntRect cpp_rect = convert_to_int_rect(rect)
 *         cdef decl.FloatRect res = self.p_this.GetTexCoords(cpp_rect)
 */

static PyObject *__pyx_pf_2sf_5Image_14get_tex_coords(PyObject *__pyx_v_self, PyObject *__pyx_v_rect); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_14get_tex_coords(PyObject *__pyx_v_self, PyObject *__pyx_v_rect) {
  sf::IntRect __pyx_v_cpp_rect;
  sf::FloatRect __pyx_v_res;
  sf::FloatRect *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_tex_coords");

  /* "sf.pyx":1148
 * 
 *     def get_tex_coords(self, rect):
 *         cdef decl.IntRect cpp_rect = convert_to_int_rect(rect)             # <<<<<<<<<<<<<<
 *         cdef decl.FloatRect res = self.p_this.GetTexCoords(cpp_rect)
 *         cdef decl.FloatRect *p
 */
  __pyx_v_cpp_rect = __pyx_f_2sf_convert_to_int_rect(__pyx_v_rect);

  /* "sf.pyx":1149
 *     def get_tex_coords(self, rect):
 *         cdef decl.IntRect cpp_rect = convert_to_int_rect(rect)
 *         cdef decl.FloatRect res = self.p_this.GetTexCoords(cpp_rect)             # <<<<<<<<<<<<<<
 *         cdef decl.FloatRect *p
 * 
 */
  __pyx_v_res = ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->GetTexCoords(__pyx_v_cpp_rect);

  /* "sf.pyx":1152
 *         cdef decl.FloatRect *p
 * 
 *         p[0] = res             # <<<<<<<<<<<<<<
 * 
 *         return wrap_float_rect_instance(p)
 */
  (__pyx_v_p[0]) = __pyx_v_res;

  /* "sf.pyx":1154
 *         p[0] = res
 * 
 *         return wrap_float_rect_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     def save_to_file(self, char* filename):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_float_rect_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Image.get_tex_coords");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1156
 *         return wrap_float_rect_instance(p)
 * 
 *     def save_to_file(self, char* filename):             # <<<<<<<<<<<<<<
 *         self.p_this.SaveToFile(filename)
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_15save_to_file(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_15save_to_file(PyObject *__pyx_v_self, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("save_to_file");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1156; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.save_to_file");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1157
 * 
 *     def save_to_file(self, char* filename):
 *         self.p_this.SaveToFile(filename)             # <<<<<<<<<<<<<<
 * 
 *     def set_pixel(self, int x, int y, Color color):
 */
  ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->SaveToFile(__pyx_v_filename);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1159
 *         self.p_this.SaveToFile(filename)
 * 
 *     def set_pixel(self, int x, int y, Color color):             # <<<<<<<<<<<<<<
 *         self.p_this.SetPixel(x, y, color.p_this[0])
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_16set_pixel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_16set_pixel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x;
  int __pyx_v_y;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__color,0};
  __Pyx_RefNannySetupContext("set_pixel");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_pixel", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_pixel", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_pixel") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[2]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 2));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_pixel", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.set_pixel");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1160
 * 
 *     def set_pixel(self, int x, int y, Color color):
 *         self.p_this.SetPixel(x, y, color.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def update_pixels(self, char *pixels, rect=None):
 */
  ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->SetPixel(__pyx_v_x, __pyx_v_y, (__pyx_v_color->p_this[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Image.set_pixel");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1162
 *         self.p_this.SetPixel(x, y, color.p_this[0])
 * 
 *     def update_pixels(self, char *pixels, rect=None):             # <<<<<<<<<<<<<<
 *         cdef decl.IntRect cpp_rect
 * 
 */

static PyObject *__pyx_pf_2sf_5Image_17update_pixels(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Image_17update_pixels(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_pixels;
  PyObject *__pyx_v_rect = 0;
  sf::IntRect __pyx_v_cpp_rect;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__pixels,&__pyx_n_s__rect,0};
  __Pyx_RefNannySetupContext("update_pixels");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__pixels);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rect);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "update_pixels") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1162; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_pixels = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_pixels) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1162; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rect = values[1];
  } else {
    __pyx_v_rect = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_rect = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_pixels = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_pixels) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1162; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_pixels", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1162; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Image.update_pixels");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1165
 *         cdef decl.IntRect cpp_rect
 * 
 *         if rect is None:             # <<<<<<<<<<<<<<
 *             self.p_this.UpdatePixels(<unsigned char*>pixels)
 *         else:
 */
  __pyx_t_1 = (__pyx_v_rect == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1166
 * 
 *         if rect is None:
 *             self.p_this.UpdatePixels(<unsigned char*>pixels)             # <<<<<<<<<<<<<<
 *         else:
 *             cpp_rect = convert_to_int_rect(rect)
 */
    ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->UpdatePixels(((unsigned char *)__pyx_v_pixels));
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1168
 *             self.p_this.UpdatePixels(<unsigned char*>pixels)
 *         else:
 *             cpp_rect = convert_to_int_rect(rect)             # <<<<<<<<<<<<<<
 *             self.p_this.UpdatePixels(<unsigned char*>pixels, cpp_rect)
 * 
 */
    __pyx_v_cpp_rect = __pyx_f_2sf_convert_to_int_rect(__pyx_v_rect);

    /* "sf.pyx":1169
 *         else:
 *             cpp_rect = convert_to_int_rect(rect)
 *             self.p_this.UpdatePixels(<unsigned char*>pixels, cpp_rect)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((struct __pyx_obj_2sf_Image *)__pyx_v_self)->p_this->UpdatePixels(((unsigned char *)__pyx_v_pixels), __pyx_v_cpp_rect);
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1172
 * 
 * 
 * cdef Image wrap_image_instance(decl.Image *p_cpp_instance, bint delete_this):             # <<<<<<<<<<<<<<
 *     cdef Image ret = Image.__new__(Image)
 *     ret.p_this = p_cpp_instance
 */

static  struct __pyx_obj_2sf_Image *__pyx_f_2sf_wrap_image_instance(sf::Image *__pyx_v_p_cpp_instance, int __pyx_v_delete_this) {
  struct __pyx_obj_2sf_Image *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_Image *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_image_instance");

  /* "sf.pyx":1173
 * 
 * cdef Image wrap_image_instance(decl.Image *p_cpp_instance, bint delete_this):
 *     cdef Image ret = Image.__new__(Image)             # <<<<<<<<<<<<<<
 *     ret.p_this = p_cpp_instance
 *     ret.delete_this = delete_this
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_Image)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Image)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_Image *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":1174
 * cdef Image wrap_image_instance(decl.Image *p_cpp_instance, bint delete_this):
 *     cdef Image ret = Image.__new__(Image)
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 *     ret.delete_this = delete_this
 * 
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":1175
 *     cdef Image ret = Image.__new__(Image)
 *     ret.p_this = p_cpp_instance
 *     ret.delete_this = delete_this             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->delete_this = __pyx_v_delete_this;

  /* "sf.pyx":1177
 *     ret.delete_this = delete_this
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_Image *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_image_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1186
 *     cdef decl.Drawable *p_this
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

static int __pyx_pf_2sf_8Drawable___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_8Drawable___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;

  __pyx_r = 0;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1189
 *         pass
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         if self.__class__ == Drawable:
 *             raise NotImplementedError('Drawable is abstact')
 */

static int __pyx_pf_2sf_8Drawable_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_8Drawable_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;

  /* "sf.pyx":1190
 * 
 *     def __init__(self, *args, **kwargs):
 *         if self.__class__ == Drawable:             # <<<<<<<<<<<<<<
 *             raise NotImplementedError('Drawable is abstact')
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s____class__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, ((PyObject *)((PyObject*)__pyx_ptype_2sf_Drawable)), Py_EQ); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "sf.pyx":1191
 *     def __init__(self, *args, **kwargs):
 *         if self.__class__ == Drawable:
 *             raise NotImplementedError('Drawable is abstact')             # <<<<<<<<<<<<<<
 * 
 *     property blend_mode:
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_38), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L5;
  }
  __pyx_L5:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Drawable.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1194
 * 
 *     property blend_mode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return <int>self.p_this.GetBlendMode()
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_10blend_mode___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_10blend_mode___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1195
 *     property blend_mode:
 *         def __get__(self):
 *             return <int>self.p_this.GetBlendMode()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((int)((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->GetBlendMode())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Drawable.blend_mode.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1197
 *             return <int>self.p_this.GetBlendMode()
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetBlendMode(<declblendmode.Mode>value)
 * 
 */

static int __pyx_pf_2sf_8Drawable_10blend_mode_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_8Drawable_10blend_mode_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1197; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.blend_mode.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1198
 * 
 *         def __set__(self, int value):
 *             self.p_this.SetBlendMode(<declblendmode.Mode>value)             # <<<<<<<<<<<<<<
 * 
 *     property color:
 */
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->SetBlendMode(((sf::Blend::Mode)__pyx_v_value));

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1201
 * 
 *     property color:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Color *p = new decl.Color()
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_5color___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_5color___get__(PyObject *__pyx_v_self) {
  sf::Color *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1202
 *     property color:
 *         def __get__(self):
 *             cdef decl.Color *p = new decl.Color()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = self.p_this.GetColor()
 */
  __pyx_v_p = new sf::Color();

  /* "sf.pyx":1204
 *             cdef decl.Color *p = new decl.Color()
 * 
 *             p[0] = self.p_this.GetColor()             # <<<<<<<<<<<<<<
 * 
 *             return wrap_color_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->GetColor();

  /* "sf.pyx":1206
 *             p[0] = self.p_this.GetColor()
 * 
 *             return wrap_color_instance(p)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, Color value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_2sf_wrap_color_instance(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Drawable.color.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1208
 *             return wrap_color_instance(p)
 * 
 *         def __set__(self, Color value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetColor(value.p_this[0])
 * 
 */

static int __pyx_pf_2sf_8Drawable_5color_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_8Drawable_5color_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_2sf_Color, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1209
 * 
 *         def __set__(self, Color value):
 *             self.p_this.SetColor(value.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property origin:
 */
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->SetColor((((struct __pyx_obj_2sf_Color *)__pyx_v_value)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Drawable.color.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1212
 * 
 *     property origin:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f origin = self.p_this.GetOrigin()
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_6origin___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_6origin___get__(PyObject *__pyx_v_self) {
  sf::Vector2f __pyx_v_origin;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1213
 *     property origin:
 *         def __get__(self):
 *             cdef decl.Vector2f origin = self.p_this.GetOrigin()             # <<<<<<<<<<<<<<
 * 
 *             return (origin.x, origin.y)
 */
  __pyx_v_origin = ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->GetOrigin();

  /* "sf.pyx":1215
 *             cdef decl.Vector2f origin = self.p_this.GetOrigin()
 * 
 *             return (origin.x, origin.y)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, tuple value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_origin.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_origin.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Drawable.origin.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1217
 *             return (origin.x, origin.y)
 * 
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             x, y = value
 *             self.p_this.SetOrigin(x, y)
 */

static int __pyx_pf_2sf_8Drawable_6origin_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_8Drawable_6origin_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1218
 * 
 *         def __set__(self, tuple value):
 *             x, y = value             # <<<<<<<<<<<<<<
 *             self.p_this.SetOrigin(x, y)
 * 
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1219
 *         def __set__(self, tuple value):
 *             x, y = value
 *             self.p_this.SetOrigin(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property position:
 */
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->SetOrigin(__pyx_t_3, __pyx_t_4);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Drawable.origin.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1222
 * 
 *     property position:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f pos = self.p_this.GetPosition()
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_8position___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_8position___get__(PyObject *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1223
 *     property position:
 *         def __get__(self):
 *             cdef decl.Vector2f pos = self.p_this.GetPosition()             # <<<<<<<<<<<<<<
 * 
 *             return (pos.x, pos.y)
 */
  __pyx_v_pos = ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->GetPosition();

  /* "sf.pyx":1225
 *             cdef decl.Vector2f pos = self.p_this.GetPosition()
 * 
 *             return (pos.x, pos.y)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, tuple value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Drawable.position.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1227
 *             return (pos.x, pos.y)
 * 
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             x, y = value
 *             self.p_this.SetPosition(x, y)
 */

static int __pyx_pf_2sf_8Drawable_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_8Drawable_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1228
 * 
 *         def __set__(self, tuple value):
 *             x, y = value             # <<<<<<<<<<<<<<
 *             self.p_this.SetPosition(x, y)
 * 
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1229
 *         def __set__(self, tuple value):
 *             x, y = value
 *             self.p_this.SetPosition(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property rotation:
 */
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->SetPosition(__pyx_t_3, __pyx_t_4);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Drawable.position.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1232
 * 
 *     property rotation:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetRotation()
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_8rotation___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_8rotation___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1233
 *     property rotation:
 *         def __get__(self):
 *             return self.p_this.GetRotation()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->GetRotation()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Drawable.rotation.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1235
 *             return self.p_this.GetRotation()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetRotation(value)
 * 
 */

static int __pyx_pf_2sf_8Drawable_8rotation_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_8Drawable_8rotation_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.rotation.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1236
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetRotation(value)             # <<<<<<<<<<<<<<
 * 
 *     property scale:
 */
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->SetRotation(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1239
 * 
 *     property scale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f scale = self.p_this.GetScale()
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_5scale___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_5scale___get__(PyObject *__pyx_v_self) {
  sf::Vector2f __pyx_v_scale;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1240
 *     property scale:
 *         def __get__(self):
 *             cdef decl.Vector2f scale = self.p_this.GetScale()             # <<<<<<<<<<<<<<
 * 
 *             return (scale.x, scale.y)
 */
  __pyx_v_scale = ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->GetScale();

  /* "sf.pyx":1242
 *             cdef decl.Vector2f scale = self.p_this.GetScale()
 * 
 *             return (scale.x, scale.y)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, tuple value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_scale.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Drawable.scale.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1244
 *             return (scale.x, scale.y)
 * 
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             x, y = value
 *             self.p_this.SetScale(x, y)
 */

static int __pyx_pf_2sf_8Drawable_5scale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_8Drawable_5scale_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1245
 * 
 *         def __set__(self, tuple value):
 *             x, y = value             # <<<<<<<<<<<<<<
 *             self.p_this.SetScale(x, y)
 * 
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1246
 *         def __set__(self, tuple value):
 *             x, y = value
 *             self.p_this.SetScale(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property x:
 */
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->SetScale(__pyx_t_3, __pyx_t_4);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Drawable.scale.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1249
 * 
 *     property x:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.position[0]
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_1x___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_1x___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1250
 *     property x:
 *         def __get__(self):
 *             return self.position[0]             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__position); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Drawable.x.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1252
 *             return self.position[0]
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetX(value)
 * 
 */

static int __pyx_pf_2sf_8Drawable_1x_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_8Drawable_1x_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1252; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.x.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1253
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetX(value)             # <<<<<<<<<<<<<<
 * 
 *     property y:
 */
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->SetX(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1256
 * 
 *     property y:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.position[1]
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_1y___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_1y___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1257
 *     property y:
 *         def __get__(self):
 *             return self.position[1]             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__position); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Drawable.y.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1259
 *             return self.position[1]
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetY(value)
 * 
 */

static int __pyx_pf_2sf_8Drawable_1y_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_8Drawable_1y_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1259; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.y.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1260
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetY(value)             # <<<<<<<<<<<<<<
 * 
 *     def tranform_to_local(self, float x, float y):
 */
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->SetY(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1262
 *             self.p_this.SetY(value)
 * 
 *     def tranform_to_local(self, float x, float y):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f cpp_point
 *         cdef decl.Vector2f res
 */

static PyObject *__pyx_pf_2sf_8Drawable_2tranform_to_local(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_2tranform_to_local(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  sf::Vector2f __pyx_v_cpp_point;
  sf::Vector2f __pyx_v_res;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("tranform_to_local");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("tranform_to_local", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "tranform_to_local") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tranform_to_local", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.tranform_to_local");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1266
 *         cdef decl.Vector2f res
 * 
 *         cpp_point.x = x             # <<<<<<<<<<<<<<
 *         cpp_point.y = y
 *         res = self.p_this.TransformToLocal(cpp_point)
 */
  __pyx_v_cpp_point.x = __pyx_v_x;

  /* "sf.pyx":1267
 * 
 *         cpp_point.x = x
 *         cpp_point.y = y             # <<<<<<<<<<<<<<
 *         res = self.p_this.TransformToLocal(cpp_point)
 * 
 */
  __pyx_v_cpp_point.y = __pyx_v_y;

  /* "sf.pyx":1268
 *         cpp_point.x = x
 *         cpp_point.y = y
 *         res = self.p_this.TransformToLocal(cpp_point)             # <<<<<<<<<<<<<<
 * 
 *         return (res.x, res.y)
 */
  __pyx_v_res = ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->TransformToLocal(__pyx_v_cpp_point);

  /* "sf.pyx":1270
 *         res = self.p_this.TransformToLocal(cpp_point)
 * 
 *         return (res.x, res.y)             # <<<<<<<<<<<<<<
 * 
 *     def transform_to_global(self, float x, float y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_res.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_res.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Drawable.tranform_to_local");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1272
 *         return (res.x, res.y)
 * 
 *     def transform_to_global(self, float x, float y):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f cpp_point
 *         cdef decl.Vector2f res
 */

static PyObject *__pyx_pf_2sf_8Drawable_3transform_to_global(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_3transform_to_global(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  sf::Vector2f __pyx_v_cpp_point;
  sf::Vector2f __pyx_v_res;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("transform_to_global");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("transform_to_global", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "transform_to_global") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("transform_to_global", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1272; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.transform_to_global");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1276
 *         cdef decl.Vector2f res
 * 
 *         cpp_point.x = x             # <<<<<<<<<<<<<<
 *         cpp_point.y = y
 *         res = self.p_this.TransformToGlobal(cpp_point)
 */
  __pyx_v_cpp_point.x = __pyx_v_x;

  /* "sf.pyx":1277
 * 
 *         cpp_point.x = x
 *         cpp_point.y = y             # <<<<<<<<<<<<<<
 *         res = self.p_this.TransformToGlobal(cpp_point)
 * 
 */
  __pyx_v_cpp_point.y = __pyx_v_y;

  /* "sf.pyx":1278
 *         cpp_point.x = x
 *         cpp_point.y = y
 *         res = self.p_this.TransformToGlobal(cpp_point)             # <<<<<<<<<<<<<<
 * 
 *         return (res.x, res.y)
 */
  __pyx_v_res = ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->TransformToGlobal(__pyx_v_cpp_point);

  /* "sf.pyx":1280
 *         res = self.p_this.TransformToGlobal(cpp_point)
 * 
 *         return (res.x, res.y)             # <<<<<<<<<<<<<<
 * 
 *     def move(self, float x, float y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_res.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_res.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Drawable.transform_to_global");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1282
 *         return (res.x, res.y)
 * 
 *     def move(self, float x, float y):             # <<<<<<<<<<<<<<
 *         self.p_this.Move(x, y)
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_4move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_4move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("move");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "move") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1282; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.move");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1283
 * 
 *     def move(self, float x, float y):
 *         self.p_this.Move(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def rotate(self, float angle):
 */
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->Move(__pyx_v_x, __pyx_v_y);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1285
 *         self.p_this.Move(x, y)
 * 
 *     def rotate(self, float angle):             # <<<<<<<<<<<<<<
 *         self.p_this.Rotate(angle)
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_5rotate(PyObject *__pyx_v_self, PyObject *__pyx_arg_angle); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_5rotate(PyObject *__pyx_v_self, PyObject *__pyx_arg_angle) {
  float __pyx_v_angle;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("rotate");
  assert(__pyx_arg_angle); {
    __pyx_v_angle = __pyx_PyFloat_AsDouble(__pyx_arg_angle); if (unlikely((__pyx_v_angle == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.rotate");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1286
 * 
 *     def rotate(self, float angle):
 *         self.p_this.Rotate(angle)             # <<<<<<<<<<<<<<
 * 
 *     def scale(self, float x, float y):
 */
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->Rotate(__pyx_v_angle);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1288
 *         self.p_this.Rotate(angle)
 * 
 *     def scale(self, float x, float y):             # <<<<<<<<<<<<<<
 *         self.p_this.Scale(x, y)
 * 
 */

static PyObject *__pyx_pf_2sf_8Drawable_6scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_8Drawable_6scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("scale");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("scale", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "scale") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scale", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Drawable.scale");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1289
 * 
 *     def scale(self, float x, float y):
 *         self.p_this.Scale(x, y)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_Drawable *)__pyx_v_self)->p_this->Scale(__pyx_v_x, __pyx_v_y);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1303
 *     UNDERLINED = declstyle.Underlined
 * 
 *     def __cinit__(self, string=None, Font font=None, int character_size=0):             # <<<<<<<<<<<<<<
 *         cdef decl.String cpp_string
 *         cdef char* c_string = NULL
 */

static int __pyx_pf_2sf_4Text___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_4Text___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_string = 0;
  struct __pyx_obj_2sf_Font *__pyx_v_font = 0;
  int __pyx_v_character_size;
  sf::String __pyx_v_cpp_string;
  char *__pyx_v_c_string;
  PyObject *__pyx_v_py_byte_string;
  int __pyx_r;
  int __pyx_t_1;
  char *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__string,&__pyx_n_s__font,&__pyx_n_s__character_size,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = (PyObject *)((struct __pyx_obj_2sf_Font *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__string);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__font);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__character_size);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1303; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_string = values[0];
    __pyx_v_font = ((struct __pyx_obj_2sf_Font *)values[1]);
    if (values[2]) {
      __pyx_v_character_size = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_character_size == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1303; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_character_size = ((int)0);
    }
  } else {
    __pyx_v_string = ((PyObject *)Py_None);
    __pyx_v_font = ((struct __pyx_obj_2sf_Font *)Py_None);
    __pyx_v_character_size = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_character_size = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_character_size == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1303; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_font = ((struct __pyx_obj_2sf_Font *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_string = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1303; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Text.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF(__pyx_v_string);
  __pyx_v_py_byte_string = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_font), __pyx_ptype_2sf_Font, 1, "font", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1305
 *     def __cinit__(self, string=None, Font font=None, int character_size=0):
 *         cdef decl.String cpp_string
 *         cdef char* c_string = NULL             # <<<<<<<<<<<<<<
 * 
 *         self.is_unicode = False
 */
  __pyx_v_c_string = NULL;

  /* "sf.pyx":1307
 *         cdef char* c_string = NULL
 * 
 *         self.is_unicode = False             # <<<<<<<<<<<<<<
 * 
 *         if string is None:
 */
  ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->is_unicode = 0;

  /* "sf.pyx":1309
 *         self.is_unicode = False
 * 
 *         if string is None:             # <<<<<<<<<<<<<<
 *             self.p_this = <decl.Drawable*>new decl.Text()
 *         elif isinstance(string, str):
 */
  __pyx_t_1 = (__pyx_v_string == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1310
 * 
 *         if string is None:
 *             self.p_this = <decl.Drawable*>new decl.Text()             # <<<<<<<<<<<<<<
 *         elif isinstance(string, str):
 *             if font is None:
 */
    ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Text());
    goto __pyx_L6;
  }

  /* "sf.pyx":1311
 *         if string is None:
 *             self.p_this = <decl.Drawable*>new decl.Text()
 *         elif isinstance(string, str):             # <<<<<<<<<<<<<<
 *             if font is None:
 *                 self.p_this = <decl.Drawable*>new decl.Text(<char*>string)
 */
  __pyx_t_1 = PyString_Check(__pyx_v_string); 
  if (__pyx_t_1) {

    /* "sf.pyx":1312
 *             self.p_this = <decl.Drawable*>new decl.Text()
 *         elif isinstance(string, str):
 *             if font is None:             # <<<<<<<<<<<<<<
 *                 self.p_this = <decl.Drawable*>new decl.Text(<char*>string)
 *             elif character_size == 0:
 */
    __pyx_t_1 = (((PyObject *)__pyx_v_font) == Py_None);
    if (__pyx_t_1) {

      /* "sf.pyx":1313
 *         elif isinstance(string, str):
 *             if font is None:
 *                 self.p_this = <decl.Drawable*>new decl.Text(<char*>string)             # <<<<<<<<<<<<<<
 *             elif character_size == 0:
 *                 self.p_this = <decl.Drawable*>new decl.Text(
 */
      __pyx_t_2 = PyBytes_AsString(__pyx_v_string); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Text(__pyx_t_2));
      goto __pyx_L7;
    }

    /* "sf.pyx":1314
 *             if font is None:
 *                 self.p_this = <decl.Drawable*>new decl.Text(<char*>string)
 *             elif character_size == 0:             # <<<<<<<<<<<<<<
 *                 self.p_this = <decl.Drawable*>new decl.Text(
 *                     <char*>string, font.p_this[0])
 */
    __pyx_t_1 = (__pyx_v_character_size == 0);
    if (__pyx_t_1) {

      /* "sf.pyx":1316
 *             elif character_size == 0:
 *                 self.p_this = <decl.Drawable*>new decl.Text(
 *                     <char*>string, font.p_this[0])             # <<<<<<<<<<<<<<
 *             else:
 *                 self.p_this = <decl.Drawable*>new decl.Text(
 */
      __pyx_t_2 = PyBytes_AsString(__pyx_v_string); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "sf.pyx":1315
 *                 self.p_this = <decl.Drawable*>new decl.Text(<char*>string)
 *             elif character_size == 0:
 *                 self.p_this = <decl.Drawable*>new decl.Text(             # <<<<<<<<<<<<<<
 *                     <char*>string, font.p_this[0])
 *             else:
 */
      ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Text(__pyx_t_2, (__pyx_v_font->p_this[0])));
      goto __pyx_L7;
    }
    /*else*/ {

      /* "sf.pyx":1319
 *             else:
 *                 self.p_this = <decl.Drawable*>new decl.Text(
 *                     <char*>string, font.p_this[0], character_size)             # <<<<<<<<<<<<<<
 *         elif isinstance(string, unicode):
 *             self.is_unicode = True
 */
      __pyx_t_2 = PyBytes_AsString(__pyx_v_string); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "sf.pyx":1318
 *                     <char*>string, font.p_this[0])
 *             else:
 *                 self.p_this = <decl.Drawable*>new decl.Text(             # <<<<<<<<<<<<<<
 *                     <char*>string, font.p_this[0], character_size)
 *         elif isinstance(string, unicode):
 */
      ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Text(__pyx_t_2, (__pyx_v_font->p_this[0]), __pyx_v_character_size));
    }
    __pyx_L7:;
    goto __pyx_L6;
  }

  /* "sf.pyx":1320
 *                 self.p_this = <decl.Drawable*>new decl.Text(
 *                     <char*>string, font.p_this[0], character_size)
 *         elif isinstance(string, unicode):             # <<<<<<<<<<<<<<
 *             self.is_unicode = True
 *             string += '\x00'
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_string); 
  if (__pyx_t_1) {

    /* "sf.pyx":1321
 *                     <char*>string, font.p_this[0], character_size)
 *         elif isinstance(string, unicode):
 *             self.is_unicode = True             # <<<<<<<<<<<<<<
 *             string += '\x00'
 *             py_byte_string = string.encode('utf-32-le')
 */
    ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->is_unicode = 1;

    /* "sf.pyx":1322
 *         elif isinstance(string, unicode):
 *             self.is_unicode = True
 *             string += '\x00'             # <<<<<<<<<<<<<<
 *             py_byte_string = string.encode('utf-32-le')
 *             c_string = py_byte_string
 */
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_string, ((PyObject *)__pyx_kp_s_39)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_v_string);
    __pyx_v_string = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "sf.pyx":1323
 *             self.is_unicode = True
 *             string += '\x00'
 *             py_byte_string = string.encode('utf-32-le')             # <<<<<<<<<<<<<<
 *             c_string = py_byte_string
 *             cpp_string = decl.String(<decl.Uint32*>c_string)
 */
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_string, __pyx_n_s__encode); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_41), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_v_py_byte_string);
    __pyx_v_py_byte_string = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "sf.pyx":1324
 *             string += '\x00'
 *             py_byte_string = string.encode('utf-32-le')
 *             c_string = py_byte_string             # <<<<<<<<<<<<<<
 *             cpp_string = decl.String(<decl.Uint32*>c_string)
 * 
 */
    __pyx_t_2 = PyBytes_AsString(__pyx_v_py_byte_string); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_c_string = __pyx_t_2;

    /* "sf.pyx":1325
 *             py_byte_string = string.encode('utf-32-le')
 *             c_string = py_byte_string
 *             cpp_string = decl.String(<decl.Uint32*>c_string)             # <<<<<<<<<<<<<<
 * 
 *             if font is None:
 */
    __pyx_v_cpp_string = sf::String(((sf::Uint32 *)__pyx_v_c_string));

    /* "sf.pyx":1327
 *             cpp_string = decl.String(<decl.Uint32*>c_string)
 * 
 *             if font is None:             # <<<<<<<<<<<<<<
 *                 self.p_this = <decl.Drawable*>new decl.Text(cpp_string)
 *             elif character_size == 0:
 */
    __pyx_t_1 = (((PyObject *)__pyx_v_font) == Py_None);
    if (__pyx_t_1) {

      /* "sf.pyx":1328
 * 
 *             if font is None:
 *                 self.p_this = <decl.Drawable*>new decl.Text(cpp_string)             # <<<<<<<<<<<<<<
 *             elif character_size == 0:
 *                 self.p_this = <decl.Drawable*>new decl.Text(
 */
      ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Text(__pyx_v_cpp_string));
      goto __pyx_L8;
    }

    /* "sf.pyx":1329
 *             if font is None:
 *                 self.p_this = <decl.Drawable*>new decl.Text(cpp_string)
 *             elif character_size == 0:             # <<<<<<<<<<<<<<
 *                 self.p_this = <decl.Drawable*>new decl.Text(
 *                     cpp_string, font.p_this[0])
 */
    __pyx_t_1 = (__pyx_v_character_size == 0);
    if (__pyx_t_1) {

      /* "sf.pyx":1330
 *                 self.p_this = <decl.Drawable*>new decl.Text(cpp_string)
 *             elif character_size == 0:
 *                 self.p_this = <decl.Drawable*>new decl.Text(             # <<<<<<<<<<<<<<
 *                     cpp_string, font.p_this[0])
 *             else:
 */
      ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Text(__pyx_v_cpp_string, (__pyx_v_font->p_this[0])));
      goto __pyx_L8;
    }
    /*else*/ {

      /* "sf.pyx":1333
 *                     cpp_string, font.p_this[0])
 *             else:
 *                 self.p_this = <decl.Drawable*>new decl.Text(             # <<<<<<<<<<<<<<
 *                     cpp_string, font.p_this[0], character_size)
 *         else:
 */
      ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Text(__pyx_v_cpp_string, (__pyx_v_font->p_this[0]), __pyx_v_character_size));
    }
    __pyx_L8:;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1337
 *         else:
 *             raise TypeError("Expected str or unicode for string, got {0}"
 *                             .format(type(string)))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_42), __pyx_n_s__format); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_string)));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)Py_TYPE(__pyx_v_string)));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_string)));
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("sf.Text.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_py_byte_string);
  __Pyx_DECREF(__pyx_v_string);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1339
 *                             .format(type(string)))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_4Text_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_4Text_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":1340
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     property character_size:
 */
  delete ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":1343
 * 
 *     property character_size:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return (<decl.Text*>self.p_this).GetCharacterSize()
 * 
 */

static PyObject *__pyx_pf_2sf_4Text_14character_size___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4Text_14character_size___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1344
 *     property character_size:
 *         def __get__(self):
 *             return (<decl.Text*>self.p_this).GetCharacterSize()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->GetCharacterSize()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Text.character_size.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1346
 *             return (<decl.Text*>self.p_this).GetCharacterSize()
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             (<decl.Text*>self.p_this).SetCharacterSize(value)
 * 
 */

static int __pyx_pf_2sf_4Text_14character_size_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_4Text_14character_size_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1346; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Text.character_size.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1347
 * 
 *         def __set__(self, int value):
 *             (<decl.Text*>self.p_this).SetCharacterSize(value)             # <<<<<<<<<<<<<<
 * 
 *     property font:
 */
  ((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->SetCharacterSize(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1350
 * 
 *     property font:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Font *p = <decl.Font*>&(<decl.Text*>self.p_this).GetFont()
 * 
 */

static PyObject *__pyx_pf_2sf_4Text_4font___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4Text_4font___get__(PyObject *__pyx_v_self) {
  sf::Font *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1351
 *     property font:
 *         def __get__(self):
 *             cdef decl.Font *p = <decl.Font*>&(<decl.Text*>self.p_this).GetFont()             # <<<<<<<<<<<<<<
 * 
 *             return wrap_font_instance(p, False)
 */
  __pyx_v_p = ((sf::Font *)(&((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->GetFont()));

  /* "sf.pyx":1353
 *             cdef decl.Font *p = <decl.Font*>&(<decl.Text*>self.p_this).GetFont()
 * 
 *             return wrap_font_instance(p, False)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, Font value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_font_instance(__pyx_v_p, 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Text.font.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1355
 *             return wrap_font_instance(p, False)
 * 
 *         def __set__(self, Font value):             # <<<<<<<<<<<<<<
 *             (<decl.Text*>self.p_this).SetFont(value.p_this[0])
 * 
 */

static int __pyx_pf_2sf_4Text_4font_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_4Text_4font_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_2sf_Font, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1356
 * 
 *         def __set__(self, Font value):
 *             (<decl.Text*>self.p_this).SetFont(value.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property rect:
 */
  ((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->SetFont((((struct __pyx_obj_2sf_Font *)__pyx_v_value)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Text.font.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1359
 * 
 *     property rect:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.FloatRect *p = new decl.FloatRect()
 * 
 */

static PyObject *__pyx_pf_2sf_4Text_4rect___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4Text_4rect___get__(PyObject *__pyx_v_self) {
  sf::FloatRect *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1360
 *     property rect:
 *         def __get__(self):
 *             cdef decl.FloatRect *p = new decl.FloatRect()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = (<decl.Text*>self.p_this).GetRect()
 */
  __pyx_v_p = new sf::FloatRect();

  /* "sf.pyx":1362
 *             cdef decl.FloatRect *p = new decl.FloatRect()
 * 
 *             p[0] = (<decl.Text*>self.p_this).GetRect()             # <<<<<<<<<<<<<<
 * 
 *             return wrap_float_rect_instance(p)
 */
  (__pyx_v_p[0]) = ((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->GetRect();

  /* "sf.pyx":1364
 *             p[0] = (<decl.Text*>self.p_this).GetRect()
 * 
 *             return wrap_float_rect_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     property string:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_float_rect_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Text.rect.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1367
 * 
 *     property string:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.string res
 *             cdef char *p = NULL
 */

static PyObject *__pyx_pf_2sf_4Text_6string___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4Text_6string___get__(PyObject *__pyx_v_self) {
  std::string __pyx_v_res;
  char *__pyx_v_p;
  PyObject *__pyx_v_data;
  PyObject *__pyx_v_ret;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __pyx_v_data = ((PyObject*)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_ret = Py_None; __Pyx_INCREF(Py_None);

  /* "sf.pyx":1369
 *         def __get__(self):
 *             cdef decl.string res
 *             cdef char *p = NULL             # <<<<<<<<<<<<<<
 *             cdef bytes data
 * 
 */
  __pyx_v_p = NULL;

  /* "sf.pyx":1372
 *             cdef bytes data
 * 
 *             if not self.is_unicode:             # <<<<<<<<<<<<<<
 *                 res = ((<decl.Text*>self.p_this).GetString()
 *                        .ToAnsiString())
 */
  __pyx_t_1 = (!((struct __pyx_obj_2sf_Text *)__pyx_v_self)->is_unicode);
  if (__pyx_t_1) {

    /* "sf.pyx":1373
 * 
 *             if not self.is_unicode:
 *                 res = ((<decl.Text*>self.p_this).GetString()             # <<<<<<<<<<<<<<
 *                        .ToAnsiString())
 *                 ret = res.c_str()
 */
    __pyx_v_res = ((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->GetString().ToAnsiString();

    /* "sf.pyx":1375
 *                 res = ((<decl.Text*>self.p_this).GetString()
 *                        .ToAnsiString())
 *                 ret = res.c_str()             # <<<<<<<<<<<<<<
 *             else:
 *                 p = <char*>(<decl.Text*>self.p_this).GetString().GetData()
 */
    __pyx_t_2 = PyBytes_FromString(__pyx_v_res.c_str()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __Pyx_DECREF(__pyx_v_ret);
    __pyx_v_ret = ((PyObject *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "sf.pyx":1377
 *                 ret = res.c_str()
 *             else:
 *                 p = <char*>(<decl.Text*>self.p_this).GetString().GetData()             # <<<<<<<<<<<<<<
 *                 data = p[:(<decl.Text*>self.p_this).GetString().GetSize() * 4]
 *                 ret = data.decode('utf-32-le')
 */
    __pyx_v_p = ((char *)((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->GetString().GetData());

    /* "sf.pyx":1378
 *             else:
 *                 p = <char*>(<decl.Text*>self.p_this).GetString().GetData()
 *                 data = p[:(<decl.Text*>self.p_this).GetString().GetSize() * 4]             # <<<<<<<<<<<<<<
 *                 ret = data.decode('utf-32-le')
 * 
 */
    __pyx_t_2 = PyBytes_FromStringAndSize(__pyx_v_p + 0, (((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->GetString().GetSize() * 4) - 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __Pyx_DECREF(((PyObject *)__pyx_v_data));
    __pyx_v_data = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "sf.pyx":1379
 *                 p = <char*>(<decl.Text*>self.p_this).GetString().GetData()
 *                 data = p[:(<decl.Text*>self.p_this).GetString().GetSize() * 4]
 *                 ret = data.decode('utf-32-le')             # <<<<<<<<<<<<<<
 * 
 *             return ret
 */
    __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_data), __pyx_n_s__decode); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_43), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_v_ret);
    __pyx_v_ret = __pyx_t_3;
    __pyx_t_3 = 0;
  }
  __pyx_L5:;

  /* "sf.pyx":1381
 *                 ret = data.decode('utf-32-le')
 * 
 *             return ret             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ret);
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Text.string.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_data);
  __Pyx_DECREF(__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1383
 *             return ret
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             cdef char* c_string = NULL
 * 
 */

static int __pyx_pf_2sf_4Text_6string_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_4Text_6string_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  char *__pyx_v_c_string;
  PyObject *__pyx_v_py_byte_string;
  int __pyx_r;
  int __pyx_t_1;
  char *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __pyx_v_py_byte_string = Py_None; __Pyx_INCREF(Py_None);

  /* "sf.pyx":1384
 * 
 *         def __set__(self, value):
 *             cdef char* c_string = NULL             # <<<<<<<<<<<<<<
 * 
 *             if isinstance(value, str):
 */
  __pyx_v_c_string = NULL;

  /* "sf.pyx":1386
 *             cdef char* c_string = NULL
 * 
 *             if isinstance(value, str):             # <<<<<<<<<<<<<<
 *                 (<decl.Text*>self.p_this).SetString(<char*>value)
 *                 self.is_unicode = False
 */
  __pyx_t_1 = PyString_Check(__pyx_v_value); 
  if (__pyx_t_1) {

    /* "sf.pyx":1387
 * 
 *             if isinstance(value, str):
 *                 (<decl.Text*>self.p_this).SetString(<char*>value)             # <<<<<<<<<<<<<<
 *                 self.is_unicode = False
 *             elif isinstance(value, unicode):
 */
    __pyx_t_2 = PyBytes_AsString(__pyx_v_value); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->SetString(__pyx_t_2);

    /* "sf.pyx":1388
 *             if isinstance(value, str):
 *                 (<decl.Text*>self.p_this).SetString(<char*>value)
 *                 self.is_unicode = False             # <<<<<<<<<<<<<<
 *             elif isinstance(value, unicode):
 *                 value += '\x00'
 */
    ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->is_unicode = 0;
    goto __pyx_L5;
  }

  /* "sf.pyx":1389
 *                 (<decl.Text*>self.p_this).SetString(<char*>value)
 *                 self.is_unicode = False
 *             elif isinstance(value, unicode):             # <<<<<<<<<<<<<<
 *                 value += '\x00'
 *                 py_byte_string = value.encode('utf-32-le')
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_value); 
  if (__pyx_t_1) {

    /* "sf.pyx":1390
 *                 self.is_unicode = False
 *             elif isinstance(value, unicode):
 *                 value += '\x00'             # <<<<<<<<<<<<<<
 *                 py_byte_string = value.encode('utf-32-le')
 *                 c_string = py_byte_string
 */
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_value, ((PyObject *)__pyx_kp_s_39)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_v_value);
    __pyx_v_value = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "sf.pyx":1391
 *             elif isinstance(value, unicode):
 *                 value += '\x00'
 *                 py_byte_string = value.encode('utf-32-le')             # <<<<<<<<<<<<<<
 *                 c_string = py_byte_string
 *                 (<decl.Text*>self.p_this).SetString(
 */
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_value, __pyx_n_s__encode); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_44), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_v_py_byte_string);
    __pyx_v_py_byte_string = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "sf.pyx":1392
 *                 value += '\x00'
 *                 py_byte_string = value.encode('utf-32-le')
 *                 c_string = py_byte_string             # <<<<<<<<<<<<<<
 *                 (<decl.Text*>self.p_this).SetString(
 *                     decl.String(<decl.Uint32*>c_string))
 */
    __pyx_t_2 = PyBytes_AsString(__pyx_v_py_byte_string); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_c_string = __pyx_t_2;

    /* "sf.pyx":1394
 *                 c_string = py_byte_string
 *                 (<decl.Text*>self.p_this).SetString(
 *                     decl.String(<decl.Uint32*>c_string))             # <<<<<<<<<<<<<<
 *                 self.is_unicode = True
 *             else:
 */
    ((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->SetString(sf::String(((sf::Uint32 *)__pyx_v_c_string)));

    /* "sf.pyx":1395
 *                 (<decl.Text*>self.p_this).SetString(
 *                     decl.String(<decl.Uint32*>c_string))
 *                 self.is_unicode = True             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError("Expected str or unicode for string, got {0}"
 */
    ((struct __pyx_obj_2sf_Text *)__pyx_v_self)->is_unicode = 1;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "sf.pyx":1398
 *             else:
 *                 raise TypeError("Expected str or unicode for string, got {0}"
 *                                .format(type(value)))             # <<<<<<<<<<<<<<
 * 
 *     property style:
 */
    __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_42), __pyx_n_s__format); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __Pyx_INCREF(((PyObject *)Py_TYPE(__pyx_v_value)));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)Py_TYPE(__pyx_v_value)));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(__pyx_v_value)));
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_builtin_TypeError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L5:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("sf.Text.string.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_py_byte_string);
  __Pyx_DECREF(__pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1401
 * 
 *     property style:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return (<decl.Text*>self.p_this).GetStyle()
 * 
 */

static PyObject *__pyx_pf_2sf_4Text_5style___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4Text_5style___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1402
 *     property style:
 *         def __get__(self):
 *             return (<decl.Text*>self.p_this).GetStyle()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->GetStyle()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Text.style.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1404
 *             return (<decl.Text*>self.p_this).GetStyle()
 * 
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             (<decl.Text*>self.p_this).SetStyle(value)
 * 
 */

static int __pyx_pf_2sf_4Text_5style_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_4Text_5style_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1404; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Text.style.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1405
 * 
 *         def __set__(self, int value):
 *             (<decl.Text*>self.p_this).SetStyle(value)             # <<<<<<<<<<<<<<
 * 
 *     def get_character_pos(self, int index):
 */
  ((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->SetStyle(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1407
 *             (<decl.Text*>self.p_this).SetStyle(value)
 * 
 *     def get_character_pos(self, int index):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f res = (<decl.Text*>self.p_this).GetCharacterPos(
 *             index)
 */

static PyObject *__pyx_pf_2sf_4Text_2get_character_pos(PyObject *__pyx_v_self, PyObject *__pyx_arg_index); /*proto*/
static PyObject *__pyx_pf_2sf_4Text_2get_character_pos(PyObject *__pyx_v_self, PyObject *__pyx_arg_index) {
  int __pyx_v_index;
  sf::Vector2f __pyx_v_res;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("get_character_pos");
  assert(__pyx_arg_index); {
    __pyx_v_index = __Pyx_PyInt_AsInt(__pyx_arg_index); if (unlikely((__pyx_v_index == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1407; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Text.get_character_pos");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1409
 *     def get_character_pos(self, int index):
 *         cdef decl.Vector2f res = (<decl.Text*>self.p_this).GetCharacterPos(
 *             index)             # <<<<<<<<<<<<<<
 * 
 *         return (res.x, res.y)
 */
  __pyx_v_res = ((sf::Text *)((struct __pyx_obj_2sf_Text *)__pyx_v_self)->__pyx_base.p_this)->GetCharacterPos(__pyx_v_index);

  /* "sf.pyx":1411
 *             index)
 * 
 *         return (res.x, res.y)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_res.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_res.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Text.get_character_pos");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1418
 * 
 * cdef class Sprite(Drawable):
 *     def __cinit__(self, Image image=None, tuple position=(0,0),             # <<<<<<<<<<<<<<
 *                   tuple scale=(1,1), float rotation=0.0,
 *                   Color color=Color.WHITE):
 */

static int __pyx_pf_2sf_6Sprite___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_6Sprite___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_Image *__pyx_v_image = 0;
  PyObject *__pyx_v_position = 0;
  PyObject *__pyx_v_scale = 0;
  float __pyx_v_rotation;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  sf::Vector2f __pyx_v_cpp_position;
  sf::Vector2f __pyx_v_cpp_scale;
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__image,&__pyx_n_s__position,&__pyx_n_s__scale,&__pyx_n_s__rotation,&__pyx_n_s__color,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = (PyObject *)((struct __pyx_obj_2sf_Image *)Py_None);
    values[1] = ((PyObject*)__pyx_k_tuple_45);

    /* "sf.pyx":1419
 * cdef class Sprite(Drawable):
 *     def __cinit__(self, Image image=None, tuple position=(0,0),
 *                   tuple scale=(1,1), float rotation=0.0,             # <<<<<<<<<<<<<<
 *                   Color color=Color.WHITE):
 *         cdef decl.Vector2f cpp_position
 */
    values[2] = ((PyObject*)__pyx_k_tuple_46);
    values[4] = (PyObject *)__pyx_k_47;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__image);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__position);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__scale);
        if (value) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rotation);
        if (value) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
        if (value) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1418; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_image = ((struct __pyx_obj_2sf_Image *)values[0]);
    __pyx_v_position = ((PyObject*)values[1]);
    __pyx_v_scale = ((PyObject*)values[2]);
    if (values[3]) {
      __pyx_v_rotation = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rotation == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_rotation = ((float)0.0);
    }
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[4]);
  } else {

    /* "sf.pyx":1418
 * 
 * cdef class Sprite(Drawable):
 *     def __cinit__(self, Image image=None, tuple position=(0,0),             # <<<<<<<<<<<<<<
 *                   tuple scale=(1,1), float rotation=0.0,
 *                   Color color=Color.WHITE):
 */
    __pyx_v_image = ((struct __pyx_obj_2sf_Image *)Py_None);
    __pyx_v_position = ((PyObject*)__pyx_k_tuple_48);

    /* "sf.pyx":1419
 * cdef class Sprite(Drawable):
 *     def __cinit__(self, Image image=None, tuple position=(0,0),
 *                   tuple scale=(1,1), float rotation=0.0,             # <<<<<<<<<<<<<<
 *                   Color color=Color.WHITE):
 *         cdef decl.Vector2f cpp_position
 */
    __pyx_v_scale = ((PyObject*)__pyx_k_tuple_49);
    __pyx_v_rotation = ((float)0.0);
    __pyx_v_color = __pyx_k_47;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 4));
      case  4: __pyx_v_rotation = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_rotation == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  3: __pyx_v_scale = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 2));
      case  2: __pyx_v_position = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_image = ((struct __pyx_obj_2sf_Image *)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1418; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sprite.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_image), __pyx_ptype_2sf_Image, 1, "image", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_position), (&PyTuple_Type), 1, "position", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_scale), (&PyTuple_Type), 1, "scale", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1424
 *         cdef decl.Vector2f cpp_scale
 * 
 *         if image is None:             # <<<<<<<<<<<<<<
 *             self.p_this = <decl.Drawable*>new decl.Sprite()
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_image) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1425
 * 
 *         if image is None:
 *             self.p_this = <decl.Drawable*>new decl.Sprite()             # <<<<<<<<<<<<<<
 *         else:
 *             cpp_position.x = position[0]
 */
    ((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Sprite());
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1427
 *             self.p_this = <decl.Drawable*>new decl.Sprite()
 *         else:
 *             cpp_position.x = position[0]             # <<<<<<<<<<<<<<
 *             cpp_position.y = position[1]
 *             cpp_scale.x = scale[0]
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_position), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cpp_position.x = __pyx_t_3;

    /* "sf.pyx":1428
 *         else:
 *             cpp_position.x = position[0]
 *             cpp_position.y = position[1]             # <<<<<<<<<<<<<<
 *             cpp_scale.x = scale[0]
 *             cpp_scale.y = scale[1]
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_position), 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cpp_position.y = __pyx_t_3;

    /* "sf.pyx":1429
 *             cpp_position.x = position[0]
 *             cpp_position.y = position[1]
 *             cpp_scale.x = scale[0]             # <<<<<<<<<<<<<<
 *             cpp_scale.y = scale[1]
 *             self.p_this = <decl.Drawable*>new decl.Sprite(image.p_this[0],
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_scale), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cpp_scale.x = __pyx_t_3;

    /* "sf.pyx":1430
 *             cpp_position.y = position[1]
 *             cpp_scale.x = scale[0]
 *             cpp_scale.y = scale[1]             # <<<<<<<<<<<<<<
 *             self.p_this = <decl.Drawable*>new decl.Sprite(image.p_this[0],
 *                                                           cpp_position,
 */
    __pyx_t_2 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_scale), 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cpp_scale.y = __pyx_t_3;

    /* "sf.pyx":1431
 *             cpp_scale.x = scale[0]
 *             cpp_scale.y = scale[1]
 *             self.p_this = <decl.Drawable*>new decl.Sprite(image.p_this[0],             # <<<<<<<<<<<<<<
 *                                                           cpp_position,
 *                                                           cpp_scale,
 */
    ((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Sprite((__pyx_v_image->p_this[0]), __pyx_v_cpp_position, __pyx_v_cpp_scale, __pyx_v_rotation, (__pyx_v_color->p_this[0])));
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Sprite.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1437
 *                                                           color.p_this[0])
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_6Sprite_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_6Sprite_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":1438
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, tuple coords):
 */
  delete ((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":1440
 *         del self.p_this
 * 
 *     def __getitem__(self, tuple coords):             # <<<<<<<<<<<<<<
 *         x, y = coords
 * 
 */

static PyObject *__pyx_pf_2sf_6Sprite_2__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_coords); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_2__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_coords) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__getitem__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_coords), (&PyTuple_Type), 1, "coords", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1441
 * 
 *     def __getitem__(self, tuple coords):
 *         x, y = coords             # <<<<<<<<<<<<<<
 * 
 *         return self.get_pixel(x, y)
 */
  if (likely(((PyObject *)__pyx_v_coords) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_coords)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_coords);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_coords), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1443
 *         x, y = coords
 * 
 *         return self.get_pixel(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property height:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__get_pixel); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Sprite.__getitem__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1446
 * 
 *     property height:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return (<decl.Sprite*>self.p_this).GetSize().y
 * 
 */

static PyObject *__pyx_pf_2sf_6Sprite_6height___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_6height___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1447
 *     property height:
 *         def __get__(self):
 *             return (<decl.Sprite*>self.p_this).GetSize().y             # <<<<<<<<<<<<<<
 * 
 *     property image:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->GetSize().y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sprite.height.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1450
 * 
 *     property image:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return wrap_image_instance(
 *                 <decl.Image*>((<decl.Sprite*>self.p_this).GetImage()),
 */

static PyObject *__pyx_pf_2sf_6Sprite_5image___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_5image___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1451
 *     property image:
 *         def __get__(self):
 *             return wrap_image_instance(             # <<<<<<<<<<<<<<
 *                 <decl.Image*>((<decl.Sprite*>self.p_this).GetImage()),
 *                 False)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "sf.pyx":1453
 *             return wrap_image_instance(
 *                 <decl.Image*>((<decl.Sprite*>self.p_this).GetImage()),
 *                 False)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, Image value):
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_image_instance(((sf::Image *)((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->GetImage()), 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sprite.image.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1455
 *                 False)
 * 
 *         def __set__(self, Image value):             # <<<<<<<<<<<<<<
 *             (<decl.Sprite*>self.p_this).SetImage(value.p_this[0])
 * 
 */

static int __pyx_pf_2sf_6Sprite_5image_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_6Sprite_5image_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_2sf_Image, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1456
 * 
 *         def __set__(self, Image value):
 *             (<decl.Sprite*>self.p_this).SetImage(value.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property size:
 */
  ((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->SetImage((((struct __pyx_obj_2sf_Image *)__pyx_v_value)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Sprite.image.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1459
 * 
 *     property size:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return (self.width, self.height)
 * 
 */

static PyObject *__pyx_pf_2sf_6Sprite_4size___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_4size___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1460
 *     property size:
 *         def __get__(self):
 *             return (self.width, self.height)             # <<<<<<<<<<<<<<
 * 
 *     property sub_rect:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__height); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Sprite.size.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1463
 * 
 *     property sub_rect:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.IntRect r = (<decl.Sprite*>self.p_this).GetSubRect()
 * 
 */

static PyObject *__pyx_pf_2sf_6Sprite_8sub_rect___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_8sub_rect___get__(PyObject *__pyx_v_self) {
  sf::IntRect __pyx_v_r;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1464
 *     property sub_rect:
 *         def __get__(self):
 *             cdef decl.IntRect r = (<decl.Sprite*>self.p_this).GetSubRect()             # <<<<<<<<<<<<<<
 * 
 *             return IntRect(r.Left, r.Top, r.Width, r.Height)
 */
  __pyx_v_r = ((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->GetSubRect();

  /* "sf.pyx":1466
 *             cdef decl.IntRect r = (<decl.Sprite*>self.p_this).GetSubRect()
 * 
 *             return IntRect(r.Left, r.Top, r.Width, r.Height)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_r.Left); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromLong(__pyx_v_r.Top); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyInt_FromLong(__pyx_v_r.Width); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyInt_FromLong(__pyx_v_r.Height); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_5));
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_IntRect)), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("sf.Sprite.sub_rect.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1468
 *             return IntRect(r.Left, r.Top, r.Width, r.Height)
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             cdef decl.IntRect r = convert_to_int_rect(value)
 * 
 */

static int __pyx_pf_2sf_6Sprite_8sub_rect_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_6Sprite_8sub_rect_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  sf::IntRect __pyx_v_r;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");

  /* "sf.pyx":1469
 * 
 *         def __set__(self, value):
 *             cdef decl.IntRect r = convert_to_int_rect(value)             # <<<<<<<<<<<<<<
 * 
 *             (<decl.Sprite*>self.p_this).SetSubRect(r)
 */
  __pyx_v_r = __pyx_f_2sf_convert_to_int_rect(__pyx_v_value);

  /* "sf.pyx":1471
 *             cdef decl.IntRect r = convert_to_int_rect(value)
 * 
 *             (<decl.Sprite*>self.p_this).SetSubRect(r)             # <<<<<<<<<<<<<<
 * 
 *     property width:
 */
  ((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->SetSubRect(__pyx_v_r);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1474
 * 
 *     property width:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return (<decl.Sprite*>self.p_this).GetSize().x
 * 
 */

static PyObject *__pyx_pf_2sf_6Sprite_5width___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_5width___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1475
 *     property width:
 *         def __get__(self):
 *             return (<decl.Sprite*>self.p_this).GetSize().x             # <<<<<<<<<<<<<<
 * 
 *     def get_pixel(self, unsigned int x, unsigned int y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->GetSize().x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sprite.width.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1477
 *             return (<decl.Sprite*>self.p_this).GetSize().x
 * 
 *     def get_pixel(self, unsigned int x, unsigned int y):             # <<<<<<<<<<<<<<
 *         cdef decl.Color *p
 *         cdef decl.Color c
 */

static PyObject *__pyx_pf_2sf_6Sprite_3get_pixel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_3get_pixel(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_x;
  unsigned int __pyx_v_y;
  sf::Color *__pyx_v_p;
  sf::Color __pyx_v_c;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("get_pixel");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("get_pixel", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "get_pixel") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_x == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_y == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_pixel", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sprite.get_pixel");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1481
 *         cdef decl.Color c
 * 
 *         c = (<decl.Sprite*>self.p_this).GetPixel(x, y)             # <<<<<<<<<<<<<<
 *         p = new decl.Color(c.r, c.g, c.b, c.a)
 * 
 */
  __pyx_v_c = ((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->GetPixel(__pyx_v_x, __pyx_v_y);

  /* "sf.pyx":1482
 * 
 *         c = (<decl.Sprite*>self.p_this).GetPixel(x, y)
 *         p = new decl.Color(c.r, c.g, c.b, c.a)             # <<<<<<<<<<<<<<
 * 
 *         return wrap_color_instance(p)
 */
  __pyx_v_p = new sf::Color(__pyx_v_c.r, __pyx_v_c.g, __pyx_v_c.b, __pyx_v_c.a);

  /* "sf.pyx":1484
 *         p = new decl.Color(c.r, c.g, c.b, c.a)
 * 
 *         return wrap_color_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     def flip_x(self, bint flipped):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_2sf_wrap_color_instance(__pyx_v_p); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Sprite.get_pixel");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1486
 *         return wrap_color_instance(p)
 * 
 *     def flip_x(self, bint flipped):             # <<<<<<<<<<<<<<
 *         (<decl.Sprite*>self.p_this).FlipX(flipped)
 * 
 */

static PyObject *__pyx_pf_2sf_6Sprite_4flip_x(PyObject *__pyx_v_self, PyObject *__pyx_arg_flipped); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_4flip_x(PyObject *__pyx_v_self, PyObject *__pyx_arg_flipped) {
  int __pyx_v_flipped;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("flip_x");
  assert(__pyx_arg_flipped); {
    __pyx_v_flipped = __Pyx_PyObject_IsTrue(__pyx_arg_flipped); if (unlikely((__pyx_v_flipped == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1486; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sprite.flip_x");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1487
 * 
 *     def flip_x(self, bint flipped):
 *         (<decl.Sprite*>self.p_this).FlipX(flipped)             # <<<<<<<<<<<<<<
 * 
 *     def flip_y(self, bint flipped):
 */
  ((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->FlipX(__pyx_v_flipped);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1489
 *         (<decl.Sprite*>self.p_this).FlipX(flipped)
 * 
 *     def flip_y(self, bint flipped):             # <<<<<<<<<<<<<<
 *         (<decl.Sprite*>self.p_this).FlipY(flipped)
 * 
 */

static PyObject *__pyx_pf_2sf_6Sprite_5flip_y(PyObject *__pyx_v_self, PyObject *__pyx_arg_flipped); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_5flip_y(PyObject *__pyx_v_self, PyObject *__pyx_arg_flipped) {
  int __pyx_v_flipped;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("flip_y");
  assert(__pyx_arg_flipped); {
    __pyx_v_flipped = __Pyx_PyObject_IsTrue(__pyx_arg_flipped); if (unlikely((__pyx_v_flipped == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1489; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sprite.flip_y");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1490
 * 
 *     def flip_y(self, bint flipped):
 *         (<decl.Sprite*>self.p_this).FlipY(flipped)             # <<<<<<<<<<<<<<
 * 
 *     def resize(self, float width, float height):
 */
  ((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->FlipY(__pyx_v_flipped);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1492
 *         (<decl.Sprite*>self.p_this).FlipY(flipped)
 * 
 *     def resize(self, float width, float height):             # <<<<<<<<<<<<<<
 *         (<decl.Sprite*>self.p_this).Resize(width, height)
 * 
 */

static PyObject *__pyx_pf_2sf_6Sprite_6resize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_6resize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_width;
  float __pyx_v_height;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("resize");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("resize", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1492; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "resize") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1492; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1492; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1492; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_width = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1492; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1492; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("resize", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1492; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sprite.resize");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1493
 * 
 *     def resize(self, float width, float height):
 *         (<decl.Sprite*>self.p_this).Resize(width, height)             # <<<<<<<<<<<<<<
 * 
 *     def set_image(self, Image image, bint adjust_to_new_size=False):
 */
  ((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->Resize(__pyx_v_width, __pyx_v_height);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1495
 *         (<decl.Sprite*>self.p_this).Resize(width, height)
 * 
 *     def set_image(self, Image image, bint adjust_to_new_size=False):             # <<<<<<<<<<<<<<
 *         (<decl.Sprite*>self.p_this).SetImage(image.p_this[0],
 *                                              adjust_to_new_size)
 */

static PyObject *__pyx_pf_2sf_6Sprite_7set_image(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_6Sprite_7set_image(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_Image *__pyx_v_image = 0;
  int __pyx_v_adjust_to_new_size;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__image,&__pyx_n_s__adjust_to_new_size,0};
  __Pyx_RefNannySetupContext("set_image");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__image);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__adjust_to_new_size);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_image") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1495; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_image = ((struct __pyx_obj_2sf_Image *)values[0]);
    if (values[1]) {
      __pyx_v_adjust_to_new_size = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_adjust_to_new_size == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1495; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_adjust_to_new_size = ((int)0);
    }
  } else {
    __pyx_v_adjust_to_new_size = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_adjust_to_new_size = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_adjust_to_new_size == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1495; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_image = ((struct __pyx_obj_2sf_Image *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_image", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1495; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Sprite.set_image");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_image), __pyx_ptype_2sf_Image, 1, "image", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1497
 *     def set_image(self, Image image, bint adjust_to_new_size=False):
 *         (<decl.Sprite*>self.p_this).SetImage(image.p_this[0],
 *                                              adjust_to_new_size)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((sf::Sprite *)((struct __pyx_obj_2sf_Sprite *)__pyx_v_self)->__pyx_base.p_this)->SetImage((__pyx_v_image->p_this[0]), __pyx_v_adjust_to_new_size);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Sprite.set_image");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1508
 *     cdef bint delete_this
 * 
 *     def __cinit__(self, width=None, height=None, bits_per_pixel=32):             # <<<<<<<<<<<<<<
 *         if width is None or height is None:
 *             self.p_this = new decl.VideoMode()
 */

static int __pyx_pf_2sf_9VideoMode___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_9VideoMode___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_width = 0;
  PyObject *__pyx_v_height = 0;
  PyObject *__pyx_v_bits_per_pixel = 0;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  unsigned int __pyx_t_4;
  unsigned int __pyx_t_5;
  unsigned int __pyx_t_6;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,&__pyx_n_s__bits_per_pixel,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)__pyx_int_32);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__bits_per_pixel);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = values[0];
    __pyx_v_height = values[1];
    __pyx_v_bits_per_pixel = values[2];
  } else {
    __pyx_v_width = ((PyObject *)Py_None);
    __pyx_v_height = ((PyObject *)Py_None);
    __pyx_v_bits_per_pixel = ((PyObject *)__pyx_int_32);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_bits_per_pixel = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: __pyx_v_height = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: __pyx_v_width = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.VideoMode.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1509
 * 
 *     def __cinit__(self, width=None, height=None, bits_per_pixel=32):
 *         if width is None or height is None:             # <<<<<<<<<<<<<<
 *             self.p_this = new decl.VideoMode()
 *         else:
 */
  __pyx_t_1 = (__pyx_v_width == Py_None);
  if (!__pyx_t_1) {
    __pyx_t_2 = (__pyx_v_height == Py_None);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "sf.pyx":1510
 *     def __cinit__(self, width=None, height=None, bits_per_pixel=32):
 *         if width is None or height is None:
 *             self.p_this = new decl.VideoMode()             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this = new decl.VideoMode(width, height, bits_per_pixel)
 */
    ((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this = new sf::VideoMode();
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1512
 *             self.p_this = new decl.VideoMode()
 *         else:
 *             self.p_this = new decl.VideoMode(width, height, bits_per_pixel)             # <<<<<<<<<<<<<<
 * 
 *         self.delete_this = True
 */
    __pyx_t_4 = __Pyx_PyInt_AsUnsignedInt(__pyx_v_width); if (unlikely((__pyx_t_4 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = __Pyx_PyInt_AsUnsignedInt(__pyx_v_height); if (unlikely((__pyx_t_5 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = __Pyx_PyInt_AsUnsignedInt(__pyx_v_bits_per_pixel); if (unlikely((__pyx_t_6 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this = new sf::VideoMode(__pyx_t_4, __pyx_t_5, __pyx_t_6);
  }
  __pyx_L6:;

  /* "sf.pyx":1514
 *             self.p_this = new decl.VideoMode(width, height, bits_per_pixel)
 * 
 *         self.delete_this = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->delete_this = 1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.VideoMode.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1516
 *         self.delete_this = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.delete_this:
 *             del self.p_this
 */

static void __pyx_pf_2sf_9VideoMode_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_9VideoMode_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":1517
 * 
 *     def __dealloc__(self):
 *         if self.delete_this:             # <<<<<<<<<<<<<<
 *             del self.p_this
 * 
 */
  if (((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->delete_this) {

    /* "sf.pyx":1518
 *     def __dealloc__(self):
 *         if self.delete_this:
 *             del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
    delete ((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this;
    goto __pyx_L5;
  }
  __pyx_L5:;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":1520
 *             del self.p_this
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         """Return a string about the mode in this format: WIDTHxHEIGHTxBPP.
 * 
 */

static PyObject *__pyx_pf_2sf_9VideoMode_2__str__(PyObject *__pyx_v_self); /*proto*/
static char __pyx_doc_2sf_9VideoMode_2__str__[] = "Return a string about the mode in this format: WIDTHxHEIGHTxBPP.\n\n        For example, '1024x768x32'.";
struct wrapperbase __pyx_wrapperbase_2sf_9VideoMode_2__str__;
static PyObject *__pyx_pf_2sf_9VideoMode_2__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__str__");

  /* "sf.pyx":1525
 *         For example, '1024x768x32'."""
 * 
 *         return '{0.width}x{0.height}x{0.bits_per_pixel}'.format(self)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_50), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1525; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.VideoMode.__str__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1527
 *         return '{0.width}x{0.height}x{0.bits_per_pixel}'.format(self)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return ('VideoMode({0.width}, {0.height}, {0.bits_per_pixel})'
 *                 .format(self))
 */

static PyObject *__pyx_pf_2sf_9VideoMode_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9VideoMode_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__repr__");

  /* "sf.pyx":1528
 * 
 *     def __repr__(self):
 *         return ('VideoMode({0.width}, {0.height}, {0.bits_per_pixel})'             # <<<<<<<<<<<<<<
 *                 .format(self))
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "sf.pyx":1529
 *     def __repr__(self):
 *         return ('VideoMode({0.width}, {0.height}, {0.bits_per_pixel})'
 *                 .format(self))             # <<<<<<<<<<<<<<
 * 
 *     def __richcmp__(VideoMode x, VideoMode y, int op):
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_kp_s_51), __pyx_n_s__format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.VideoMode.__repr__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1531
 *                 .format(self))
 * 
 *     def __richcmp__(VideoMode x, VideoMode y, int op):             # <<<<<<<<<<<<<<
 *         # ==
 *         if op == 2:
 */

static PyObject *__pyx_pf_2sf_9VideoMode_4__richcmp__(PyObject *__pyx_v_x, PyObject *__pyx_v_y, int __pyx_v_op); /*proto*/
static PyObject *__pyx_pf_2sf_9VideoMode_4__richcmp__(PyObject *__pyx_v_x, PyObject *__pyx_v_y, int __pyx_v_op) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__richcmp__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_2sf_VideoMode, 1, "x", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_2sf_VideoMode, 1, "y", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1558
 *             return not y < x
 *         # >=
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return not x < y
 * 
 */
  switch (__pyx_v_op) {

    /* "sf.pyx":1533
 *     def __richcmp__(VideoMode x, VideoMode y, int op):
 *         # ==
 *         if op == 2:             # <<<<<<<<<<<<<<
 *             return (x.width == y.width and
 *                     x.height == y.height and
 */
    case 2:

    /* "sf.pyx":1534
 *         # ==
 *         if op == 2:
 *             return (x.width == y.width and             # <<<<<<<<<<<<<<
 *                     x.height == y.height and
 *                     x.bits_per_pixel == y.bits_per_pixel)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__width); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (__pyx_t_4) {
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "sf.pyx":1535
 *         if op == 2:
 *             return (x.width == y.width and
 *                     x.height == y.height and             # <<<<<<<<<<<<<<
 *                     x.bits_per_pixel == y.bits_per_pixel)
 *         # !=
 */
      __pyx_t_2 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__height); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__height); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_4) {
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "sf.pyx":1536
 *             return (x.width == y.width and
 *                     x.height == y.height and
 *                     x.bits_per_pixel == y.bits_per_pixel)             # <<<<<<<<<<<<<<
 *         # !=
 *         elif op == 3:
 */
        __pyx_t_1 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__bits_per_pixel); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__bits_per_pixel); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __pyx_t_6;
        __pyx_t_6 = 0;
      } else {
        __pyx_t_2 = __pyx_t_5;
        __pyx_t_5 = 0;
      }
      __pyx_t_5 = __pyx_t_2;
      __pyx_t_2 = 0;
    } else {
      __pyx_t_5 = __pyx_t_3;
      __pyx_t_3 = 0;
    }
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
    break;

    /* "sf.pyx":1538
 *                     x.bits_per_pixel == y.bits_per_pixel)
 *         # !=
 *         elif op == 3:             # <<<<<<<<<<<<<<
 *             return not x == y
 * 
 */
    case 3:

    /* "sf.pyx":1539
 *         # !=
 *         elif op == 3:
 *             return not x == y             # <<<<<<<<<<<<<<
 * 
 *         # <
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_v_y, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyBool_FromLong((!__pyx_t_4)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
    break;

    /* "sf.pyx":1542
 * 
 *         # <
 *         elif op == 0:             # <<<<<<<<<<<<<<
 *             if x.bits_per_pixel == y.bits_per_pixel:
 *                 if x.width == y.width:
 */
    case 0:

    /* "sf.pyx":1543
 *         # <
 *         elif op == 0:
 *             if x.bits_per_pixel == y.bits_per_pixel:             # <<<<<<<<<<<<<<
 *                 if x.width == y.width:
 *                     return x.height < y.height
 */
    __pyx_t_5 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__bits_per_pixel); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__bits_per_pixel); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_5, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_4) {

      /* "sf.pyx":1544
 *         elif op == 0:
 *             if x.bits_per_pixel == y.bits_per_pixel:
 *                 if x.width == y.width:             # <<<<<<<<<<<<<<
 *                     return x.height < y.height
 *                 else:
 */
      __pyx_t_2 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__width); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__width); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_4) {

        /* "sf.pyx":1545
 *             if x.bits_per_pixel == y.bits_per_pixel:
 *                 if x.width == y.width:
 *                     return x.height < y.height             # <<<<<<<<<<<<<<
 *                 else:
 *                     return x.width < y.width
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_5 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__height); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__height); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = PyObject_RichCompare(__pyx_t_5, __pyx_t_3, Py_LT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        goto __pyx_L0;
        goto __pyx_L6;
      }
      /*else*/ {

        /* "sf.pyx":1547
 *                     return x.height < y.height
 *                 else:
 *                     return x.width < y.width             # <<<<<<<<<<<<<<
 *             else:
 *                 return x.bits_per_pixel < y.bits_per_pixel
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_2 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__width); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_3 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__width); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_LT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_5;
        __pyx_t_5 = 0;
        goto __pyx_L0;
      }
      __pyx_L6:;
      goto __pyx_L5;
    }
    /*else*/ {

      /* "sf.pyx":1549
 *                     return x.width < y.width
 *             else:
 *                 return x.bits_per_pixel < y.bits_per_pixel             # <<<<<<<<<<<<<<
 *         # >
 *         elif op == 4:
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_5 = PyObject_GetAttr(__pyx_v_x, __pyx_n_s__bits_per_pixel); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_GetAttr(__pyx_v_y, __pyx_n_s__bits_per_pixel); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = PyObject_RichCompare(__pyx_t_5, __pyx_t_3, Py_LT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      goto __pyx_L0;
    }
    __pyx_L5:;
    break;

    /* "sf.pyx":1551
 *                 return x.bits_per_pixel < y.bits_per_pixel
 *         # >
 *         elif op == 4:             # <<<<<<<<<<<<<<
 *             return y < x
 * 
 */
    case 4:

    /* "sf.pyx":1552
 *         # >
 *         elif op == 4:
 *             return y < x             # <<<<<<<<<<<<<<
 * 
 *         # <=
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_y, __pyx_v_x, Py_LT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    break;

    /* "sf.pyx":1555
 * 
 *         # <=
 *         elif op == 1:             # <<<<<<<<<<<<<<
 *             return not y < x
 *         # >=
 */
    case 1:

    /* "sf.pyx":1556
 *         # <=
 *         elif op == 1:
 *             return not y < x             # <<<<<<<<<<<<<<
 *         # >=
 *         elif op == 5:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_y, __pyx_v_x, Py_LT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyBool_FromLong((!__pyx_t_4)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    break;

    /* "sf.pyx":1558
 *             return not y < x
 *         # >=
 *         elif op == 5:             # <<<<<<<<<<<<<<
 *             return not x < y
 * 
 */
    case 5:

    /* "sf.pyx":1559
 *         # >=
 *         elif op == 5:
 *             return not x < y             # <<<<<<<<<<<<<<
 * 
 *         return NotImplemented
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_x, __pyx_v_y, Py_LT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyBool_FromLong((!__pyx_t_4)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    break;
  }

  /* "sf.pyx":1561
 *             return not x < y
 * 
 *         return NotImplemented             # <<<<<<<<<<<<<<
 * 
 *     property width:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_builtin_NotImplemented);
  __pyx_r = __pyx_builtin_NotImplemented;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("sf.VideoMode.__richcmp__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1564
 * 
 *     property width:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Width
 * 
 */

static PyObject *__pyx_pf_2sf_9VideoMode_5width___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9VideoMode_5width___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1565
 *     property width:
 *         def __get__(self):
 *             return self.p_this.Width             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this->Width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.VideoMode.width.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1567
 *             return self.p_this.Width
 * 
 *         def __set__(self, unsigned int value):             # <<<<<<<<<<<<<<
 *             self.p_this.Width = value
 * 
 */

static int __pyx_pf_2sf_9VideoMode_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_9VideoMode_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1567; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.VideoMode.width.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1568
 * 
 *         def __set__(self, unsigned int value):
 *             self.p_this.Width = value             # <<<<<<<<<<<<<<
 * 
 *     property height:
 */
  ((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this->Width = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1571
 * 
 *     property height:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.Height
 * 
 */

static PyObject *__pyx_pf_2sf_9VideoMode_6height___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9VideoMode_6height___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1572
 *     property height:
 *         def __get__(self):
 *             return self.p_this.Height             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this->Height); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.VideoMode.height.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1574
 *             return self.p_this.Height
 * 
 *         def __set__(self, unsigned value):             # <<<<<<<<<<<<<<
 *             self.p_this.Height = value
 * 
 */

static int __pyx_pf_2sf_9VideoMode_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_9VideoMode_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1574; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.VideoMode.height.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1575
 * 
 *         def __set__(self, unsigned value):
 *             self.p_this.Height = value             # <<<<<<<<<<<<<<
 * 
 *     property bits_per_pixel:
 */
  ((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this->Height = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1578
 * 
 *     property bits_per_pixel:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.BitsPerPixel
 * 
 */

static PyObject *__pyx_pf_2sf_9VideoMode_14bits_per_pixel___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_9VideoMode_14bits_per_pixel___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1579
 *     property bits_per_pixel:
 *         def __get__(self):
 *             return self.p_this.BitsPerPixel             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this->BitsPerPixel); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.VideoMode.bits_per_pixel.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1581
 *             return self.p_this.BitsPerPixel
 * 
 *         def __set__(self, unsigned int value):             # <<<<<<<<<<<<<<
 *             self.p_this.BitsPerPixel = value
 * 
 */

static int __pyx_pf_2sf_9VideoMode_14bits_per_pixel_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_9VideoMode_14bits_per_pixel_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1581; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.VideoMode.bits_per_pixel.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1582
 * 
 *         def __set__(self, unsigned int value):
 *             self.p_this.BitsPerPixel = value             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  ((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this->BitsPerPixel = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1585
 * 
 *     @classmethod
 *     def get_desktop_mode(cls):             # <<<<<<<<<<<<<<
 *         cdef decl.VideoMode *p = new decl.VideoMode()
 *         p[0] = decl.GetDesktopMode()
 */

static PyObject *__pyx_pf_2sf_9VideoMode_5get_desktop_mode(PyObject *__pyx_v_cls, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_9VideoMode_5get_desktop_mode(PyObject *__pyx_v_cls, CYTHON_UNUSED PyObject *unused) {
  sf::VideoMode *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_desktop_mode");

  /* "sf.pyx":1586
 *     @classmethod
 *     def get_desktop_mode(cls):
 *         cdef decl.VideoMode *p = new decl.VideoMode()             # <<<<<<<<<<<<<<
 *         p[0] = decl.GetDesktopMode()
 * 
 */
  __pyx_v_p = new sf::VideoMode();

  /* "sf.pyx":1587
 *     def get_desktop_mode(cls):
 *         cdef decl.VideoMode *p = new decl.VideoMode()
 *         p[0] = decl.GetDesktopMode()             # <<<<<<<<<<<<<<
 * 
 *         return wrap_video_mode_instance(p, True)
 */
  (__pyx_v_p[0]) = sf::VideoMode::GetDesktopMode();

  /* "sf.pyx":1589
 *         p[0] = decl.GetDesktopMode()
 * 
 *         return wrap_video_mode_instance(p, True)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_video_mode_instance(__pyx_v_p, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.VideoMode.get_desktop_mode");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1592
 * 
 *     @classmethod
 *     def get_fullscreen_modes(cls):             # <<<<<<<<<<<<<<
 *         cdef list ret = []
 *         cdef vector[decl.VideoMode] v = decl.GetFullscreenModes()
 */

static PyObject *__pyx_pf_2sf_9VideoMode_6get_fullscreen_modes(PyObject *__pyx_v_cls, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_9VideoMode_6get_fullscreen_modes(PyObject *__pyx_v_cls, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_ret = 0;
  std::vector<sf::VideoMode> __pyx_v_v;
  std::vector<sf::VideoMode>::iterator __pyx_v_it;
  sf::VideoMode __pyx_v_current;
  sf::VideoMode *__pyx_v_p_temp;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("get_fullscreen_modes");

  /* "sf.pyx":1593
 *     @classmethod
 *     def get_fullscreen_modes(cls):
 *         cdef list ret = []             # <<<<<<<<<<<<<<
 *         cdef vector[decl.VideoMode] v = decl.GetFullscreenModes()
 *         cdef vector[decl.VideoMode].iterator it = v.begin()
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_v_ret = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "sf.pyx":1594
 *     def get_fullscreen_modes(cls):
 *         cdef list ret = []
 *         cdef vector[decl.VideoMode] v = decl.GetFullscreenModes()             # <<<<<<<<<<<<<<
 *         cdef vector[decl.VideoMode].iterator it = v.begin()
 *         cdef decl.VideoMode current
 */
  __pyx_v_v = sf::VideoMode::GetFullscreenModes();

  /* "sf.pyx":1595
 *         cdef list ret = []
 *         cdef vector[decl.VideoMode] v = decl.GetFullscreenModes()
 *         cdef vector[decl.VideoMode].iterator it = v.begin()             # <<<<<<<<<<<<<<
 *         cdef decl.VideoMode current
 *         cdef decl.VideoMode *p_temp
 */
  __pyx_v_it = __pyx_v_v.begin();

  /* "sf.pyx":1599
 *         cdef decl.VideoMode *p_temp
 * 
 *         while it != v.end():             # <<<<<<<<<<<<<<
 *             current = deref(it)
 *             p_temp = new decl.VideoMode(current.Width, current.Height,
 */
  while (1) {
    __pyx_t_2 = (__pyx_v_it != __pyx_v_v.end());
    if (!__pyx_t_2) break;

    /* "sf.pyx":1600
 * 
 *         while it != v.end():
 *             current = deref(it)             # <<<<<<<<<<<<<<
 *             p_temp = new decl.VideoMode(current.Width, current.Height,
 *                                         current.BitsPerPixel)
 */
    __pyx_v_current = (*__pyx_v_it);

    /* "sf.pyx":1602
 *             current = deref(it)
 *             p_temp = new decl.VideoMode(current.Width, current.Height,
 *                                         current.BitsPerPixel)             # <<<<<<<<<<<<<<
 *             ret.append(wrap_video_mode_instance(p_temp, True))
 *             preinc(it)
 */
    __pyx_v_p_temp = new sf::VideoMode(__pyx_v_current.Width, __pyx_v_current.Height, __pyx_v_current.BitsPerPixel);

    /* "sf.pyx":1603
 *             p_temp = new decl.VideoMode(current.Width, current.Height,
 *                                         current.BitsPerPixel)
 *             ret.append(wrap_video_mode_instance(p_temp, True))             # <<<<<<<<<<<<<<
 *             preinc(it)
 * 
 */
    if (unlikely(__pyx_v_ret == Py_None)) {
      PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
    }
    __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_video_mode_instance(__pyx_v_p_temp, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyList_Append(__pyx_v_ret, __pyx_t_1); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "sf.pyx":1604
 *                                         current.BitsPerPixel)
 *             ret.append(wrap_video_mode_instance(p_temp, True))
 *             preinc(it)             # <<<<<<<<<<<<<<
 * 
 *         return ret
 */
    (++__pyx_v_it);
  }

  /* "sf.pyx":1606
 *             preinc(it)
 * 
 *         return ret             # <<<<<<<<<<<<<<
 * 
 *     def is_valid(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.VideoMode.get_fullscreen_modes");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1608
 *         return ret
 * 
 *     def is_valid(self):             # <<<<<<<<<<<<<<
 *         return self.p_this.IsValid()
 * 
 */

static PyObject *__pyx_pf_2sf_9VideoMode_7is_valid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_9VideoMode_7is_valid(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("is_valid");

  /* "sf.pyx":1609
 * 
 *     def is_valid(self):
 *         return self.p_this.IsValid()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_VideoMode *)__pyx_v_self)->p_this->IsValid()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.VideoMode.is_valid");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1612
 * 
 * 
 * cdef VideoMode wrap_video_mode_instance(decl.VideoMode *p_cpp_instance,             # <<<<<<<<<<<<<<
 *                                         bint delete_this):
 *     cdef VideoMode ret = VideoMode.__new__(VideoMode)
 */

static  struct __pyx_obj_2sf_VideoMode *__pyx_f_2sf_wrap_video_mode_instance(sf::VideoMode *__pyx_v_p_cpp_instance, int __pyx_v_delete_this) {
  struct __pyx_obj_2sf_VideoMode *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_VideoMode *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_video_mode_instance");

  /* "sf.pyx":1614
 * cdef VideoMode wrap_video_mode_instance(decl.VideoMode *p_cpp_instance,
 *                                         bint delete_this):
 *     cdef VideoMode ret = VideoMode.__new__(VideoMode)             # <<<<<<<<<<<<<<
 *     ret.p_this = p_cpp_instance
 *     ret.delete_this = delete_this
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_VideoMode)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_VideoMode)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_VideoMode *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":1615
 *                                         bint delete_this):
 *     cdef VideoMode ret = VideoMode.__new__(VideoMode)
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 *     ret.delete_this = delete_this
 * 
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":1616
 *     cdef VideoMode ret = VideoMode.__new__(VideoMode)
 *     ret.p_this = p_cpp_instance
 *     ret.delete_this = delete_this             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->delete_this = __pyx_v_delete_this;

  /* "sf.pyx":1618
 *     ret.delete_this = delete_this
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_VideoMode *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_video_mode_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1627
 *     cdef decl.View *p_this
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.View()
 * 
 */

static int __pyx_pf_2sf_4View___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_4View___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "sf.pyx":1628
 * 
 *     def __cinit__(self):
 *         self.p_this = new decl.View()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this = new sf::View();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1630
 *         self.p_this = new decl.View()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_4View_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_4View_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":1631
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     property center:
 */
  delete ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":1634
 * 
 *     property center:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f center = self.p_this.GetCenter()
 * 
 */

static PyObject *__pyx_pf_2sf_4View_6center___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4View_6center___get__(PyObject *__pyx_v_self) {
  sf::Vector2f __pyx_v_center;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1635
 *     property center:
 *         def __get__(self):
 *             cdef decl.Vector2f center = self.p_this.GetCenter()             # <<<<<<<<<<<<<<
 * 
 *             return (center.x, center.y)
 */
  __pyx_v_center = ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->GetCenter();

  /* "sf.pyx":1637
 *             cdef decl.Vector2f center = self.p_this.GetCenter()
 * 
 *             return (center.x, center.y)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, tuple value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_center.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_center.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.View.center.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1639
 *             return (center.x, center.y)
 * 
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             cdef float x
 *             cdef float y
 */

static int __pyx_pf_2sf_4View_6center_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_4View_6center_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  float __pyx_v_x;
  float __pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1643
 *             cdef float y
 * 
 *             x, y = value             # <<<<<<<<<<<<<<
 *             self.p_this.SetCenter(x, y)
 * 
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_x = __pyx_t_3;
    __pyx_v_y = __pyx_t_4;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1644
 * 
 *             x, y = value
 *             self.p_this.SetCenter(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property height:
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->SetCenter(__pyx_v_x, __pyx_v_y);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.View.center.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1647
 * 
 *     property height:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.size[1]
 * 
 */

static PyObject *__pyx_pf_2sf_4View_6height___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4View_6height___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1648
 *     property height:
 *         def __get__(self):
 *             return self.size[1]             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.View.height.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1650
 *             return self.size[1]
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.size = (self.width, value)
 * 
 */

static int __pyx_pf_2sf_4View_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_4View_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1650; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.View.height.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1651
 * 
 *         def __set__(self, float value):
 *             self.size = (self.width, value)             # <<<<<<<<<<<<<<
 * 
 *     property rotation:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__size, ((PyObject *)__pyx_t_3)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.View.height.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1654
 * 
 *     property rotation:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetRotation()
 * 
 */

static PyObject *__pyx_pf_2sf_4View_8rotation___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4View_8rotation___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1655
 *     property rotation:
 *         def __get__(self):
 *             return self.p_this.GetRotation()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->GetRotation()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.View.rotation.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1657
 *             return self.p_this.GetRotation()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetRotation(value)
 * 
 */

static int __pyx_pf_2sf_4View_8rotation_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_4View_8rotation_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1657; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.View.rotation.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1658
 * 
 *         def __set__(self, float value):
 *             self.p_this.SetRotation(value)             # <<<<<<<<<<<<<<
 * 
 *     property size:
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->SetRotation(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1661
 * 
 *     property size:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f size = self.p_this.GetSize()
 * 
 */

static PyObject *__pyx_pf_2sf_4View_4size___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4View_4size___get__(PyObject *__pyx_v_self) {
  sf::Vector2f __pyx_v_size;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1662
 *     property size:
 *         def __get__(self):
 *             cdef decl.Vector2f size = self.p_this.GetSize()             # <<<<<<<<<<<<<<
 * 
 *             return (size.x, size.y)
 */
  __pyx_v_size = ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->GetSize();

  /* "sf.pyx":1664
 *             cdef decl.Vector2f size = self.p_this.GetSize()
 * 
 *             return (size.x, size.y)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, tuple value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_size.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_size.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.View.size.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1666
 *             return (size.x, size.y)
 * 
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             cdef float x
 *             cdef float y
 */

static int __pyx_pf_2sf_4View_4size_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_4View_4size_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  float __pyx_v_x;
  float __pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1670
 *             cdef float y
 * 
 *             x, y = value             # <<<<<<<<<<<<<<
 *             self.p_this.SetSize(x, y)
 * 
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_x = __pyx_t_3;
    __pyx_v_y = __pyx_t_4;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1671
 * 
 *             x, y = value
 *             self.p_this.SetSize(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property viewport:
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->SetSize(__pyx_v_x, __pyx_v_y);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.View.size.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1674
 * 
 *     property viewport:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.FloatRect *p = new decl.FloatRect()
 * 
 */

static PyObject *__pyx_pf_2sf_4View_8viewport___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4View_8viewport___get__(PyObject *__pyx_v_self) {
  sf::FloatRect *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1675
 *     property viewport:
 *         def __get__(self):
 *             cdef decl.FloatRect *p = new decl.FloatRect()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = self.p_this.GetViewport()
 */
  __pyx_v_p = new sf::FloatRect();

  /* "sf.pyx":1677
 *             cdef decl.FloatRect *p = new decl.FloatRect()
 * 
 *             p[0] = self.p_this.GetViewport()             # <<<<<<<<<<<<<<
 * 
 *             return wrap_float_rect_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->GetViewport();

  /* "sf.pyx":1679
 *             p[0] = self.p_this.GetViewport()
 * 
 *             return wrap_float_rect_instance(p)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, FloatRect value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_float_rect_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.View.viewport.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1681
 *             return wrap_float_rect_instance(p)
 * 
 *         def __set__(self, FloatRect value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetViewport(value.p_this[0])
 * 
 */

static int __pyx_pf_2sf_4View_8viewport_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_4View_8viewport_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_2sf_FloatRect, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1682
 * 
 *         def __set__(self, FloatRect value):
 *             self.p_this.SetViewport(value.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property width:
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->SetViewport((((struct __pyx_obj_2sf_FloatRect *)__pyx_v_value)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.View.viewport.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1685
 * 
 *     property width:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.size[0]
 * 
 */

static PyObject *__pyx_pf_2sf_4View_5width___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_4View_5width___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1686
 *     property width:
 *         def __get__(self):
 *             return self.size[0]             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.View.width.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1688
 *             return self.size[0]
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             self.size = (value, self.height)
 * 
 */

static int __pyx_pf_2sf_4View_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_4View_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1688; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.View.width.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1689
 * 
 *         def __set__(self, float value):
 *             self.size = (value, self.height)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__height); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__size, ((PyObject *)__pyx_t_3)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.View.width.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1692
 * 
 *     @classmethod
 *     def from_center_and_size(cls, tuple center, tuple size):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f cpp_center
 *         cdef decl.Vector2f cpp_size
 */

static PyObject *__pyx_pf_2sf_4View_2from_center_and_size(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_4View_2from_center_and_size(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_center = 0;
  PyObject *__pyx_v_size = 0;
  sf::Vector2f __pyx_v_cpp_center;
  sf::Vector2f __pyx_v_cpp_size;
  sf::View *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__center,&__pyx_n_s__size,0};
  __Pyx_RefNannySetupContext("from_center_and_size");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__center);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__size);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("from_center_and_size", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1692; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "from_center_and_size") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1692; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_center = ((PyObject*)values[0]);
    __pyx_v_size = ((PyObject*)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_center = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_size = ((PyObject*)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_center_and_size", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1692; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.View.from_center_and_size");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_center), (&PyTuple_Type), 1, "center", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_size), (&PyTuple_Type), 1, "size", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1697
 *         cdef decl.View *p
 * 
 *         cpp_center.x, cpp_center.y = center             # <<<<<<<<<<<<<<
 *         cpp_size.x, cpp_size.y = size
 *         p = new decl.View(cpp_center, cpp_size)
 */
  if (likely(((PyObject *)__pyx_v_center) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_center)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_center);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cpp_center.x = __pyx_t_3;
    __pyx_v_cpp_center.y = __pyx_t_4;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_center), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1698
 * 
 *         cpp_center.x, cpp_center.y = center
 *         cpp_size.x, cpp_size.y = size             # <<<<<<<<<<<<<<
 *         p = new decl.View(cpp_center, cpp_size)
 * 
 */
  if (likely(((PyObject *)__pyx_v_size) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_size)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_size);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_cpp_size.x = __pyx_t_4;
    __pyx_v_cpp_size.y = __pyx_t_3;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_size), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1699
 *         cpp_center.x, cpp_center.y = center
 *         cpp_size.x, cpp_size.y = size
 *         p = new decl.View(cpp_center, cpp_size)             # <<<<<<<<<<<<<<
 * 
 *         return wrap_view_instance(p)
 */
  __pyx_v_p = new sf::View(__pyx_v_cpp_center, __pyx_v_cpp_size);

  /* "sf.pyx":1701
 *         p = new decl.View(cpp_center, cpp_size)
 * 
 *         return wrap_view_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_view_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.View.from_center_and_size");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1704
 * 
 *     @classmethod
 *     def from_rect(cls, FloatRect rect):             # <<<<<<<<<<<<<<
 *         cdef decl.View *p = new decl.View(rect.p_this[0])
 * 
 */

static PyObject *__pyx_pf_2sf_4View_3from_rect(PyObject *__pyx_v_cls, PyObject *__pyx_v_rect); /*proto*/
static PyObject *__pyx_pf_2sf_4View_3from_rect(PyObject *__pyx_v_cls, PyObject *__pyx_v_rect) {
  sf::View *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("from_rect");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_ptype_2sf_FloatRect, 1, "rect", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1705
 *     @classmethod
 *     def from_rect(cls, FloatRect rect):
 *         cdef decl.View *p = new decl.View(rect.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *         return wrap_view_instance(p)
 */
  __pyx_v_p = new sf::View((((struct __pyx_obj_2sf_FloatRect *)__pyx_v_rect)->p_this[0]));

  /* "sf.pyx":1707
 *         cdef decl.View *p = new decl.View(rect.p_this[0])
 * 
 *         return wrap_view_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     def move(self, float x, float y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_view_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.View.from_rect");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1709
 *         return wrap_view_instance(p)
 * 
 *     def move(self, float x, float y):             # <<<<<<<<<<<<<<
 *         self.p_this.Move(x, y)
 * 
 */

static PyObject *__pyx_pf_2sf_4View_4move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_4View_4move(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,0};
  __Pyx_RefNannySetupContext("move");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "move") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.View.move");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1710
 * 
 *     def move(self, float x, float y):
 *         self.p_this.Move(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def reset(self, FloatRect rect):
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->Move(__pyx_v_x, __pyx_v_y);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1712
 *         self.p_this.Move(x, y)
 * 
 *     def reset(self, FloatRect rect):             # <<<<<<<<<<<<<<
 *         self.p_this.Reset(rect.p_this[0])
 * 
 */

static PyObject *__pyx_pf_2sf_4View_5reset(PyObject *__pyx_v_self, PyObject *__pyx_v_rect); /*proto*/
static PyObject *__pyx_pf_2sf_4View_5reset(PyObject *__pyx_v_self, PyObject *__pyx_v_rect) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("reset");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_ptype_2sf_FloatRect, 1, "rect", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1713
 * 
 *     def reset(self, FloatRect rect):
 *         self.p_this.Reset(rect.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def rotate(self, float angle):
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->Reset((((struct __pyx_obj_2sf_FloatRect *)__pyx_v_rect)->p_this[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.View.reset");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1715
 *         self.p_this.Reset(rect.p_this[0])
 * 
 *     def rotate(self, float angle):             # <<<<<<<<<<<<<<
 *         self.p_this.Rotate(angle)
 * 
 */

static PyObject *__pyx_pf_2sf_4View_6rotate(PyObject *__pyx_v_self, PyObject *__pyx_arg_angle); /*proto*/
static PyObject *__pyx_pf_2sf_4View_6rotate(PyObject *__pyx_v_self, PyObject *__pyx_arg_angle) {
  float __pyx_v_angle;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("rotate");
  assert(__pyx_arg_angle); {
    __pyx_v_angle = __pyx_PyFloat_AsDouble(__pyx_arg_angle); if (unlikely((__pyx_v_angle == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1715; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.View.rotate");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1716
 * 
 *     def rotate(self, float angle):
 *         self.p_this.Rotate(angle)             # <<<<<<<<<<<<<<
 * 
 *     def zoom(self, float factor):
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->Rotate(__pyx_v_angle);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1718
 *         self.p_this.Rotate(angle)
 * 
 *     def zoom(self, float factor):             # <<<<<<<<<<<<<<
 *         self.p_this.Zoom(factor)
 * 
 */

static PyObject *__pyx_pf_2sf_4View_7zoom(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor); /*proto*/
static PyObject *__pyx_pf_2sf_4View_7zoom(PyObject *__pyx_v_self, PyObject *__pyx_arg_factor) {
  float __pyx_v_factor;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("zoom");
  assert(__pyx_arg_factor); {
    __pyx_v_factor = __pyx_PyFloat_AsDouble(__pyx_arg_factor); if (unlikely((__pyx_v_factor == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.View.zoom");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1719
 * 
 *     def zoom(self, float factor):
 *         self.p_this.Zoom(factor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_View *)__pyx_v_self)->p_this->Zoom(__pyx_v_factor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1722
 * 
 * 
 * cdef View wrap_view_instance(decl.View *p_cpp_view):             # <<<<<<<<<<<<<<
 *     cdef View ret = View.__new__(View)
 * 
 */

static  struct __pyx_obj_2sf_View *__pyx_f_2sf_wrap_view_instance(sf::View *__pyx_v_p_cpp_view) {
  struct __pyx_obj_2sf_View *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_View *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_view_instance");

  /* "sf.pyx":1723
 * 
 * cdef View wrap_view_instance(decl.View *p_cpp_view):
 *     cdef View ret = View.__new__(View)             # <<<<<<<<<<<<<<
 * 
 *     ret.p_this = p_cpp_view
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_View)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_View)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_View *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":1725
 *     cdef View ret = View.__new__(View)
 * 
 *     ret.p_this = p_cpp_view             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_view;

  /* "sf.pyx":1727
 *     ret.p_this = p_cpp_view
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_View *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_view_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1738
 *     IS_AVAILABLE = decl.IsAvailable()
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.Shader()
 * 
 */

static int __pyx_pf_2sf_6Shader___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_6Shader___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;

  /* "sf.pyx":1739
 * 
 *     def __init__(self):
 *         self.p_this = new decl.Shader()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this = new sf::Shader();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1741
 *         self.p_this = new decl.Shader()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_6Shader_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_6Shader_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":1742
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  delete ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":1745
 * 
 *     @classmethod
 *     def load_from_file(cls, char *filename):             # <<<<<<<<<<<<<<
 *         cdef decl.Shader *p = new decl.Shader()
 * 
 */

static PyObject *__pyx_pf_2sf_6Shader_2load_from_file(PyObject *__pyx_v_cls, PyObject *__pyx_arg_filename); /*proto*/
static PyObject *__pyx_pf_2sf_6Shader_2load_from_file(PyObject *__pyx_v_cls, PyObject *__pyx_arg_filename) {
  char *__pyx_v_filename;
  sf::Shader *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("load_from_file");
  assert(__pyx_arg_filename); {
    __pyx_v_filename = PyBytes_AsString(__pyx_arg_filename); if (unlikely((!__pyx_v_filename) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1745; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shader.load_from_file");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1746
 *     @classmethod
 *     def load_from_file(cls, char *filename):
 *         cdef decl.Shader *p = new decl.Shader()             # <<<<<<<<<<<<<<
 * 
 *         if p.LoadFromFile(filename):
 */
  __pyx_v_p = new sf::Shader();

  /* "sf.pyx":1748
 *         cdef decl.Shader *p = new decl.Shader()
 * 
 *         if p.LoadFromFile(filename):             # <<<<<<<<<<<<<<
 *             return wrap_shader_instance(p)
 *         else:
 */
  __pyx_t_1 = __pyx_v_p->LoadFromFile(__pyx_v_filename);
  if (__pyx_t_1) {

    /* "sf.pyx":1749
 * 
 *         if p.LoadFromFile(filename):
 *             return wrap_shader_instance(p)             # <<<<<<<<<<<<<<
 *         else:
 *             raise PySFMLException("Couldn't load shader from file " + filename)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_shader_instance(__pyx_v_p)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "sf.pyx":1751
 *             return wrap_shader_instance(p)
 *         else:
 *             raise PySFMLException("Couldn't load shader from file " + filename)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyBytes_FromString(__pyx_v_filename); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_52), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L5:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.Shader.load_from_file");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1754
 * 
 *     @classmethod
 *     def load_from_memory(cls, char* shader):             # <<<<<<<<<<<<<<
 *         cdef decl.Shader *p = new decl.Shader()
 * 
 */

static PyObject *__pyx_pf_2sf_6Shader_3load_from_memory(PyObject *__pyx_v_cls, PyObject *__pyx_arg_shader); /*proto*/
static PyObject *__pyx_pf_2sf_6Shader_3load_from_memory(PyObject *__pyx_v_cls, PyObject *__pyx_arg_shader) {
  char *__pyx_v_shader;
  sf::Shader *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("load_from_memory");
  assert(__pyx_arg_shader); {
    __pyx_v_shader = PyBytes_AsString(__pyx_arg_shader); if (unlikely((!__pyx_v_shader) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1754; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shader.load_from_memory");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1755
 *     @classmethod
 *     def load_from_memory(cls, char* shader):
 *         cdef decl.Shader *p = new decl.Shader()             # <<<<<<<<<<<<<<
 * 
 *         if p.LoadFromMemory(shader):
 */
  __pyx_v_p = new sf::Shader();

  /* "sf.pyx":1757
 *         cdef decl.Shader *p = new decl.Shader()
 * 
 *         if p.LoadFromMemory(shader):             # <<<<<<<<<<<<<<
 *             return wrap_shader_instance(p)
 *         else:
 */
  __pyx_t_1 = __pyx_v_p->LoadFromMemory(__pyx_v_shader);
  if (__pyx_t_1) {

    /* "sf.pyx":1758
 * 
 *         if p.LoadFromMemory(shader):
 *             return wrap_shader_instance(p)             # <<<<<<<<<<<<<<
 *         else:
 *             raise PySFMLException("Couldn't load shader from memory")
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_shader_instance(__pyx_v_p)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "sf.pyx":1760
 *             return wrap_shader_instance(p)
 *         else:
 *             raise PySFMLException("Couldn't load shader from memory")             # <<<<<<<<<<<<<<
 * 
 *     def bind(self):
 */
    __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_54), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L5:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.Shader.load_from_memory");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1762
 *             raise PySFMLException("Couldn't load shader from memory")
 * 
 *     def bind(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Bind()
 * 
 */

static PyObject *__pyx_pf_2sf_6Shader_4bind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_6Shader_4bind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("bind");

  /* "sf.pyx":1763
 * 
 *     def bind(self):
 *         self.p_this.Bind()             # <<<<<<<<<<<<<<
 * 
 *     def set_parameter(self, char *name, float x, y=None, z=None, w=None):
 */
  ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this->Bind();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1765
 *         self.p_this.Bind()
 * 
 *     def set_parameter(self, char *name, float x, y=None, z=None, w=None):             # <<<<<<<<<<<<<<
 *         if y is None:
 *             self.p_this.SetParameter(name, x)
 */

static PyObject *__pyx_pf_2sf_6Shader_5set_parameter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_6Shader_5set_parameter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_name;
  float __pyx_v_x;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_v_w = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  float __pyx_t_2;
  float __pyx_t_3;
  float __pyx_t_4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__name,&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__z,&__pyx_n_s__w,0};
  __Pyx_RefNannySetupContext("set_parameter");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_parameter", 0, 2, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
        if (value) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z);
        if (value) { values[3] = value; kw_args--; }
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__w);
        if (value) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_parameter") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_name = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = values[2];
    __pyx_v_z = values[3];
    __pyx_v_w = values[4];
  } else {
    __pyx_v_y = ((PyObject *)Py_None);
    __pyx_v_z = ((PyObject *)Py_None);
    __pyx_v_w = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5:
      __pyx_v_w = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4:
      __pyx_v_z = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3:
      __pyx_v_y = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2:
      __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_parameter", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shader.set_parameter");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1766
 * 
 *     def set_parameter(self, char *name, float x, y=None, z=None, w=None):
 *         if y is None:             # <<<<<<<<<<<<<<
 *             self.p_this.SetParameter(name, x)
 *         elif z is None:
 */
  __pyx_t_1 = (__pyx_v_y == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1767
 *     def set_parameter(self, char *name, float x, y=None, z=None, w=None):
 *         if y is None:
 *             self.p_this.SetParameter(name, x)             # <<<<<<<<<<<<<<
 *         elif z is None:
 *             self.p_this.SetParameter(name, x, y)
 */
    ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this->SetParameter(__pyx_v_name, __pyx_v_x);
    goto __pyx_L6;
  }

  /* "sf.pyx":1768
 *         if y is None:
 *             self.p_this.SetParameter(name, x)
 *         elif z is None:             # <<<<<<<<<<<<<<
 *             self.p_this.SetParameter(name, x, y)
 *         elif w is None:
 */
  __pyx_t_1 = (__pyx_v_z == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1769
 *             self.p_this.SetParameter(name, x)
 *         elif z is None:
 *             self.p_this.SetParameter(name, x, y)             # <<<<<<<<<<<<<<
 *         elif w is None:
 *             self.p_this.SetParameter(name, x, y, z)
 */
    __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this->SetParameter(__pyx_v_name, __pyx_v_x, __pyx_t_2);
    goto __pyx_L6;
  }

  /* "sf.pyx":1770
 *         elif z is None:
 *             self.p_this.SetParameter(name, x, y)
 *         elif w is None:             # <<<<<<<<<<<<<<
 *             self.p_this.SetParameter(name, x, y, z)
 *         else:
 */
  __pyx_t_1 = (__pyx_v_w == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1771
 *             self.p_this.SetParameter(name, x, y)
 *         elif w is None:
 *             self.p_this.SetParameter(name, x, y, z)             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this.SetParameter(name, x, y, z, w)
 */
    __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this->SetParameter(__pyx_v_name, __pyx_v_x, __pyx_t_2, __pyx_t_3);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1773
 *             self.p_this.SetParameter(name, x, y, z)
 *         else:
 *             self.p_this.SetParameter(name, x, y, z, w)             # <<<<<<<<<<<<<<
 * 
 *     def set_texture(self, char *name, Image image=None):
 */
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this->SetParameter(__pyx_v_name, __pyx_v_x, __pyx_t_3, __pyx_t_2, __pyx_t_4);
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Shader.set_parameter");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1775
 *             self.p_this.SetParameter(name, x, y, z, w)
 * 
 *     def set_texture(self, char *name, Image image=None):             # <<<<<<<<<<<<<<
 *         if image is None:
 *             self.p_this.SetTexture(name, decl.CurrentTexture)
 */

static PyObject *__pyx_pf_2sf_6Shader_6set_texture(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_6Shader_6set_texture(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_name;
  struct __pyx_obj_2sf_Image *__pyx_v_image = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__name,&__pyx_n_s__image,0};
  __Pyx_RefNannySetupContext("set_texture");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((struct __pyx_obj_2sf_Image *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__name);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__image);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_texture") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_name = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_image = ((struct __pyx_obj_2sf_Image *)values[1]);
  } else {
    __pyx_v_image = ((struct __pyx_obj_2sf_Image *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_image = ((struct __pyx_obj_2sf_Image *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_name = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_name) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_texture", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shader.set_texture");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_image), __pyx_ptype_2sf_Image, 1, "image", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1776
 * 
 *     def set_texture(self, char *name, Image image=None):
 *         if image is None:             # <<<<<<<<<<<<<<
 *             self.p_this.SetTexture(name, decl.CurrentTexture)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_image) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1777
 *     def set_texture(self, char *name, Image image=None):
 *         if image is None:
 *             self.p_this.SetTexture(name, decl.CurrentTexture)             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this.SetTexture(name, image.p_this[0])
 */
    ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this->SetTexture(__pyx_v_name, sf::Shader::CurrentTexture);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1779
 *             self.p_this.SetTexture(name, decl.CurrentTexture)
 *         else:
 *             self.p_this.SetTexture(name, image.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def unbind(self):
 */
    ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this->SetTexture(__pyx_v_name, (__pyx_v_image->p_this[0]));
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Shader.set_texture");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1781
 *             self.p_this.SetTexture(name, image.p_this[0])
 * 
 *     def unbind(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Unbind()
 * 
 */

static PyObject *__pyx_pf_2sf_6Shader_7unbind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_6Shader_7unbind(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("unbind");

  /* "sf.pyx":1782
 * 
 *     def unbind(self):
 *         self.p_this.Unbind()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_Shader *)__pyx_v_self)->p_this->Unbind();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1785
 * 
 * 
 * cdef Shader wrap_shader_instance(decl.Shader *p_cpp_instance):             # <<<<<<<<<<<<<<
 *     cdef Shader ret = Shader.__new__(Shader)
 * 
 */

static  struct __pyx_obj_2sf_Shader *__pyx_f_2sf_wrap_shader_instance(sf::Shader *__pyx_v_p_cpp_instance) {
  struct __pyx_obj_2sf_Shader *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_Shader *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_shader_instance");

  /* "sf.pyx":1786
 * 
 * cdef Shader wrap_shader_instance(decl.Shader *p_cpp_instance):
 *     cdef Shader ret = Shader.__new__(Shader)             # <<<<<<<<<<<<<<
 * 
 *     ret.p_this = p_cpp_instance
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_Shader)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Shader)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_Shader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":1788
 *     cdef Shader ret = Shader.__new__(Shader)
 * 
 *     ret.p_this = p_cpp_instance             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->p_this = __pyx_v_p_cpp_instance;

  /* "sf.pyx":1790
 *     ret.p_this = p_cpp_instance
 * 
 *     return ret             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_Shader *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_shader_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1800
 *     cdef Input input
 * 
 *     def __cinit__(self, VideoMode mode, char* title, style=None):             # <<<<<<<<<<<<<<
 *         self.input = Input.__new__(Input)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_12RenderWindow___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_VideoMode *__pyx_v_mode = 0;
  char *__pyx_v_title;
  PyObject *__pyx_v_style = 0;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__mode,&__pyx_n_s__title,&__pyx_n_s__style,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mode);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__title);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__style);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_mode = ((struct __pyx_obj_2sf_VideoMode *)values[0]);
    __pyx_v_title = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_style = values[2];
  } else {
    __pyx_v_style = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_style = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2:
      __pyx_v_title = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((!__pyx_v_title) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_mode = ((struct __pyx_obj_2sf_VideoMode *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_mode), __pyx_ptype_2sf_VideoMode, 1, "mode", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1801
 * 
 *     def __cinit__(self, VideoMode mode, char* title, style=None):
 *         self.input = Input.__new__(Input)             # <<<<<<<<<<<<<<
 * 
 *         if style is None:
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_Input)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Input)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->input);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->input));
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->input = ((struct __pyx_obj_2sf_Input *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":1803
 *         self.input = Input.__new__(Input)
 * 
 *         if style is None:             # <<<<<<<<<<<<<<
 *             self.p_this = new decl.RenderWindow(mode.p_this[0], title)
 *         else:
 */
  __pyx_t_2 = (__pyx_v_style == Py_None);
  if (__pyx_t_2) {

    /* "sf.pyx":1804
 * 
 *         if style is None:
 *             self.p_this = new decl.RenderWindow(mode.p_this[0], title)             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this = new decl.RenderWindow(mode.p_this[0], title,
 */
    ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this = new sf::RenderWindow((__pyx_v_mode->p_this[0]), __pyx_v_title);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1807
 *         else:
 *             self.p_this = new decl.RenderWindow(mode.p_this[0], title,
 *                                                 <int?>style)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_style); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "sf.pyx":1806
 *             self.p_this = new decl.RenderWindow(mode.p_this[0], title)
 *         else:
 *             self.p_this = new decl.RenderWindow(mode.p_this[0], title,             # <<<<<<<<<<<<<<
 *                                                 <int?>style)
 * 
 */
    ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this = new sf::RenderWindow((__pyx_v_mode->p_this[0]), __pyx_v_title, __pyx_t_3);
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1809
 *                                                 <int?>style)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_12RenderWindow_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_12RenderWindow_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":1810
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __iter__(self):
 */
  delete ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":1812
 *         del self.p_this
 * 
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         return self
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_2__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_2__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__iter__");

  /* "sf.pyx":1813
 * 
 *     def __iter__(self):
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def __next__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self);
  __pyx_r = __pyx_v_self;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1815
 *         return self
 * 
 *     def __next__(self):             # <<<<<<<<<<<<<<
 *         cdef decl.Event *p = new decl.Event()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_3__next__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_3__next__(PyObject *__pyx_v_self) {
  sf::Event *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__next__");

  /* "sf.pyx":1816
 * 
 *     def __next__(self):
 *         cdef decl.Event *p = new decl.Event()             # <<<<<<<<<<<<<<
 * 
 *         if self.p_this.GetEvent(p[0]):
 */
  __pyx_v_p = new sf::Event();

  /* "sf.pyx":1818
 *         cdef decl.Event *p = new decl.Event()
 * 
 *         if self.p_this.GetEvent(p[0]):             # <<<<<<<<<<<<<<
 *             return wrap_event_instance(p)
 * 
 */
  __pyx_t_1 = ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->GetEvent((__pyx_v_p[0]));
  if (__pyx_t_1) {

    /* "sf.pyx":1819
 * 
 *         if self.p_this.GetEvent(p[0]):
 *             return wrap_event_instance(p)             # <<<<<<<<<<<<<<
 * 
 *         raise StopIteration
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_f_2sf_wrap_event_instance(__pyx_v_p); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "sf.pyx":1821
 *             return wrap_event_instance(p)
 * 
 *         raise StopIteration             # <<<<<<<<<<<<<<
 * 
 *     property active:
 */
  __Pyx_Raise(__pyx_builtin_StopIteration, 0, 0);
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.RenderWindow.__next__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1824
 * 
 *     property active:
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetActive(value)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_6active___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_6active___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1824; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.active.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1825
 *     property active:
 *         def __set__(self, bint value):
 *             self.p_this.SetActive(value)             # <<<<<<<<<<<<<<
 * 
 *     property cursor_position:
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetActive(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1828
 * 
 *     property cursor_position:
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             x, y = value
 *             self.p_this.SetCursorPosition(x, y)
 */

static int __pyx_pf_2sf_12RenderWindow_15cursor_position___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_15cursor_position___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  unsigned int __pyx_t_3;
  unsigned int __pyx_t_4;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1829
 *     property cursor_position:
 *         def __set__(self, tuple value):
 *             x, y = value             # <<<<<<<<<<<<<<
 *             self.p_this.SetCursorPosition(x, y)
 * 
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1830
 *         def __set__(self, tuple value):
 *             x, y = value
 *             self.p_this.SetCursorPosition(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property default_view:
 */
  __pyx_t_3 = __Pyx_PyInt_AsUnsignedInt(__pyx_v_x); if (unlikely((__pyx_t_3 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyInt_AsUnsignedInt(__pyx_v_y); if (unlikely((__pyx_t_4 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetCursorPosition(__pyx_t_3, __pyx_t_4);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.RenderWindow.cursor_position.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1833
 * 
 *     property default_view:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.View *p = new decl.View()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_12default_view___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_12default_view___get__(PyObject *__pyx_v_self) {
  sf::View *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1834
 *     property default_view:
 *         def __get__(self):
 *             cdef decl.View *p = new decl.View()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = self.p_this.GetDefaultView()
 */
  __pyx_v_p = new sf::View();

  /* "sf.pyx":1836
 *             cdef decl.View *p = new decl.View()
 * 
 *             p[0] = self.p_this.GetDefaultView()             # <<<<<<<<<<<<<<
 * 
 *             return wrap_view_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->GetDefaultView();

  /* "sf.pyx":1838
 *             p[0] = self.p_this.GetDefaultView()
 * 
 *             return wrap_view_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     property framerate_limit:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_view_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.default_view.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1841
 * 
 *     property framerate_limit:
 *         def __set__(self, int value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetFramerateLimit(value)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_15framerate_limit___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_15framerate_limit___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1841; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.framerate_limit.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1842
 *     property framerate_limit:
 *         def __set__(self, int value):
 *             self.p_this.SetFramerateLimit(value)             # <<<<<<<<<<<<<<
 * 
 *     property frame_time:
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetFramerateLimit(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1845
 * 
 *     property frame_time:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetFrameTime()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_10frame_time___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_10frame_time___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1846
 *     property frame_time:
 *         def __get__(self):
 *             return self.p_this.GetFrameTime()             # <<<<<<<<<<<<<<
 * 
 *     property height:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->GetFrameTime()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.frame_time.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1849
 * 
 *     property height:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetHeight()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_6height___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_6height___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1850
 *     property height:
 *         def __get__(self):
 *             return self.p_this.GetHeight()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->GetHeight()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1850; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.height.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1852
 *             return self.p_this.GetHeight()
 * 
 *         def __set__(self, unsigned int value):             # <<<<<<<<<<<<<<
 *             self.size = (self.width, value)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_6height_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1852; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.height.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1853
 * 
 *         def __set__(self, unsigned int value):
 *             self.size = (self.width, value)             # <<<<<<<<<<<<<<
 * 
 *     property joystick_threshold:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyLong_FromUnsignedLong(__pyx_v_value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__size, ((PyObject *)__pyx_t_3)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.RenderWindow.height.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1856
 * 
 *     property joystick_threshold:
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetJoystickThreshold(value)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_18joystick_threshold___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_18joystick_threshold___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1856; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.joystick_threshold.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1857
 *     property joystick_threshold:
 *         def __set__(self, bint value):
 *             self.p_this.SetJoystickThreshold(value)             # <<<<<<<<<<<<<<
 * 
 *     property key_repeat_enabled:
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetJoystickThreshold(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1860
 * 
 *     property key_repeat_enabled:
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.p_this.EnableKeyRepeat(value)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_18key_repeat_enabled___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_18key_repeat_enabled___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1860; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.key_repeat_enabled.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1861
 *     property key_repeat_enabled:
 *         def __set__(self, bint value):
 *             self.p_this.EnableKeyRepeat(value)             # <<<<<<<<<<<<<<
 * 
 *     property opened:
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->EnableKeyRepeat(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1864
 * 
 *     property opened:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.IsOpened()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_6opened___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_6opened___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1865
 *     property opened:
 *         def __get__(self):
 *             return self.p_this.IsOpened()             # <<<<<<<<<<<<<<
 * 
 *     property position:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->IsOpened()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.opened.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1868
 * 
 *     property position:
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             x, y = value
 *             self.p_this.SetPosition(x, y)
 */

static int __pyx_pf_2sf_12RenderWindow_8position___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_8position___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1869
 *     property position:
 *         def __set__(self, tuple value):
 *             x, y = value             # <<<<<<<<<<<<<<
 *             self.p_this.SetPosition(x, y)
 * 
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1870
 *         def __set__(self, tuple value):
 *             x, y = value
 *             self.p_this.SetPosition(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property settings:
 */
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_x); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_v_y); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetPosition(__pyx_t_3, __pyx_t_4);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.RenderWindow.position.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1873
 * 
 *     property settings:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             raise NotImplementedError(
 *                 "The ContextSettings class isn't available yet")
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_8settings___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_8settings___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1874
 *     property settings:
 *         def __get__(self):
 *             raise NotImplementedError(             # <<<<<<<<<<<<<<
 *                 "The ContextSettings class isn't available yet")
 * 
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_57), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.settings.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1878
 * 
 *     property show_mouse_cursor:
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.p_this.ShowMouseCursor(value)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_17show_mouse_cursor___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_17show_mouse_cursor___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1878; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.show_mouse_cursor.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1879
 *     property show_mouse_cursor:
 *         def __set__(self, bint value):
 *             self.p_this.ShowMouseCursor(value)             # <<<<<<<<<<<<<<
 * 
 *     property size:
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->ShowMouseCursor(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1882
 * 
 *     property size:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return (self.width, self.height)
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_4size___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_4size___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1883
 *     property size:
 *         def __get__(self):
 *             return (self.width, self.height)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, tuple value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__height); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.RenderWindow.size.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1885
 *             return (self.width, self.height)
 * 
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             x, y = value
 *             self.p_this.SetSize(x, y)
 */

static int __pyx_pf_2sf_12RenderWindow_4size_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_4size_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_x;
  PyObject *__pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  unsigned int __pyx_t_3;
  unsigned int __pyx_t_4;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_v_x = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_y = Py_None; __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1885; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1886
 * 
 *         def __set__(self, tuple value):
 *             x, y = value             # <<<<<<<<<<<<<<
 *             self.p_this.SetSize(x, y)
 * 
 */
  if (likely(((PyObject *)__pyx_v_value) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_value)) == 2)) {
    PyObject* tuple = ((PyObject *)__pyx_v_value);
    __pyx_t_1 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_x);
    __pyx_v_x = __pyx_t_1;
    __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_y);
    __pyx_v_y = __pyx_t_2;
    __pyx_t_2 = 0;
  } else {
    __Pyx_UnpackTupleError(((PyObject *)__pyx_v_value), 2);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "sf.pyx":1887
 *         def __set__(self, tuple value):
 *             x, y = value
 *             self.p_this.SetSize(x, y)             # <<<<<<<<<<<<<<
 * 
 *     property system_handle:
 */
  __pyx_t_3 = __Pyx_PyInt_AsUnsignedInt(__pyx_v_x); if (unlikely((__pyx_t_3 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1887; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyInt_AsUnsignedInt(__pyx_v_y); if (unlikely((__pyx_t_4 == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1887; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetSize(__pyx_t_3, __pyx_t_4);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.RenderWindow.size.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_x);
  __Pyx_DECREF(__pyx_v_y);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1890
 * 
 *     property system_handle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             raise NotImplementedError(
 *                 "The WindowHandle class isn't available yet")
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_13system_handle___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_13system_handle___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1891
 *     property system_handle:
 *         def __get__(self):
 *             raise NotImplementedError(             # <<<<<<<<<<<<<<
 *                 "The WindowHandle class isn't available yet")
 * 
 */
  __pyx_t_1 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_59), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.system_handle.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1895
 * 
 *     property title:
 *         def __set__(self, char* value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetTitle(value)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_5title___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_5title___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  char *__pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = PyBytes_AsString(__pyx_arg_value); if (unlikely((!__pyx_v_value) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1895; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.title.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1896
 *     property title:
 *         def __set__(self, char* value):
 *             self.p_this.SetTitle(value)             # <<<<<<<<<<<<<<
 * 
 *     property view:
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetTitle(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1899
 * 
 *     property view:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.View *p = new decl.View()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_4view___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_4view___get__(PyObject *__pyx_v_self) {
  sf::View *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1900
 *     property view:
 *         def __get__(self):
 *             cdef decl.View *p = new decl.View()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = self.p_this.GetView()
 */
  __pyx_v_p = new sf::View();

  /* "sf.pyx":1902
 *             cdef decl.View *p = new decl.View()
 * 
 *             p[0] = self.p_this.GetView()             # <<<<<<<<<<<<<<
 * 
 *             return wrap_view_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->GetView();

  /* "sf.pyx":1904
 *             p[0] = self.p_this.GetView()
 * 
 *             return wrap_view_instance(p)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, View value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_view_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.view.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1906
 *             return wrap_view_instance(p)
 * 
 *         def __set__(self, View value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetView(value.p_this[0])
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_4view_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_4view_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_2sf_View, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1907
 * 
 *         def __set__(self, View value):
 *             self.p_this.SetView(value.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property width:
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetView((((struct __pyx_obj_2sf_View *)__pyx_v_value)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.RenderWindow.view.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1910
 * 
 *     property width:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetWidth()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_5width___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_5width___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":1911
 *     property width:
 *         def __get__(self):
 *             return self.p_this.GetWidth()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, unsigned int value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->GetWidth()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.width.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1913
 *             return self.p_this.GetWidth()
 * 
 *         def __set__(self, unsigned int value):             # <<<<<<<<<<<<<<
 *             self.size = (value, self.height)
 * 
 */

static int __pyx_pf_2sf_12RenderWindow_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_12RenderWindow_5width_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  unsigned int __pyx_v_value;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_value); if (unlikely((__pyx_v_value == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1913; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.width.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1914
 * 
 *         def __set__(self, unsigned int value):
 *             self.size = (value, self.height)             # <<<<<<<<<<<<<<
 * 
 *     def clear(self, Color color=None):
 */
  __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__height); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__size, ((PyObject *)__pyx_t_3)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.RenderWindow.width.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1916
 *             self.size = (value, self.height)
 * 
 *     def clear(self, Color color=None):             # <<<<<<<<<<<<<<
 *         if color is None:
 *             self.p_this.Clear()
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_4clear(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_4clear(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__color,0};
  __Pyx_RefNannySetupContext("clear");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "clear") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[0]);
  } else {
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("clear", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.clear");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1917
 * 
 *     def clear(self, Color color=None):
 *         if color is None:             # <<<<<<<<<<<<<<
 *             self.p_this.Clear()
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_color) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1918
 *     def clear(self, Color color=None):
 *         if color is None:
 *             self.p_this.Clear()             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this.Clear(color.p_this[0])
 */
    ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->Clear();
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1920
 *             self.p_this.Clear()
 *         else:
 *             self.p_this.Clear(color.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def close(self):
 */
    ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->Clear((__pyx_v_color->p_this[0]));
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.RenderWindow.clear");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1922
 *             self.p_this.Clear(color.p_this[0])
 * 
 *     def close(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Close()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_5close(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_5close(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("close");

  /* "sf.pyx":1923
 * 
 *     def close(self):
 *         self.p_this.Close()             # <<<<<<<<<<<<<<
 * 
 *     def convert_coords(self, unsigned int x, unsigned int y, View view=None):
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->Close();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1925
 *         self.p_this.Close()
 * 
 *     def convert_coords(self, unsigned int x, unsigned int y, View view=None):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f res
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_6convert_coords(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_6convert_coords(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_x;
  unsigned int __pyx_v_y;
  struct __pyx_obj_2sf_View *__pyx_v_view = 0;
  sf::Vector2f __pyx_v_res;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__view,0};
  __Pyx_RefNannySetupContext("convert_coords");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_2sf_View *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("convert_coords", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__view);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "convert_coords") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_x == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_y == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_view = ((struct __pyx_obj_2sf_View *)values[2]);
  } else {
    __pyx_v_view = ((struct __pyx_obj_2sf_View *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_view = ((struct __pyx_obj_2sf_View *)PyTuple_GET_ITEM(__pyx_args, 2));
      case  2:
      __pyx_v_y = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_x = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("convert_coords", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.convert_coords");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_view), __pyx_ptype_2sf_View, 1, "view", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1928
 *         cdef decl.Vector2f res
 * 
 *         if view is None:             # <<<<<<<<<<<<<<
 *             res = self.p_this.ConvertCoords(x, y)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_view) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1929
 * 
 *         if view is None:
 *             res = self.p_this.ConvertCoords(x, y)             # <<<<<<<<<<<<<<
 *         else:
 *             res = self.p_this.ConvertCoords(x, y, view.p_this[0])
 */
    __pyx_v_res = ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->ConvertCoords(__pyx_v_x, __pyx_v_y);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1931
 *             res = self.p_this.ConvertCoords(x, y)
 *         else:
 *             res = self.p_this.ConvertCoords(x, y, view.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *         return (res.x, res.y)
 */
    __pyx_v_res = ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->ConvertCoords(__pyx_v_x, __pyx_v_y, (__pyx_v_view->p_this[0]));
  }
  __pyx_L6:;

  /* "sf.pyx":1933
 *             res = self.p_this.ConvertCoords(x, y, view.p_this[0])
 * 
 *         return (res.x, res.y)             # <<<<<<<<<<<<<<
 * 
 *     def display(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_res.x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_res.y); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = ((PyObject *)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.RenderWindow.convert_coords");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1935
 *         return (res.x, res.y)
 * 
 *     def display(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Display()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_7display(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_7display(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("display");

  /* "sf.pyx":1936
 * 
 *     def display(self):
 *         self.p_this.Display()             # <<<<<<<<<<<<<<
 * 
 *     def draw(self, Drawable drawable, Shader shader=None):
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->Display();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1938
 *         self.p_this.Display()
 * 
 *     def draw(self, Drawable drawable, Shader shader=None):             # <<<<<<<<<<<<<<
 *         if shader is None:
 *             self.p_this.Draw(drawable.p_this[0])
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_8draw(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_8draw(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_Drawable *__pyx_v_drawable = 0;
  struct __pyx_obj_2sf_Shader *__pyx_v_shader = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__drawable,&__pyx_n_s__shader,0};
  __Pyx_RefNannySetupContext("draw");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((struct __pyx_obj_2sf_Shader *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__drawable);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__shader);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "draw") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1938; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_drawable = ((struct __pyx_obj_2sf_Drawable *)values[0]);
    __pyx_v_shader = ((struct __pyx_obj_2sf_Shader *)values[1]);
  } else {
    __pyx_v_shader = ((struct __pyx_obj_2sf_Shader *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_shader = ((struct __pyx_obj_2sf_Shader *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_drawable = ((struct __pyx_obj_2sf_Drawable *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1938; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.draw");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_drawable), __pyx_ptype_2sf_Drawable, 1, "drawable", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shader), __pyx_ptype_2sf_Shader, 1, "shader", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1939
 * 
 *     def draw(self, Drawable drawable, Shader shader=None):
 *         if shader is None:             # <<<<<<<<<<<<<<
 *             self.p_this.Draw(drawable.p_this[0])
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_shader) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":1940
 *     def draw(self, Drawable drawable, Shader shader=None):
 *         if shader is None:
 *             self.p_this.Draw(drawable.p_this[0])             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this.Draw(drawable.p_this[0], shader.p_this[0])
 */
    ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->Draw((__pyx_v_drawable->p_this[0]));
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":1942
 *             self.p_this.Draw(drawable.p_this[0])
 *         else:
 *             self.p_this.Draw(drawable.p_this[0], shader.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def get_input(self):
 */
    ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->Draw((__pyx_v_drawable->p_this[0]), (__pyx_v_shader->p_this[0]));
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.RenderWindow.draw");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1944
 *             self.p_this.Draw(drawable.p_this[0], shader.p_this[0])
 * 
 *     def get_input(self):             # <<<<<<<<<<<<<<
 *         self.input.p_this = <decl.Input*>&self.p_this.GetInput()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_9get_input(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_9get_input(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("get_input");

  /* "sf.pyx":1945
 * 
 *     def get_input(self):
 *         self.input.p_this = <decl.Input*>&self.p_this.GetInput()             # <<<<<<<<<<<<<<
 * 
 *         return self.input
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->input->p_this = ((sf::Input *)(&((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->GetInput()));

  /* "sf.pyx":1947
 *         self.input.p_this = <decl.Input*>&self.p_this.GetInput()
 * 
 *         return self.input             # <<<<<<<<<<<<<<
 * 
 *     def get_viewport(self, View view):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->input));
  __pyx_r = ((PyObject *)((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->input);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1949
 *         return self.input
 * 
 *     def get_viewport(self, View view):             # <<<<<<<<<<<<<<
 *         cdef decl.IntRect *p = new decl.IntRect()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_10get_viewport(PyObject *__pyx_v_self, PyObject *__pyx_v_view); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_10get_viewport(PyObject *__pyx_v_self, PyObject *__pyx_v_view) {
  sf::IntRect *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_viewport");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_view), __pyx_ptype_2sf_View, 1, "view", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":1950
 * 
 *     def get_viewport(self, View view):
 *         cdef decl.IntRect *p = new decl.IntRect()             # <<<<<<<<<<<<<<
 * 
 *         p[0] = self.p_this.GetViewport(view.p_this[0])
 */
  __pyx_v_p = new sf::IntRect();

  /* "sf.pyx":1952
 *         cdef decl.IntRect *p = new decl.IntRect()
 * 
 *         p[0] = self.p_this.GetViewport(view.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *         return wrap_int_rect_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->GetViewport((((struct __pyx_obj_2sf_View *)__pyx_v_view)->p_this[0]));

  /* "sf.pyx":1954
 *         p[0] = self.p_this.GetViewport(view.p_this[0])
 * 
 *         return wrap_int_rect_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     def iter_events(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_int_rect_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderWindow.get_viewport");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1956
 *         return wrap_int_rect_instance(p)
 * 
 *     def iter_events(self):             # <<<<<<<<<<<<<<
 *         """Return an iterator which yields the current pending events.
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_11iter_events(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_2sf_12RenderWindow_11iter_events[] = "Return an iterator which yields the current pending events.\n\n        Example::\n        \n            for event in window.iter_events():\n                if event.type == sf.Event.CLOSED:\n                    # ...";
static PyObject *__pyx_pf_2sf_12RenderWindow_11iter_events(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("iter_events");

  /* "sf.pyx":1965
 *                     # ..."""
 * 
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     def restore_gl_states(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self);
  __pyx_r = __pyx_v_self;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1967
 *         return self
 * 
 *     def restore_gl_states(self):             # <<<<<<<<<<<<<<
 *         self.p_this.RestoreGLStates()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_12restore_gl_states(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_12restore_gl_states(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("restore_gl_states");

  /* "sf.pyx":1968
 * 
 *     def restore_gl_states(self):
 *         self.p_this.RestoreGLStates()             # <<<<<<<<<<<<<<
 * 
 *     def save_gl_states(self):
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->RestoreGLStates();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1970
 *         self.p_this.RestoreGLStates()
 * 
 *     def save_gl_states(self):             # <<<<<<<<<<<<<<
 *         self.p_this.SaveGLStates()
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_13save_gl_states(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_13save_gl_states(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("save_gl_states");

  /* "sf.pyx":1971
 * 
 *     def save_gl_states(self):
 *         self.p_this.SaveGLStates()             # <<<<<<<<<<<<<<
 * 
 *     def set_icon(self, unsigned int width, unsigned int height, char* pixels):
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SaveGLStates();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1973
 *         self.p_this.SaveGLStates()
 * 
 *     def set_icon(self, unsigned int width, unsigned int height, char* pixels):             # <<<<<<<<<<<<<<
 *         self.p_this.SetIcon(width, height, <decl.Uint8*>pixels)
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_14set_icon(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_14set_icon(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_width;
  unsigned int __pyx_v_height;
  char *__pyx_v_pixels;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,&__pyx_n_s__pixels,0};
  __Pyx_RefNannySetupContext("set_icon");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_icon", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__pixels);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_icon", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_icon") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_width == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_height == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_pixels = PyBytes_AsString(values[2]); if (unlikely((!__pyx_v_pixels) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_width = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_width == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_pixels = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((!__pyx_v_pixels) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_icon", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.set_icon");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1974
 * 
 *     def set_icon(self, unsigned int width, unsigned int height, char* pixels):
 *         self.p_this.SetIcon(width, height, <decl.Uint8*>pixels)             # <<<<<<<<<<<<<<
 * 
 *     def show(self, bint show):
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->SetIcon(__pyx_v_width, __pyx_v_height, ((sf::Uint8 *)__pyx_v_pixels));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1976
 *         self.p_this.SetIcon(width, height, <decl.Uint8*>pixels)
 * 
 *     def show(self, bint show):             # <<<<<<<<<<<<<<
 *         self.p_this.Show(show)
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_15show(PyObject *__pyx_v_self, PyObject *__pyx_arg_show); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_15show(PyObject *__pyx_v_self, PyObject *__pyx_arg_show) {
  int __pyx_v_show;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("show");
  assert(__pyx_arg_show); {
    __pyx_v_show = __Pyx_PyObject_IsTrue(__pyx_arg_show); if (unlikely((__pyx_v_show == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1976; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderWindow.show");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":1977
 * 
 *     def show(self, bint show):
 *         self.p_this.Show(show)             # <<<<<<<<<<<<<<
 * 
 *     def wait_event(self):
 */
  ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->Show(__pyx_v_show);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1979
 *         self.p_this.Show(show)
 * 
 *     def wait_event(self):             # <<<<<<<<<<<<<<
 *         cdef decl.Event e
 * 
 */

static PyObject *__pyx_pf_2sf_12RenderWindow_16wait_event(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_12RenderWindow_16wait_event(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  sf::Event __pyx_v_e;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("wait_event");

  /* "sf.pyx":1982
 *         cdef decl.Event e
 * 
 *         if self.p_this.WaitEvent(e):             # <<<<<<<<<<<<<<
 *             return wrap_event_instance(&e)
 * 
 */
  __pyx_t_1 = ((struct __pyx_obj_2sf_RenderWindow *)__pyx_v_self)->p_this->WaitEvent(__pyx_v_e);
  if (__pyx_t_1) {

    /* "sf.pyx":1983
 * 
 *         if self.p_this.WaitEvent(e):
 *             return wrap_event_instance(&e)             # <<<<<<<<<<<<<<
 * 
 *         raise PySFMLException("Error reported by C++ method "
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_f_2sf_wrap_event_instance((&__pyx_v_e)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "sf.pyx":1985
 *             return wrap_event_instance(&e)
 * 
 *         raise PySFMLException("Error reported by C++ method "             # <<<<<<<<<<<<<<
 *                               "sf::RenderWindow::WaitEvent()")
 * 
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__PySFMLException); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_61), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_3, 0, 0);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.RenderWindow.wait_event");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":1997
 *     IS_AVAILABLE = decl.RenderImageIsAvailable()
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.p_this = new decl.RenderImage()
 * 
 */

static int __pyx_pf_2sf_11RenderImage___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_11RenderImage___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "sf.pyx":1998
 * 
 *     def __cinit__(self):
 *         self.p_this = new decl.RenderImage()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, unsigned int width, unsigned height, bint depth=False):
 */
  ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this = new sf::RenderImage();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2000
 *         self.p_this = new decl.RenderImage()
 * 
 *     def __init__(self, unsigned int width, unsigned height, bint depth=False):             # <<<<<<<<<<<<<<
 *         self.create(width, height, depth)
 * 
 */

static int __pyx_pf_2sf_11RenderImage_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_11RenderImage_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_width;
  unsigned int __pyx_v_height;
  int __pyx_v_depth;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,&__pyx_n_s__depth,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__depth);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_width == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_height == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[2]) {
      __pyx_v_depth = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_depth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_depth = ((int)0);
    }
  } else {
    __pyx_v_depth = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_depth = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_depth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_height = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_width = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_width == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderImage.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2001
 * 
 *     def __init__(self, unsigned int width, unsigned height, bint depth=False):
 *         self.create(width, height, depth)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__create); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyLong_FromUnsignedLong(__pyx_v_width); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyLong_FromUnsignedLong(__pyx_v_height); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_depth); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_5));
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("sf.RenderImage.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2003
 *         self.create(width, height, depth)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_11RenderImage_2__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_11RenderImage_2__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":2004
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     property active:
 */
  delete ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":2007
 * 
 *     property active:
 *         def __set__(self, bint active):             # <<<<<<<<<<<<<<
 *             self.p_this.SetActive(active)
 * 
 */

static int __pyx_pf_2sf_11RenderImage_6active___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_active); /*proto*/
static int __pyx_pf_2sf_11RenderImage_6active___set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_active) {
  int __pyx_v_active;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_active); {
    __pyx_v_active = __Pyx_PyObject_IsTrue(__pyx_arg_active); if (unlikely((__pyx_v_active == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2007; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderImage.active.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2008
 *     property active:
 *         def __set__(self, bint active):
 *             self.p_this.SetActive(active)             # <<<<<<<<<<<<<<
 * 
 *     property default_view:
 */
  ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->SetActive(__pyx_v_active);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2011
 * 
 *     property default_view:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.View *p = new decl.View()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_12default_view___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_12default_view___get__(PyObject *__pyx_v_self) {
  sf::View *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2012
 *     property default_view:
 *         def __get__(self):
 *             cdef decl.View *p = new decl.View()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = self.p_this.GetDefaultView()
 */
  __pyx_v_p = new sf::View();

  /* "sf.pyx":2014
 *             cdef decl.View *p = new decl.View()
 * 
 *             p[0] = self.p_this.GetDefaultView()             # <<<<<<<<<<<<<<
 * 
 *             return wrap_view_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->GetDefaultView();

  /* "sf.pyx":2016
 *             p[0] = self.p_this.GetDefaultView()
 * 
 *             return wrap_view_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     property height:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_view_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderImage.default_view.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2019
 * 
 *     property height:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetHeight()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_6height___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_6height___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2020
 *     property height:
 *         def __get__(self):
 *             return self.p_this.GetHeight()             # <<<<<<<<<<<<<<
 * 
 *     property image:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->GetHeight()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderImage.height.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2023
 * 
 *     property image:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return wrap_image_instance(<decl.Image*>&self.p_this.GetImage(),
 *                                        False)
 */

static PyObject *__pyx_pf_2sf_11RenderImage_5image___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_5image___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2024
 *     property image:
 *         def __get__(self):
 *             return wrap_image_instance(<decl.Image*>&self.p_this.GetImage(),             # <<<<<<<<<<<<<<
 *                                        False)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "sf.pyx":2025
 *         def __get__(self):
 *             return wrap_image_instance(<decl.Image*>&self.p_this.GetImage(),
 *                                        False)             # <<<<<<<<<<<<<<
 * 
 *     property smooth:
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_image_instance(((sf::Image *)(&((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->GetImage())), 0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderImage.image.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2028
 * 
 *     property smooth:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.IsSmooth()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_6smooth___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_6smooth___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2029
 *     property smooth:
 *         def __get__(self):
 *             return self.p_this.IsSmooth()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, bint smooth):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->IsSmooth()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderImage.smooth.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2031
 *             return self.p_this.IsSmooth()
 * 
 *         def __set__(self, bint smooth):             # <<<<<<<<<<<<<<
 *             self.p_this.SetSmooth(smooth)
 * 
 */

static int __pyx_pf_2sf_11RenderImage_6smooth_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_smooth); /*proto*/
static int __pyx_pf_2sf_11RenderImage_6smooth_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_smooth) {
  int __pyx_v_smooth;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_smooth); {
    __pyx_v_smooth = __Pyx_PyObject_IsTrue(__pyx_arg_smooth); if (unlikely((__pyx_v_smooth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2031; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderImage.smooth.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2032
 * 
 *         def __set__(self, bint smooth):
 *             self.p_this.SetSmooth(smooth)             # <<<<<<<<<<<<<<
 * 
 *     property view:
 */
  ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->SetSmooth(__pyx_v_smooth);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2035
 * 
 *     property view:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.View *p = new decl.View()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_4view___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_4view___get__(PyObject *__pyx_v_self) {
  sf::View *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2036
 *     property view:
 *         def __get__(self):
 *             cdef decl.View *p = new decl.View()             # <<<<<<<<<<<<<<
 * 
 *             p[0] = self.p_this.GetView()
 */
  __pyx_v_p = new sf::View();

  /* "sf.pyx":2038
 *             cdef decl.View *p = new decl.View()
 * 
 *             p[0] = self.p_this.GetView()             # <<<<<<<<<<<<<<
 * 
 *             return wrap_view_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->GetView();

  /* "sf.pyx":2040
 *             p[0] = self.p_this.GetView()
 * 
 *             return wrap_view_instance(p)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, View value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_view_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2040; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderImage.view.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2042
 *             return wrap_view_instance(p)
 * 
 *         def __set__(self, View value):             # <<<<<<<<<<<<<<
 *             self.p_this.SetView(value.p_this[0])
 * 
 */

static int __pyx_pf_2sf_11RenderImage_4view_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_11RenderImage_4view_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_2sf_View, 1, "value", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2043
 * 
 *         def __set__(self, View value):
 *             self.p_this.SetView(value.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property width:
 */
  ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->SetView((((struct __pyx_obj_2sf_View *)__pyx_v_value)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.RenderImage.view.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2046
 * 
 *     property width:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.p_this.GetWidth()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_5width___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_5width___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2047
 *     property width:
 *         def __get__(self):
 *             return self.p_this.GetWidth()             # <<<<<<<<<<<<<<
 * 
 *     def clear(self, Color color=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->GetWidth()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderImage.width.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2049
 *             return self.p_this.GetWidth()
 * 
 *     def clear(self, Color color=None):             # <<<<<<<<<<<<<<
 *         if color is None:
 *             self.p_this.Clear()
 */

static PyObject *__pyx_pf_2sf_11RenderImage_3clear(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_3clear(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__color,0};
  __Pyx_RefNannySetupContext("clear");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "clear") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2049; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[0]);
  } else {
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("clear", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2049; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderImage.clear");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2050
 * 
 *     def clear(self, Color color=None):
 *         if color is None:             # <<<<<<<<<<<<<<
 *             self.p_this.Clear()
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_color) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2051
 *     def clear(self, Color color=None):
 *         if color is None:
 *             self.p_this.Clear()             # <<<<<<<<<<<<<<
 *         else:
 *             self.p_this.Clear(color.p_this[0])
 */
    ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->Clear();
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":2053
 *             self.p_this.Clear()
 *         else:
 *             self.p_this.Clear(color.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def convert_coords(self, unsigned int x, unsigned int y, View view=None):
 */
    ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->Clear((__pyx_v_color->p_this[0]));
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.RenderImage.clear");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2055
 *             self.p_this.Clear(color.p_this[0])
 * 
 *     def convert_coords(self, unsigned int x, unsigned int y, View view=None):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f res
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_4convert_coords(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_4convert_coords(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_x;
  unsigned int __pyx_v_y;
  struct __pyx_obj_2sf_View *__pyx_v_view = 0;
  sf::Vector2f __pyx_v_res;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__view,0};
  __Pyx_RefNannySetupContext("convert_coords");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_2sf_View *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("convert_coords", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__view);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "convert_coords") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_x == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_y == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_view = ((struct __pyx_obj_2sf_View *)values[2]);
  } else {
    __pyx_v_view = ((struct __pyx_obj_2sf_View *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_view = ((struct __pyx_obj_2sf_View *)PyTuple_GET_ITEM(__pyx_args, 2));
      case  2:
      __pyx_v_y = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_x = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("convert_coords", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderImage.convert_coords");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_view), __pyx_ptype_2sf_View, 1, "view", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2058
 *         cdef decl.Vector2f res
 * 
 *         if view is None:             # <<<<<<<<<<<<<<
 *             res = self.p_this.ConvertCoords(x, y)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_view) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2059
 * 
 *         if view is None:
 *             res = self.p_this.ConvertCoords(x, y)             # <<<<<<<<<<<<<<
 *         else:
 *             res = self.p_this.ConvertCoords(x, y, view.p_this[0])
 */
    __pyx_v_res = ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->ConvertCoords(__pyx_v_x, __pyx_v_y);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":2061
 *             res = self.p_this.ConvertCoords(x, y)
 *         else:
 *             res = self.p_this.ConvertCoords(x, y, view.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *         return (res.x, res.y)
 */
    __pyx_v_res = ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->ConvertCoords(__pyx_v_x, __pyx_v_y, (__pyx_v_view->p_this[0]));
  }
  __pyx_L6:;

  /* "sf.pyx":2063
 *             res = self.p_this.ConvertCoords(x, y, view.p_this[0])
 * 
 *         return (res.x, res.y)             # <<<<<<<<<<<<<<
 * 
 *     def create(self, unsigned int width, unsigned int height, bint depth=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_res.x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_res.y); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = ((PyObject *)__pyx_t_4);
  __pyx_t_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.RenderImage.convert_coords");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2065
 *         return (res.x, res.y)
 * 
 *     def create(self, unsigned int width, unsigned int height, bint depth=False):             # <<<<<<<<<<<<<<
 *         self.p_this.Create(width, height, depth)
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_5create(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_5create(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_width;
  unsigned int __pyx_v_height;
  int __pyx_v_depth;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__width,&__pyx_n_s__height,&__pyx_n_s__depth,0};
  __Pyx_RefNannySetupContext("create");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("create", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__depth);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "create") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_width = __Pyx_PyInt_AsUnsignedInt(values[0]); if (unlikely((__pyx_v_width == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __Pyx_PyInt_AsUnsignedInt(values[1]); if (unlikely((__pyx_v_height == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[2]) {
      __pyx_v_depth = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_depth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_depth = ((int)0);
    }
  } else {
    __pyx_v_depth = ((int)0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_depth = __Pyx_PyObject_IsTrue(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_depth == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_height = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_width = __Pyx_PyInt_AsUnsignedInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_width == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderImage.create");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2066
 * 
 *     def create(self, unsigned int width, unsigned int height, bint depth=False):
 *         self.p_this.Create(width, height, depth)             # <<<<<<<<<<<<<<
 * 
 *     def display(self):
 */
  ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->Create(__pyx_v_width, __pyx_v_height, __pyx_v_depth);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2068
 *         self.p_this.Create(width, height, depth)
 * 
 *     def display(self):             # <<<<<<<<<<<<<<
 *         self.p_this.Display()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_6display(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_6display(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("display");

  /* "sf.pyx":2069
 * 
 *     def display(self):
 *         self.p_this.Display()             # <<<<<<<<<<<<<<
 * 
 *     def draw(self, Drawable drawable, Shader shader=None):
 */
  ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->Display();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2071
 *         self.p_this.Display()
 * 
 *     def draw(self, Drawable drawable, Shader shader=None):             # <<<<<<<<<<<<<<
 *         if shader is None:
 *             self.p_this.Draw(drawable.p_this[0])
 */

static PyObject *__pyx_pf_2sf_11RenderImage_7draw(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_7draw(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_Drawable *__pyx_v_drawable = 0;
  struct __pyx_obj_2sf_Shader *__pyx_v_shader = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__drawable,&__pyx_n_s__shader,0};
  __Pyx_RefNannySetupContext("draw");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((struct __pyx_obj_2sf_Shader *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__drawable);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__shader);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "draw") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2071; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_drawable = ((struct __pyx_obj_2sf_Drawable *)values[0]);
    __pyx_v_shader = ((struct __pyx_obj_2sf_Shader *)values[1]);
  } else {
    __pyx_v_shader = ((struct __pyx_obj_2sf_Shader *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_shader = ((struct __pyx_obj_2sf_Shader *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_drawable = ((struct __pyx_obj_2sf_Drawable *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2071; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.RenderImage.draw");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_drawable), __pyx_ptype_2sf_Drawable, 1, "drawable", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shader), __pyx_ptype_2sf_Shader, 1, "shader", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2072
 * 
 *     def draw(self, Drawable drawable, Shader shader=None):
 *         if shader is None:             # <<<<<<<<<<<<<<
 *             self.p_this.Draw(drawable.p_this[0])
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_shader) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2073
 *     def draw(self, Drawable drawable, Shader shader=None):
 *         if shader is None:
 *             self.p_this.Draw(drawable.p_this[0])             # <<<<<<<<<<<<<<
 *         else:
 *             raise NotImplementedError("The Shader class isn't available yet")
 */
    ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->Draw((__pyx_v_drawable->p_this[0]));
    goto __pyx_L6;
  }
  /*else*/ {

    /* "sf.pyx":2075
 *             self.p_this.Draw(drawable.p_this[0])
 *         else:
 *             raise NotImplementedError("The Shader class isn't available yet")             # <<<<<<<<<<<<<<
 * 
 *     def get_viewport(self, View view):
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_NotImplementedError, ((PyObject *)__pyx_k_tuple_63), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.RenderImage.draw");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2077
 *             raise NotImplementedError("The Shader class isn't available yet")
 * 
 *     def get_viewport(self, View view):             # <<<<<<<<<<<<<<
 *         cdef decl.IntRect *p = new decl.IntRect()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_8get_viewport(PyObject *__pyx_v_self, PyObject *__pyx_v_view); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_8get_viewport(PyObject *__pyx_v_self, PyObject *__pyx_v_view) {
  sf::IntRect *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_viewport");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_view), __pyx_ptype_2sf_View, 1, "view", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2078
 * 
 *     def get_viewport(self, View view):
 *         cdef decl.IntRect *p = new decl.IntRect()             # <<<<<<<<<<<<<<
 * 
 *         p[0] = self.p_this.GetViewport(view.p_this[0])
 */
  __pyx_v_p = new sf::IntRect();

  /* "sf.pyx":2080
 *         cdef decl.IntRect *p = new decl.IntRect()
 * 
 *         p[0] = self.p_this.GetViewport(view.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *         return wrap_int_rect_instance(p)
 */
  (__pyx_v_p[0]) = ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->GetViewport((((struct __pyx_obj_2sf_View *)__pyx_v_view)->p_this[0]));

  /* "sf.pyx":2082
 *         p[0] = self.p_this.GetViewport(view.p_this[0])
 * 
 *         return wrap_int_rect_instance(p)             # <<<<<<<<<<<<<<
 * 
 *     def restore_gl_states(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_int_rect_instance(__pyx_v_p)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.RenderImage.get_viewport");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2084
 *         return wrap_int_rect_instance(p)
 * 
 *     def restore_gl_states(self):             # <<<<<<<<<<<<<<
 *         self.p_this.RestoreGLStates()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_9restore_gl_states(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_9restore_gl_states(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("restore_gl_states");

  /* "sf.pyx":2085
 * 
 *     def restore_gl_states(self):
 *         self.p_this.RestoreGLStates()             # <<<<<<<<<<<<<<
 * 
 *     def save_gl_states(self):
 */
  ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->RestoreGLStates();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2087
 *         self.p_this.RestoreGLStates()
 * 
 *     def save_gl_states(self):             # <<<<<<<<<<<<<<
 *         self.p_this.SaveGLStates()
 * 
 */

static PyObject *__pyx_pf_2sf_11RenderImage_10save_gl_states(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2sf_11RenderImage_10save_gl_states(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("save_gl_states");

  /* "sf.pyx":2088
 * 
 *     def save_gl_states(self):
 *         self.p_this.SaveGLStates()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_RenderImage *)__pyx_v_self)->p_this->SaveGLStates();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2099
 *     cdef public Color color, outline
 * 
 *     def __init__(self, float x, float y, Color color=None, Color outline=None):             # <<<<<<<<<<<<<<
 *         self.x = x
 *         self.y = y
 */

static int __pyx_pf_2sf_10ShapePoint___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_10ShapePoint___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  struct __pyx_obj_2sf_Color *__pyx_v_outline = 0;
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__color,&__pyx_n_s__outline,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    values[3] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
        if (value) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline);
        if (value) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[2]);
    __pyx_v_outline = ((struct __pyx_obj_2sf_Color *)values[3]);
  } else {
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)Py_None);
    __pyx_v_outline = ((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4:
      __pyx_v_outline = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 3));
      case  3:
      __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 2));
      case  2:
      __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.ShapePoint.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_color);
  __Pyx_INCREF((PyObject *)__pyx_v_outline);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_outline), __pyx_ptype_2sf_Color, 1, "outline", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2100
 * 
 *     def __init__(self, float x, float y, Color color=None, Color outline=None):
 *         self.x = x             # <<<<<<<<<<<<<<
 *         self.y = y
 * 
 */
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->x = __pyx_v_x;

  /* "sf.pyx":2101
 *     def __init__(self, float x, float y, Color color=None, Color outline=None):
 *         self.x = x
 *         self.y = y             # <<<<<<<<<<<<<<
 * 
 *         if color is None:
 */
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->y = __pyx_v_y;

  /* "sf.pyx":2103
 *         self.y = y
 * 
 *         if color is None:             # <<<<<<<<<<<<<<
 *             color = Color(255, 255, 255)
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_color) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2104
 * 
 *         if color is None:
 *             color = Color(255, 255, 255)             # <<<<<<<<<<<<<<
 * 
 *         if outline is None:
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_64), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_color));
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "sf.pyx":2106
 *             color = Color(255, 255, 255)
 * 
 *         if outline is None:             # <<<<<<<<<<<<<<
 *             outline = Color(0, 0, 0)
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_outline) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2107
 * 
 *         if outline is None:
 *             outline = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 * 
 *         self.color = color
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_65), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_outline));
    __pyx_v_outline = ((struct __pyx_obj_2sf_Color *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "sf.pyx":2109
 *             outline = Color(0, 0, 0)
 * 
 *         self.color = color             # <<<<<<<<<<<<<<
 *         self.outline = outline
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_color));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_color));
  __Pyx_GOTREF(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color));
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color = __pyx_v_color;

  /* "sf.pyx":2110
 * 
 *         self.color = color
 *         self.outline = outline             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_outline));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_outline));
  __Pyx_GOTREF(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline));
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline = __pyx_v_outline;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.ShapePoint.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_color);
  __Pyx_DECREF((PyObject *)__pyx_v_outline);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2096
 * 
 * cdef class ShapePoint:
 *     cdef public float x, y             # <<<<<<<<<<<<<<
 *     cdef public Color color, outline
 * 
 */

static PyObject *__pyx_pf_2sf_10ShapePoint_1x___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_10ShapePoint_1x___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.ShapePoint.x.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2sf_10ShapePoint_1x_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_10ShapePoint_1x_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  float __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->x = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.ShapePoint.x.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_2sf_10ShapePoint_1y___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_10ShapePoint_1y___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.ShapePoint.y.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2sf_10ShapePoint_1y_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_10ShapePoint_1y_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  float __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->y = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.ShapePoint.y.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2097
 * cdef class ShapePoint:
 *     cdef public float x, y
 *     cdef public Color color, outline             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, float x, float y, Color color=None, Color outline=None):
 */

static PyObject *__pyx_pf_2sf_10ShapePoint_5color___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_10ShapePoint_5color___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color));
  __pyx_r = ((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2sf_10ShapePoint_5color_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_10ShapePoint_5color_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_2sf_Color))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color));
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color = ((struct __pyx_obj_2sf_Color *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.ShapePoint.color.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2sf_10ShapePoint_5color_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_2sf_10ShapePoint_5color_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color));
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->color = ((struct __pyx_obj_2sf_Color *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_2sf_10ShapePoint_7outline___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_10ShapePoint_7outline___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline));
  __pyx_r = ((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2sf_10ShapePoint_7outline_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_10ShapePoint_7outline_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_2sf_Color))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline));
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline = ((struct __pyx_obj_2sf_Color *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.ShapePoint.outline.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2sf_10ShapePoint_7outline_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_2sf_10ShapePoint_7outline_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline));
  ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_self)->outline = ((struct __pyx_obj_2sf_Color *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2117
 *     cdef unsigned int index
 * 
 *     cdef _init(self, decl.Shape *parent, unsigned int index):             # <<<<<<<<<<<<<<
 *         self.parent = parent
 *         self.index = index
 */

static  PyObject *__pyx_f_2sf_15ShapePointProxy__init(struct __pyx_obj_2sf_ShapePointProxy *__pyx_v_self, sf::Shape *__pyx_v_parent, unsigned int __pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("_init");

  /* "sf.pyx":2118
 * 
 *     cdef _init(self, decl.Shape *parent, unsigned int index):
 *         self.parent = parent             # <<<<<<<<<<<<<<
 *         self.index = index
 * 
 */
  __pyx_v_self->parent = __pyx_v_parent;

  /* "sf.pyx":2119
 *     cdef _init(self, decl.Shape *parent, unsigned int index):
 *         self.parent = parent
 *         self.index = index             # <<<<<<<<<<<<<<
 * 
 *     property position:
 */
  __pyx_v_self->index = __pyx_v_index;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2122
 * 
 *     property position:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 *             return pos.x, pos.y
 */

static PyObject *__pyx_pf_2sf_15ShapePointProxy_8position___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_15ShapePointProxy_8position___get__(PyObject *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2123
 *     property position:
 *         def __get__(self):
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)             # <<<<<<<<<<<<<<
 *             return pos.x, pos.y
 * 
 */
  __pyx_v_pos = ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->GetPointPosition(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index);

  /* "sf.pyx":2124
 *         def __get__(self):
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 *             return pos.x, pos.y             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, tuple value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("sf.ShapePointProxy.position.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2126
 *             return pos.x, pos.y
 * 
 *         def __set__(self, tuple value):             # <<<<<<<<<<<<<<
 *             cdef float x = value[0]
 *             cdef float y = value[1]
 */

static int __pyx_pf_2sf_15ShapePointProxy_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2sf_15ShapePointProxy_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  float __pyx_v_x;
  float __pyx_v_y;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  float __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), (&PyTuple_Type), 1, "value", 1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2127
 * 
 *         def __set__(self, tuple value):
 *             cdef float x = value[0]             # <<<<<<<<<<<<<<
 *             cdef float y = value[1]
 * 
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_value), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_x = __pyx_t_2;

  /* "sf.pyx":2128
 *         def __set__(self, tuple value):
 *             cdef float x = value[0]
 *             cdef float y = value[1]             # <<<<<<<<<<<<<<
 * 
 *             self.parent.SetPointPosition(self.index, x, y)
 */
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(((PyObject *)__pyx_v_value), 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_y = __pyx_t_2;

  /* "sf.pyx":2130
 *             cdef float y = value[1]
 * 
 *             self.parent.SetPointPosition(self.index, x, y)             # <<<<<<<<<<<<<<
 * 
 *     property x:
 */
  ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->SetPointPosition(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index, __pyx_v_x, __pyx_v_y);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.ShapePointProxy.position.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2133
 * 
 *     property x:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 * 
 */

static PyObject *__pyx_pf_2sf_15ShapePointProxy_1x___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_15ShapePointProxy_1x___get__(PyObject *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2134
 *     property x:
 *         def __get__(self):
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)             # <<<<<<<<<<<<<<
 * 
 *             return pos.x
 */
  __pyx_v_pos = ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->GetPointPosition(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index);

  /* "sf.pyx":2136
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 * 
 *             return pos.x             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.ShapePointProxy.x.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2138
 *             return pos.x
 * 
 *         def __set__(self, float x):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 * 
 */

static int __pyx_pf_2sf_15ShapePointProxy_1x_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x); /*proto*/
static int __pyx_pf_2sf_15ShapePointProxy_1x_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_x) {
  float __pyx_v_x;
  sf::Vector2f __pyx_v_pos;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_x); {
    __pyx_v_x = __pyx_PyFloat_AsDouble(__pyx_arg_x); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2138; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.ShapePointProxy.x.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2139
 * 
 *         def __set__(self, float x):
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)             # <<<<<<<<<<<<<<
 * 
 *             self.parent.SetPointPosition(self.index, x, pos.y)
 */
  __pyx_v_pos = ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->GetPointPosition(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index);

  /* "sf.pyx":2141
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 * 
 *             self.parent.SetPointPosition(self.index, x, pos.y)             # <<<<<<<<<<<<<<
 * 
 *     property y:
 */
  ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->SetPointPosition(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index, __pyx_v_x, __pyx_v_pos.y);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2144
 * 
 *     property y:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 * 
 */

static PyObject *__pyx_pf_2sf_15ShapePointProxy_1y___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_15ShapePointProxy_1y___get__(PyObject *__pyx_v_self) {
  sf::Vector2f __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2145
 *     property y:
 *         def __get__(self):
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)             # <<<<<<<<<<<<<<
 * 
 *             return pos.y
 */
  __pyx_v_pos = ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->GetPointPosition(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index);

  /* "sf.pyx":2147
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 * 
 *             return pos.y             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float y):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_pos.y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.ShapePointProxy.y.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2149
 *             return pos.y
 * 
 *         def __set__(self, float y):             # <<<<<<<<<<<<<<
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 * 
 */

static int __pyx_pf_2sf_15ShapePointProxy_1y_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y); /*proto*/
static int __pyx_pf_2sf_15ShapePointProxy_1y_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_y) {
  float __pyx_v_y;
  sf::Vector2f __pyx_v_pos;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_y); {
    __pyx_v_y = __pyx_PyFloat_AsDouble(__pyx_arg_y); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2149; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.ShapePointProxy.y.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2150
 * 
 *         def __set__(self, float y):
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)             # <<<<<<<<<<<<<<
 * 
 *             self.parent.SetPointPosition(self.index, pos.x, y)
 */
  __pyx_v_pos = ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->GetPointPosition(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index);

  /* "sf.pyx":2152
 *             cdef decl.Vector2f pos = self.parent.GetPointPosition(self.index)
 * 
 *             self.parent.SetPointPosition(self.index, pos.x, y)             # <<<<<<<<<<<<<<
 * 
 *     property color:
 */
  ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->SetPointPosition(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index, __pyx_v_pos.x, __pyx_v_y);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2155
 * 
 *     property color:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Color *color = new decl.Color()
 * 
 */

static PyObject *__pyx_pf_2sf_15ShapePointProxy_5color___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_15ShapePointProxy_5color___get__(PyObject *__pyx_v_self) {
  sf::Color *__pyx_v_color;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2156
 *     property color:
 *         def __get__(self):
 *             cdef decl.Color *color = new decl.Color()             # <<<<<<<<<<<<<<
 * 
 *             color[0] = self.parent.GetPointColor(self.index)
 */
  __pyx_v_color = new sf::Color();

  /* "sf.pyx":2158
 *             cdef decl.Color *color = new decl.Color()
 * 
 *             color[0] = self.parent.GetPointColor(self.index)             # <<<<<<<<<<<<<<
 * 
 *             return wrap_color_instance(color)
 */
  (__pyx_v_color[0]) = ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->GetPointColor(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index);

  /* "sf.pyx":2160
 *             color[0] = self.parent.GetPointColor(self.index)
 * 
 *             return wrap_color_instance(color)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, Color color):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_2sf_wrap_color_instance(__pyx_v_color); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.ShapePointProxy.color.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2162
 *             return wrap_color_instance(color)
 * 
 *         def __set__(self, Color color):             # <<<<<<<<<<<<<<
 *             self.parent.SetPointColor(self.index, color.p_this[0])
 * 
 */

static int __pyx_pf_2sf_15ShapePointProxy_5color_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_color); /*proto*/
static int __pyx_pf_2sf_15ShapePointProxy_5color_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_color) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2163
 * 
 *         def __set__(self, Color color):
 *             self.parent.SetPointColor(self.index, color.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property outline:
 */
  ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->SetPointColor(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index, (((struct __pyx_obj_2sf_Color *)__pyx_v_color)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.ShapePointProxy.color.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2166
 * 
 *     property outline:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef decl.Color *outline = new decl.Color()
 * 
 */

static PyObject *__pyx_pf_2sf_15ShapePointProxy_7outline___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_15ShapePointProxy_7outline___get__(PyObject *__pyx_v_self) {
  sf::Color *__pyx_v_outline;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2167
 *     property outline:
 *         def __get__(self):
 *             cdef decl.Color *outline = new decl.Color()             # <<<<<<<<<<<<<<
 * 
 *             outline[0] = self.parent.GetPointOutlineColor(self.index)
 */
  __pyx_v_outline = new sf::Color();

  /* "sf.pyx":2169
 *             cdef decl.Color *outline = new decl.Color()
 * 
 *             outline[0] = self.parent.GetPointOutlineColor(self.index)             # <<<<<<<<<<<<<<
 * 
 *             return wrap_color_instance(outline)
 */
  (__pyx_v_outline[0]) = ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->GetPointOutlineColor(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index);

  /* "sf.pyx":2171
 *             outline[0] = self.parent.GetPointOutlineColor(self.index)
 * 
 *             return wrap_color_instance(outline)             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, Color outline):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_2sf_wrap_color_instance(__pyx_v_outline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.ShapePointProxy.outline.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2173
 *             return wrap_color_instance(outline)
 * 
 *         def __set__(self, Color outline):             # <<<<<<<<<<<<<<
 *             self.parent.SetPointOutlineColor(self.index, outline.p_this[0])
 * 
 */

static int __pyx_pf_2sf_15ShapePointProxy_7outline_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_outline); /*proto*/
static int __pyx_pf_2sf_15ShapePointProxy_7outline_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_outline) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_outline), __pyx_ptype_2sf_Color, 1, "outline", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2174
 * 
 *         def __set__(self, Color outline):
 *             self.parent.SetPointOutlineColor(self.index, outline.p_this[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->parent->SetPointOutlineColor(((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_v_self)->index, (((struct __pyx_obj_2sf_Color *)__pyx_v_outline)->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.ShapePointProxy.outline.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2178
 * 
 * cdef class Shape(Drawable):
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.p_this = <decl.Drawable*>new decl.Shape()
 * 
 */

static int __pyx_pf_2sf_5Shape___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_5Shape___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "sf.pyx":2179
 * cdef class Shape(Drawable):
 *     def __cinit__(self):
 *         self.p_this = <decl.Drawable*>new decl.Shape()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this = ((sf::Drawable *)new sf::Shape());

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2181
 *         self.p_this = <decl.Drawable*>new decl.Shape()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.p_this
 * 
 */

static void __pyx_pf_2sf_5Shape_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2sf_5Shape_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "sf.pyx":2182
 * 
 *     def __dealloc__(self):
 *         del self.p_this             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, points=None):
 */
  delete ((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this;

  __Pyx_RefNannyFinishContext();
}

/* "sf.pyx":2184
 *         del self.p_this
 * 
 *     def __init__(self, points=None):             # <<<<<<<<<<<<<<
 *         cdef ShapePoint p
 *         cdef Color color = Color(255, 255, 255)
 */

static int __pyx_pf_2sf_5Shape_2__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2sf_5Shape_2__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_points = 0;
  struct __pyx_obj_2sf_ShapePoint *__pyx_v_p;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  struct __pyx_obj_2sf_Color *__pyx_v_outline = 0;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__points,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__points);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_points = values[0];
  } else {
    __pyx_v_points = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_points = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_p = ((struct __pyx_obj_2sf_ShapePoint *)Py_None); __Pyx_INCREF(Py_None);

  /* "sf.pyx":2186
 *     def __init__(self, points=None):
 *         cdef ShapePoint p
 *         cdef Color color = Color(255, 255, 255)             # <<<<<<<<<<<<<<
 *         cdef Color outline = Color(0, 0, 0)
 *         cdef float x, y
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_68), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_color = ((struct __pyx_obj_2sf_Color *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":2187
 *         cdef ShapePoint p
 *         cdef Color color = Color(255, 255, 255)
 *         cdef Color outline = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 *         cdef float x, y
 *         cdef int l_p
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_69), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_outline = ((struct __pyx_obj_2sf_Color *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":2191
 *         cdef int l_p
 * 
 *         if points is not None:             # <<<<<<<<<<<<<<
 *             for p in points:
 *                 (<decl.Shape*>self.p_this).AddPoint(p.x, p.y, p.color.p_this[0],
 */
  __pyx_t_2 = (__pyx_v_points != Py_None);
  if (__pyx_t_2) {

    /* "sf.pyx":2192
 * 
 *         if points is not None:
 *             for p in points:             # <<<<<<<<<<<<<<
 *                 (<decl.Shape*>self.p_this).AddPoint(p.x, p.y, p.color.p_this[0],
 *                                                     p.outline.p_this[0])
 */
    if (PyList_CheckExact(__pyx_v_points) || PyTuple_CheckExact(__pyx_v_points)) {
      __pyx_t_3 = 0; __pyx_t_1 = __pyx_v_points; __Pyx_INCREF(__pyx_t_1);
    } else {
      __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_points); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
    }
    for (;;) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++;
      } else if (likely(PyTuple_CheckExact(__pyx_t_1))) {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++;
      } else {
        __pyx_t_4 = PyIter_Next(__pyx_t_1);
        if (!__pyx_t_4) {
          if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_2sf_ShapePoint))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_v_p));
      __pyx_v_p = ((struct __pyx_obj_2sf_ShapePoint *)__pyx_t_4);
      __pyx_t_4 = 0;

      /* "sf.pyx":2194
 *             for p in points:
 *                 (<decl.Shape*>self.p_this).AddPoint(p.x, p.y, p.color.p_this[0],
 *                                                     p.outline.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
      ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->AddPoint(__pyx_v_p->x, __pyx_v_p->y, (__pyx_v_p->color->p_this[0]), (__pyx_v_p->outline->p_this[0]));
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("sf.Shape.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_p);
  __Pyx_XDECREF((PyObject *)__pyx_v_color);
  __Pyx_XDECREF((PyObject *)__pyx_v_outline);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2196
 *                                                     p.outline.p_this[0])
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return (<decl.Shape*>self.p_this).GetPointsCount()
 * 
 */

static Py_ssize_t __pyx_pf_2sf_5Shape_3__len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pf_2sf_5Shape_3__len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannySetupContext("__len__");

  /* "sf.pyx":2197
 * 
 *     def __len__(self):
 *         return (<decl.Shape*>self.p_this).GetPointsCount()             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, unsigned int index):
 */
  __pyx_r = ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->GetPointsCount();
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2199
 *         return (<decl.Shape*>self.p_this).GetPointsCount()
 * 
 *     def __getitem__(self, unsigned int index):             # <<<<<<<<<<<<<<
 *         p = ShapePointProxy()
 *         p._init(<decl.Shape*>self.p_this, index)
 */

static PyObject *__pyx_pf_2sf_5Shape_4__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_index); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_4__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_index) {
  unsigned int __pyx_v_index;
  struct __pyx_obj_2sf_ShapePointProxy *__pyx_v_p;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__getitem__");
  assert(__pyx_arg_index); {
    __pyx_v_index = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_index); if (unlikely((__pyx_v_index == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.__getitem__");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_p = ((struct __pyx_obj_2sf_ShapePointProxy *)Py_None); __Pyx_INCREF(Py_None);

  /* "sf.pyx":2200
 * 
 *     def __getitem__(self, unsigned int index):
 *         p = ShapePointProxy()             # <<<<<<<<<<<<<<
 *         p._init(<decl.Shape*>self.p_this, index)
 * 
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_ShapePointProxy)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_v_p));
  __pyx_v_p = ((struct __pyx_obj_2sf_ShapePointProxy *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":2201
 *     def __getitem__(self, unsigned int index):
 *         p = ShapePointProxy()
 *         p._init(<decl.Shape*>self.p_this, index)             # <<<<<<<<<<<<<<
 * 
 *         return p
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_2sf_ShapePointProxy *)__pyx_v_p->__pyx_vtab)->_init(__pyx_v_p, ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this), __pyx_v_index); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":2203
 *         p._init(<decl.Shape*>self.p_this, index)
 * 
 *         return p             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, unsigned int index, ShapePoint point):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_p));
  __pyx_r = ((PyObject *)__pyx_v_p);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Shape.__getitem__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_p);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2205
 *         return p
 * 
 *     def __setitem__(self, unsigned int index, ShapePoint point):             # <<<<<<<<<<<<<<
 *         (<decl.Shape*>self.p_this).SetPointPosition(index, point.x, point.y)
 *         (<decl.Shape*>self.p_this).SetPointColor(index, point.color.p_this[0])
 */

static int __pyx_pf_2sf_5Shape_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_index, PyObject *__pyx_v_point); /*proto*/
static int __pyx_pf_2sf_5Shape_5__setitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_index, PyObject *__pyx_v_point) {
  unsigned int __pyx_v_index;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__setitem__");
  assert(__pyx_arg_index); {
    __pyx_v_index = __Pyx_PyInt_AsUnsignedInt(__pyx_arg_index); if (unlikely((__pyx_v_index == (unsigned int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.__setitem__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_point), __pyx_ptype_2sf_ShapePoint, 1, "point", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2206
 * 
 *     def __setitem__(self, unsigned int index, ShapePoint point):
 *         (<decl.Shape*>self.p_this).SetPointPosition(index, point.x, point.y)             # <<<<<<<<<<<<<<
 *         (<decl.Shape*>self.p_this).SetPointColor(index, point.color.p_this[0])
 *         (<decl.Shape*>self.p_this).SetPointOutlineColor(index,
 */
  ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->SetPointPosition(__pyx_v_index, ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_point)->x, ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_point)->y);

  /* "sf.pyx":2207
 *     def __setitem__(self, unsigned int index, ShapePoint point):
 *         (<decl.Shape*>self.p_this).SetPointPosition(index, point.x, point.y)
 *         (<decl.Shape*>self.p_this).SetPointColor(index, point.color.p_this[0])             # <<<<<<<<<<<<<<
 *         (<decl.Shape*>self.p_this).SetPointOutlineColor(index,
 *                                                         point.outline.p_this[0])
 */
  ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->SetPointColor(__pyx_v_index, (((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_point)->color->p_this[0]));

  /* "sf.pyx":2209
 *         (<decl.Shape*>self.p_this).SetPointColor(index, point.color.p_this[0])
 *         (<decl.Shape*>self.p_this).SetPointOutlineColor(index,
 *                                                         point.outline.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     property thickness:
 */
  ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->SetPointOutlineColor(__pyx_v_index, (((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_point)->outline->p_this[0]));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Shape.__setitem__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2212
 * 
 *     property thickness:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return (<decl.Shape*>self.p_this).GetOutlineThickness()
 * 
 */

static PyObject *__pyx_pf_2sf_5Shape_9thickness___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_9thickness___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "sf.pyx":2213
 *     property thickness:
 *         def __get__(self):
 *             return (<decl.Shape*>self.p_this).GetOutlineThickness()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->GetOutlineThickness()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.Shape.thickness.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2215
 *             return (<decl.Shape*>self.p_this).GetOutlineThickness()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             (<decl.Shape*>self.p_this).SetOutlineThickness(value)
 * 
 */

static int __pyx_pf_2sf_5Shape_9thickness_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_2sf_5Shape_9thickness_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsDouble(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2215; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.thickness.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2216
 * 
 *         def __set__(self, float value):
 *             (<decl.Shape*>self.p_this).SetOutlineThickness(value)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->SetOutlineThickness(__pyx_v_value);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2219
 * 
 *     @classmethod
 *     def line(cls, float p1x, float p1y, float p2x, float p2y, float thickness,             # <<<<<<<<<<<<<<
 *              Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 */

static PyObject *__pyx_pf_2sf_5Shape_6line(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_6line(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_p1x;
  float __pyx_v_p1y;
  float __pyx_v_p2x;
  float __pyx_v_p2y;
  float __pyx_v_thickness;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  float __pyx_v_outline;
  struct __pyx_obj_2sf_Color *__pyx_v_outline_color = 0;
  sf::Shape *__pyx_v_s;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__p1x,&__pyx_n_s__p1y,&__pyx_n_s__p2x,&__pyx_n_s__p2y,&__pyx_n_s__thickness,&__pyx_n_s__color,&__pyx_n_s__outline,&__pyx_n_s__outline_color,0};
  __Pyx_RefNannySetupContext("line");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[8] = {0,0,0,0,0,0,0,0};

    /* "sf.pyx":2220
 *     @classmethod
 *     def line(cls, float p1x, float p1y, float p2x, float p2y, float thickness,
 *              Color color, float outline=0.0, Color outline_color=None):             # <<<<<<<<<<<<<<
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)
 */
    values[7] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__p1x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__p1y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("line", 0, 6, 8, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__p2x);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("line", 0, 6, 8, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__p2y);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("line", 0, 6, 8, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__thickness);
      if (likely(values[4])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("line", 0, 6, 8, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  5:
      values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
      if (likely(values[5])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("line", 0, 6, 8, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  6:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline);
        if (value) { values[6] = value; kw_args--; }
      }
      case  7:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline_color);
        if (value) { values[7] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "line") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_p1x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_p1x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_p1y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_p1y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_p2x = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_p2x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_p2y = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_p2y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_thickness = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_thickness == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[5]);
    if (values[6]) {
      __pyx_v_outline = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_outline == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2220; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_outline = ((float)0.0);
    }
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)values[7]);
  } else {
    __pyx_v_outline = ((float)0.0);
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  8:
      __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 7));
      case  7:
      __pyx_v_outline = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 6)); if (unlikely((__pyx_v_outline == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2220; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  6:
      __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 5));
      __pyx_v_thickness = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_thickness == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_p2y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_p2y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_p2x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_p2x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_p1y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_p1y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_p1x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_p1x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("line", 0, 6, 8, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.line");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_outline_color);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_outline_color), __pyx_ptype_2sf_Color, 1, "outline_color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2221
 *     def line(cls, float p1x, float p1y, float p2x, float p2y, float thickness,
 *              Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:             # <<<<<<<<<<<<<<
 *             outline_color = Color(0, 0, 0)
 *         cdef decl.Shape *s = new decl.Shape()
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_outline_color) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2222
 *              Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 *         cdef decl.Shape *s = new decl.Shape()
 *         s[0] = decl.Line(p1x, p1y, p2x, p2y, thickness, color.p_this[0],
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_70), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_outline_color));
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "sf.pyx":2223
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)
 *         cdef decl.Shape *s = new decl.Shape()             # <<<<<<<<<<<<<<
 *         s[0] = decl.Line(p1x, p1y, p2x, p2y, thickness, color.p_this[0],
 *                          outline, outline_color.p_this[0])
 */
  __pyx_v_s = new sf::Shape();

  /* "sf.pyx":2224
 *             outline_color = Color(0, 0, 0)
 *         cdef decl.Shape *s = new decl.Shape()
 *         s[0] = decl.Line(p1x, p1y, p2x, p2y, thickness, color.p_this[0],             # <<<<<<<<<<<<<<
 *                          outline, outline_color.p_this[0])
 *         return  wrap_shape_instance(s)
 */
  (__pyx_v_s[0]) = sf::Shape::Line(__pyx_v_p1x, __pyx_v_p1y, __pyx_v_p2x, __pyx_v_p2y, __pyx_v_thickness, (__pyx_v_color->p_this[0]), __pyx_v_outline, (__pyx_v_outline_color->p_this[0]));

  /* "sf.pyx":2226
 *         s[0] = decl.Line(p1x, p1y, p2x, p2y, thickness, color.p_this[0],
 *                          outline, outline_color.p_this[0])
 *         return  wrap_shape_instance(s)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_shape_instance(__pyx_v_s)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Shape.line");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_outline_color);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2229
 * 
 *     @classmethod
 *     def rectangle(cls, float left, float top, float width, float height,             # <<<<<<<<<<<<<<
 *                   Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 */

static PyObject *__pyx_pf_2sf_5Shape_7rectangle(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_7rectangle(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_left;
  float __pyx_v_top;
  float __pyx_v_width;
  float __pyx_v_height;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  float __pyx_v_outline;
  struct __pyx_obj_2sf_Color *__pyx_v_outline_color = 0;
  sf::Shape *__pyx_v_s;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__left,&__pyx_n_s__top,&__pyx_n_s__width,&__pyx_n_s__height,&__pyx_n_s__color,&__pyx_n_s__outline,&__pyx_n_s__outline_color,0};
  __Pyx_RefNannySetupContext("rectangle");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[7] = {0,0,0,0,0,0,0};

    /* "sf.pyx":2230
 *     @classmethod
 *     def rectangle(cls, float left, float top, float width, float height,
 *                   Color color, float outline=0.0, Color outline_color=None):             # <<<<<<<<<<<<<<
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)
 */
    values[6] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__left);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__top);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("rectangle", 0, 5, 7, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__width);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("rectangle", 0, 5, 7, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("rectangle", 0, 5, 7, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
      if (likely(values[4])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("rectangle", 0, 5, 7, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  5:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline);
        if (value) { values[5] = value; kw_args--; }
      }
      case  6:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline_color);
        if (value) { values[6] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "rectangle") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_left = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_top = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_width = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[4]);
    if (values[5]) {
      __pyx_v_outline = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_outline == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2230; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_outline = ((float)0.0);
    }
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)values[6]);
  } else {
    __pyx_v_outline = ((float)0.0);
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  7:
      __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 6));
      case  6:
      __pyx_v_outline = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 5)); if (unlikely((__pyx_v_outline == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2230; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  5:
      __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 4));
      __pyx_v_height = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_height == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_width = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_width == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_top = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_top == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_left = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_left == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rectangle", 0, 5, 7, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.rectangle");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_outline_color);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_outline_color), __pyx_ptype_2sf_Color, 1, "outline_color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2231
 *     def rectangle(cls, float left, float top, float width, float height,
 *                   Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:             # <<<<<<<<<<<<<<
 *             outline_color = Color(0, 0, 0)
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_outline_color) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2232
 *                   Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_71), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_outline_color));
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "sf.pyx":2234
 *             outline_color = Color(0, 0, 0)
 * 
 *         cdef decl.Shape *s = new decl.Shape()             # <<<<<<<<<<<<<<
 *         s[0] = decl.Rectangle(left, top, width, height, color.p_this[0],
 *                               outline, outline_color.p_this[0])
 */
  __pyx_v_s = new sf::Shape();

  /* "sf.pyx":2235
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 *         s[0] = decl.Rectangle(left, top, width, height, color.p_this[0],             # <<<<<<<<<<<<<<
 *                               outline, outline_color.p_this[0])
 * 
 */
  (__pyx_v_s[0]) = sf::Shape::Rectangle(__pyx_v_left, __pyx_v_top, __pyx_v_width, __pyx_v_height, (__pyx_v_color->p_this[0]), __pyx_v_outline, (__pyx_v_outline_color->p_this[0]));

  /* "sf.pyx":2238
 *                               outline, outline_color.p_this[0])
 * 
 *         return  wrap_shape_instance(s)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_shape_instance(__pyx_v_s)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Shape.rectangle");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_outline_color);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2241
 * 
 *     @classmethod
 *     def rectangle_from_rect(cls, FloatRect rect, Color color, float outline=0.0,             # <<<<<<<<<<<<<<
 *                             Color outline_color=None):
 *         if outline_color is None:
 */

static PyObject *__pyx_pf_2sf_5Shape_8rectangle_from_rect(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_8rectangle_from_rect(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_2sf_FloatRect *__pyx_v_rect = 0;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  float __pyx_v_outline;
  struct __pyx_obj_2sf_Color *__pyx_v_outline_color = 0;
  sf::Shape *__pyx_v_s;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__rect,&__pyx_n_s__color,&__pyx_n_s__outline,&__pyx_n_s__outline_color,0};
  __Pyx_RefNannySetupContext("rectangle_from_rect");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};

    /* "sf.pyx":2242
 *     @classmethod
 *     def rectangle_from_rect(cls, FloatRect rect, Color color, float outline=0.0,
 *                             Color outline_color=None):             # <<<<<<<<<<<<<<
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)
 */
    values[3] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__rect);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("rectangle_from_rect", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline);
        if (value) { values[2] = value; kw_args--; }
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline_color);
        if (value) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "rectangle_from_rect") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_rect = ((struct __pyx_obj_2sf_FloatRect *)values[0]);
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[1]);
    if (values[2]) {
      __pyx_v_outline = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_outline == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "sf.pyx":2241
 * 
 *     @classmethod
 *     def rectangle_from_rect(cls, FloatRect rect, Color color, float outline=0.0,             # <<<<<<<<<<<<<<
 *                             Color outline_color=None):
 *         if outline_color is None:
 */
      __pyx_v_outline = ((float)0.0);
    }
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)values[3]);
  } else {
    __pyx_v_outline = ((float)0.0);

    /* "sf.pyx":2242
 *     @classmethod
 *     def rectangle_from_rect(cls, FloatRect rect, Color color, float outline=0.0,
 *                             Color outline_color=None):             # <<<<<<<<<<<<<<
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)
 */
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4:
      __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 3));
      case  3:
      __pyx_v_outline = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_outline == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2:
      __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 1));
      __pyx_v_rect = ((struct __pyx_obj_2sf_FloatRect *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rectangle_from_rect", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.rectangle_from_rect");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_outline_color);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rect), __pyx_ptype_2sf_FloatRect, 1, "rect", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_outline_color), __pyx_ptype_2sf_Color, 1, "outline_color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2243
 *     def rectangle_from_rect(cls, FloatRect rect, Color color, float outline=0.0,
 *                             Color outline_color=None):
 *         if outline_color is None:             # <<<<<<<<<<<<<<
 *             outline_color = Color(0, 0, 0)
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_outline_color) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2244
 *                             Color outline_color=None):
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_72), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_outline_color));
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "sf.pyx":2246
 *             outline_color = Color(0, 0, 0)
 * 
 *         cdef decl.Shape *s = new decl.Shape()             # <<<<<<<<<<<<<<
 *         s[0] = decl.Rectangle(rect.p_this[0], color.p_this[0], outline,
 *                               outline_color.p_this[0])
 */
  __pyx_v_s = new sf::Shape();

  /* "sf.pyx":2247
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 *         s[0] = decl.Rectangle(rect.p_this[0], color.p_this[0], outline,             # <<<<<<<<<<<<<<
 *                               outline_color.p_this[0])
 * 
 */
  (__pyx_v_s[0]) = sf::Shape::Rectangle((__pyx_v_rect->p_this[0]), (__pyx_v_color->p_this[0]), __pyx_v_outline, (__pyx_v_outline_color->p_this[0]));

  /* "sf.pyx":2250
 *                               outline_color.p_this[0])
 * 
 *         return  wrap_shape_instance(s)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_shape_instance(__pyx_v_s)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Shape.rectangle_from_rect");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_outline_color);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2253
 * 
 *     @classmethod
 *     def circle(cls, float x, float y, float radius, Color color,             # <<<<<<<<<<<<<<
 *                float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 */

static PyObject *__pyx_pf_2sf_5Shape_9circle(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_9circle(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_radius;
  struct __pyx_obj_2sf_Color *__pyx_v_color = 0;
  float __pyx_v_outline;
  struct __pyx_obj_2sf_Color *__pyx_v_outline_color = 0;
  sf::Shape *__pyx_v_s;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__radius,&__pyx_n_s__color,&__pyx_n_s__outline,&__pyx_n_s__outline_color,0};
  __Pyx_RefNannySetupContext("circle");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "sf.pyx":2254
 *     @classmethod
 *     def circle(cls, float x, float y, float radius, Color color,
 *                float outline=0.0, Color outline_color=None):             # <<<<<<<<<<<<<<
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)
 */
    values[5] = (PyObject *)((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("circle", 0, 4, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__radius);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("circle", 0, 4, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__color);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("circle", 0, 4, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline);
        if (value) { values[4] = value; kw_args--; }
      }
      case  5:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__outline_color);
        if (value) { values[5] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "circle") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_radius = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_radius == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_color = ((struct __pyx_obj_2sf_Color *)values[3]);
    if (values[4]) {
      __pyx_v_outline = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_outline == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2254; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_outline = ((float)0.0);
    }
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)values[5]);
  } else {
    __pyx_v_outline = ((float)0.0);
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  6:
      __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 5));
      case  5:
      __pyx_v_outline = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 4)); if (unlikely((__pyx_v_outline == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2254; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  4:
      __pyx_v_color = ((struct __pyx_obj_2sf_Color *)PyTuple_GET_ITEM(__pyx_args, 3));
      __pyx_v_radius = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_radius == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("circle", 0, 4, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.circle");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_outline_color);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_color), __pyx_ptype_2sf_Color, 1, "color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_outline_color), __pyx_ptype_2sf_Color, 1, "outline_color", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2254; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2255
 *     def circle(cls, float x, float y, float radius, Color color,
 *                float outline=0.0, Color outline_color=None):
 *         if outline_color is None:             # <<<<<<<<<<<<<<
 *             outline_color = Color(0, 0, 0)
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_outline_color) == Py_None);
  if (__pyx_t_1) {

    /* "sf.pyx":2256
 *                float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_73), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_outline_color));
    __pyx_v_outline_color = ((struct __pyx_obj_2sf_Color *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "sf.pyx":2258
 *             outline_color = Color(0, 0, 0)
 * 
 *         cdef decl.Shape *s = new decl.Shape()             # <<<<<<<<<<<<<<
 *         s[0] = decl.Circle(x, y, radius, color.p_this[0], outline,
 *                            outline_color.p_this[0])
 */
  __pyx_v_s = new sf::Shape();

  /* "sf.pyx":2259
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 *         s[0] = decl.Circle(x, y, radius, color.p_this[0], outline,             # <<<<<<<<<<<<<<
 *                            outline_color.p_this[0])
 * 
 */
  (__pyx_v_s[0]) = sf::Shape::Circle(__pyx_v_x, __pyx_v_y, __pyx_v_radius, (__pyx_v_color->p_this[0]), __pyx_v_outline, (__pyx_v_outline_color->p_this[0]));

  /* "sf.pyx":2262
 *                            outline_color.p_this[0])
 * 
 *         return  wrap_shape_instance(s)             # <<<<<<<<<<<<<<
 * 
 *     def append(self, ShapePoint p):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_f_2sf_wrap_shape_instance(__pyx_v_s)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("sf.Shape.circle");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_outline_color);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2264
 *         return  wrap_shape_instance(s)
 * 
 *     def append(self, ShapePoint p):             # <<<<<<<<<<<<<<
 *         (<decl.Shape*>self.p_this).AddPoint(p.x, p.y, p.color.p_this[0],
 *                                             p.outline.p_this[0])
 */

static PyObject *__pyx_pf_2sf_5Shape_10append(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_10append(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("append");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_2sf_ShapePoint, 1, "p", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2264; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "sf.pyx":2266
 *     def append(self, ShapePoint p):
 *         (<decl.Shape*>self.p_this).AddPoint(p.x, p.y, p.color.p_this[0],
 *                                             p.outline.p_this[0])             # <<<<<<<<<<<<<<
 * 
 *     def enable_fill(self, bint value):
 */
  ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->AddPoint(((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_p)->x, ((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_p)->y, (((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_p)->color->p_this[0]), (((struct __pyx_obj_2sf_ShapePoint *)__pyx_v_p)->outline->p_this[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("sf.Shape.append");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2268
 *                                             p.outline.p_this[0])
 * 
 *     def enable_fill(self, bint value):             # <<<<<<<<<<<<<<
 *         (<decl.Shape*>self.p_this).EnableFill(value)
 * 
 */

static PyObject *__pyx_pf_2sf_5Shape_11enable_fill(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_11enable_fill(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("enable_fill");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2268; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.enable_fill");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2269
 * 
 *     def enable_fill(self, bint value):
 *         (<decl.Shape*>self.p_this).EnableFill(value)             # <<<<<<<<<<<<<<
 * 
 *     def enable_outline(self, bint value):
 */
  ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->EnableFill(__pyx_v_value);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2271
 *         (<decl.Shape*>self.p_this).EnableFill(value)
 * 
 *     def enable_outline(self, bint value):             # <<<<<<<<<<<<<<
 *         (<decl.Shape*>self.p_this).EnableOutline(value)
 * 
 */

static PyObject *__pyx_pf_2sf_5Shape_12enable_outline(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static PyObject *__pyx_pf_2sf_5Shape_12enable_outline(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("enable_outline");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2271; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("sf.Shape.enable_outline");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "sf.pyx":2272
 * 
 *     def enable_outline(self, bint value):
 *         (<decl.Shape*>self.p_this).EnableOutline(value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((sf::Shape *)((struct __pyx_obj_2sf_Shape *)__pyx_v_self)->__pyx_base.p_this)->EnableOutline(__pyx_v_value);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "sf.pyx":2275
 * 
 * 
 * cdef Shape wrap_shape_instance(decl.Shape *p_cpp_instance):             # <<<<<<<<<<<<<<
 *     cdef Shape ret = Shape.__new__(Shape)
 *     ret.p_this = <decl.Drawable*>p_cpp_instance
 */

static  struct __pyx_obj_2sf_Shape *__pyx_f_2sf_wrap_shape_instance(sf::Shape *__pyx_v_p_cpp_instance) {
  struct __pyx_obj_2sf_Shape *__pyx_v_ret = 0;
  struct __pyx_obj_2sf_Shape *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_shape_instance");

  /* "sf.pyx":2276
 * 
 * cdef Shape wrap_shape_instance(decl.Shape *p_cpp_instance):
 *     cdef Shape ret = Shape.__new__(Shape)             # <<<<<<<<<<<<<<
 *     ret.p_this = <decl.Drawable*>p_cpp_instance
 * 
 */
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_ptype_2sf_Shape)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Shape)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_ret = ((struct __pyx_obj_2sf_Shape *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":2277
 * cdef Shape wrap_shape_instance(decl.Shape *p_cpp_instance):
 *     cdef Shape ret = Shape.__new__(Shape)
 *     ret.p_this = <decl.Drawable*>p_cpp_instance             # <<<<<<<<<<<<<<
 * 
 *     return ret
 */
  __pyx_v_ret->__pyx_base.p_this = ((sf::Drawable *)__pyx_v_p_cpp_instance);

  /* "sf.pyx":2279
 *     ret.p_this = <decl.Drawable*>p_cpp_instance
 * 
 *     return ret             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = __pyx_v_ret;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_2sf_Shape *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("sf.wrap_shape_instance");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_2sf_RenderWindow(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_2sf_RenderWindow *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_2sf_RenderWindow *)o);
  p->input = ((struct __pyx_obj_2sf_Input *)Py_None); Py_INCREF(Py_None);
  if (__pyx_pf_2sf_12RenderWindow___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_RenderWindow(PyObject *o) {
  struct __pyx_obj_2sf_RenderWindow *p = (struct __pyx_obj_2sf_RenderWindow *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_12RenderWindow_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(((PyObject *)p->input));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_2sf_RenderWindow(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_2sf_RenderWindow *p = (struct __pyx_obj_2sf_RenderWindow *)o;
  if (p->input) {
    e = (*v)(((PyObject*)p->input), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_2sf_RenderWindow(PyObject *o) {
  struct __pyx_obj_2sf_RenderWindow *p = (struct __pyx_obj_2sf_RenderWindow *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->input);
  p->input = ((struct __pyx_obj_2sf_Input *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static int __pyx_setprop_2sf_12RenderWindow_active(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_6active___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static int __pyx_setprop_2sf_12RenderWindow_cursor_position(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_15cursor_position___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_default_view(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_12default_view___get__(o);
}

static int __pyx_setprop_2sf_12RenderWindow_framerate_limit(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_15framerate_limit___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_frame_time(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_10frame_time___get__(o);
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_height(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_6height___get__(o);
}

static int __pyx_setprop_2sf_12RenderWindow_height(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_6height_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static int __pyx_setprop_2sf_12RenderWindow_joystick_threshold(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_18joystick_threshold___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static int __pyx_setprop_2sf_12RenderWindow_key_repeat_enabled(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_18key_repeat_enabled___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_opened(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_6opened___get__(o);
}

static int __pyx_setprop_2sf_12RenderWindow_position(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_8position___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_settings(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_8settings___get__(o);
}

static int __pyx_setprop_2sf_12RenderWindow_show_mouse_cursor(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_17show_mouse_cursor___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_size(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_4size___get__(o);
}

static int __pyx_setprop_2sf_12RenderWindow_size(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_4size_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_system_handle(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_13system_handle___get__(o);
}

static int __pyx_setprop_2sf_12RenderWindow_title(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_5title___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_view(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_4view___get__(o);
}

static int __pyx_setprop_2sf_12RenderWindow_view(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_4view_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_12RenderWindow_width(PyObject *o, void *x) {
  return __pyx_pf_2sf_12RenderWindow_5width___get__(o);
}

static int __pyx_setprop_2sf_12RenderWindow_width(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_12RenderWindow_5width_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_RenderWindow[] = {
  {__Pyx_NAMESTR("__next__"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_3__next__, METH_NOARGS|METH_COEXIST, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("clear"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_4clear, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("close"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_5close, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("convert_coords"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_6convert_coords, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("display"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_7display, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("draw"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_8draw, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_input"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_9get_input, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_viewport"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_10get_viewport, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("iter_events"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_11iter_events, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_2sf_12RenderWindow_11iter_events)},
  {__Pyx_NAMESTR("restore_gl_states"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_12restore_gl_states, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("save_gl_states"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_13save_gl_states, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_icon"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_14set_icon, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("show"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_15show, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("wait_event"), (PyCFunction)__pyx_pf_2sf_12RenderWindow_16wait_event, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_RenderWindow[] = {
  {(char *)"active", 0, __pyx_setprop_2sf_12RenderWindow_active, 0, 0},
  {(char *)"cursor_position", 0, __pyx_setprop_2sf_12RenderWindow_cursor_position, 0, 0},
  {(char *)"default_view", __pyx_getprop_2sf_12RenderWindow_default_view, 0, 0, 0},
  {(char *)"framerate_limit", 0, __pyx_setprop_2sf_12RenderWindow_framerate_limit, 0, 0},
  {(char *)"frame_time", __pyx_getprop_2sf_12RenderWindow_frame_time, 0, 0, 0},
  {(char *)"height", __pyx_getprop_2sf_12RenderWindow_height, __pyx_setprop_2sf_12RenderWindow_height, 0, 0},
  {(char *)"joystick_threshold", 0, __pyx_setprop_2sf_12RenderWindow_joystick_threshold, 0, 0},
  {(char *)"key_repeat_enabled", 0, __pyx_setprop_2sf_12RenderWindow_key_repeat_enabled, 0, 0},
  {(char *)"opened", __pyx_getprop_2sf_12RenderWindow_opened, 0, 0, 0},
  {(char *)"position", 0, __pyx_setprop_2sf_12RenderWindow_position, 0, 0},
  {(char *)"settings", __pyx_getprop_2sf_12RenderWindow_settings, 0, 0, 0},
  {(char *)"show_mouse_cursor", 0, __pyx_setprop_2sf_12RenderWindow_show_mouse_cursor, 0, 0},
  {(char *)"size", __pyx_getprop_2sf_12RenderWindow_size, __pyx_setprop_2sf_12RenderWindow_size, 0, 0},
  {(char *)"system_handle", __pyx_getprop_2sf_12RenderWindow_system_handle, 0, 0, 0},
  {(char *)"title", 0, __pyx_setprop_2sf_12RenderWindow_title, 0, 0},
  {(char *)"view", __pyx_getprop_2sf_12RenderWindow_view, __pyx_setprop_2sf_12RenderWindow_view, 0, 0},
  {(char *)"width", __pyx_getprop_2sf_12RenderWindow_width, __pyx_setprop_2sf_12RenderWindow_width, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_RenderWindow = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_RenderWindow = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_RenderWindow = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_RenderWindow = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_RenderWindow = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.RenderWindow"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_RenderWindow), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_RenderWindow, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_RenderWindow, /*tp_as_number*/
  &__pyx_tp_as_sequence_RenderWindow, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_RenderWindow, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_RenderWindow, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_2sf_RenderWindow, /*tp_traverse*/
  __pyx_tp_clear_2sf_RenderWindow, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pf_2sf_12RenderWindow_2__iter__, /*tp_iter*/
  __pyx_pf_2sf_12RenderWindow_3__next__, /*tp_iternext*/
  __pyx_methods_2sf_RenderWindow, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_RenderWindow, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_RenderWindow, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Mouse(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Mouse(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_2sf_Mouse[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Mouse = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Mouse = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Mouse = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Mouse = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Mouse = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Mouse"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Mouse), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Mouse, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Mouse, /*tp_as_number*/
  &__pyx_tp_as_sequence_Mouse, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Mouse, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Mouse, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Mouse, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Mouse, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Joy(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Joy(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_2sf_Joy[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Joy = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Joy = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Joy = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Joy = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Joy = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Joy"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Joy), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Joy, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Joy, /*tp_as_number*/
  &__pyx_tp_as_sequence_Joy, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Joy, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Joy, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Joy, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Joy, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Key(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Key(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_2sf_Key[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Key = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Key = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Key = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Key = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Key = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Key"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Key), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Key, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Key, /*tp_as_number*/
  &__pyx_tp_as_sequence_Key, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Key, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Key, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Key, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Key, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_BlendMode(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_BlendMode(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_2sf_BlendMode[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_BlendMode = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_BlendMode = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BlendMode = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_BlendMode = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_BlendMode = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.BlendMode"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_BlendMode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_BlendMode, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_BlendMode, /*tp_as_number*/
  &__pyx_tp_as_sequence_BlendMode, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BlendMode, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_BlendMode, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_BlendMode, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_BlendMode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Style(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Style(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_2sf_Style[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Style = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Style = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Style = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Style = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Style = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Style"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Style), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Style, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Style, /*tp_as_number*/
  &__pyx_tp_as_sequence_Style, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Style, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Style, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Style, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Style, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_IntRect(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_2sf_7IntRect___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_IntRect(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_7IntRect_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_7IntRect_left(PyObject *o, void *x) {
  return __pyx_pf_2sf_7IntRect_4left___get__(o);
}

static int __pyx_setprop_2sf_7IntRect_left(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_7IntRect_4left_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_7IntRect_top(PyObject *o, void *x) {
  return __pyx_pf_2sf_7IntRect_3top___get__(o);
}

static int __pyx_setprop_2sf_7IntRect_top(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_7IntRect_3top_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_7IntRect_width(PyObject *o, void *x) {
  return __pyx_pf_2sf_7IntRect_5width___get__(o);
}

static int __pyx_setprop_2sf_7IntRect_width(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_7IntRect_5width_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_7IntRect_height(PyObject *o, void *x) {
  return __pyx_pf_2sf_7IntRect_6height___get__(o);
}

static int __pyx_setprop_2sf_7IntRect_height(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_7IntRect_6height_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_IntRect[] = {
  {__Pyx_NAMESTR("contains"), (PyCFunction)__pyx_pf_2sf_7IntRect_3contains, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("intersects"), (PyCFunction)__pyx_pf_2sf_7IntRect_4intersects, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_IntRect[] = {
  {(char *)"left", __pyx_getprop_2sf_7IntRect_left, __pyx_setprop_2sf_7IntRect_left, 0, 0},
  {(char *)"top", __pyx_getprop_2sf_7IntRect_top, __pyx_setprop_2sf_7IntRect_top, 0, 0},
  {(char *)"width", __pyx_getprop_2sf_7IntRect_width, __pyx_setprop_2sf_7IntRect_width, 0, 0},
  {(char *)"height", __pyx_getprop_2sf_7IntRect_height, __pyx_setprop_2sf_7IntRect_height, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_IntRect = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_IntRect = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_IntRect = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_IntRect = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_IntRect = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.IntRect"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_IntRect), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_IntRect, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pf_2sf_7IntRect_2__repr__, /*tp_repr*/
  &__pyx_tp_as_number_IntRect, /*tp_as_number*/
  &__pyx_tp_as_sequence_IntRect, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_IntRect, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_IntRect, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_IntRect, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_IntRect, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_IntRect, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_FloatRect(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_FloatRect(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_9FloatRect_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_9FloatRect_left(PyObject *o, void *x) {
  return __pyx_pf_2sf_9FloatRect_4left___get__(o);
}

static int __pyx_setprop_2sf_9FloatRect_left(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_9FloatRect_4left_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_9FloatRect_top(PyObject *o, void *x) {
  return __pyx_pf_2sf_9FloatRect_3top___get__(o);
}

static int __pyx_setprop_2sf_9FloatRect_top(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_9FloatRect_3top_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_9FloatRect_width(PyObject *o, void *x) {
  return __pyx_pf_2sf_9FloatRect_5width___get__(o);
}

static int __pyx_setprop_2sf_9FloatRect_width(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_9FloatRect_5width_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_9FloatRect_height(PyObject *o, void *x) {
  return __pyx_pf_2sf_9FloatRect_6height___get__(o);
}

static int __pyx_setprop_2sf_9FloatRect_height(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_9FloatRect_6height_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_FloatRect[] = {
  {__Pyx_NAMESTR("contains"), (PyCFunction)__pyx_pf_2sf_9FloatRect_3contains, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("intersects"), (PyCFunction)__pyx_pf_2sf_9FloatRect_4intersects, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_FloatRect[] = {
  {(char *)"left", __pyx_getprop_2sf_9FloatRect_left, __pyx_setprop_2sf_9FloatRect_left, 0, 0},
  {(char *)"top", __pyx_getprop_2sf_9FloatRect_top, __pyx_setprop_2sf_9FloatRect_top, 0, 0},
  {(char *)"width", __pyx_getprop_2sf_9FloatRect_width, __pyx_setprop_2sf_9FloatRect_width, 0, 0},
  {(char *)"height", __pyx_getprop_2sf_9FloatRect_height, __pyx_setprop_2sf_9FloatRect_height, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_FloatRect = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_FloatRect = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_FloatRect = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_FloatRect = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_FloatRect = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.FloatRect"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_FloatRect), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_FloatRect, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pf_2sf_9FloatRect_2__repr__, /*tp_repr*/
  &__pyx_tp_as_number_FloatRect, /*tp_as_number*/
  &__pyx_tp_as_sequence_FloatRect, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_FloatRect, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_FloatRect, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_FloatRect, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_FloatRect, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_9FloatRect___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_FloatRect, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Matrix3(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Matrix3(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_7Matrix3_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_2sf_Matrix3[] = {
  {__Pyx_NAMESTR("projection"), (PyCFunction)__pyx_pf_2sf_7Matrix3_4projection, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("transformation"), (PyCFunction)__pyx_pf_2sf_7Matrix3_5transformation, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_inverse"), (PyCFunction)__pyx_pf_2sf_7Matrix3_6get_inverse, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("transform"), (PyCFunction)__pyx_pf_2sf_7Matrix3_7transform, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Matrix3 = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  __pyx_pf_2sf_7Matrix3_3__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Matrix3 = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Matrix3 = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Matrix3 = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Matrix3 = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Matrix3"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Matrix3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Matrix3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Matrix3, /*tp_as_number*/
  &__pyx_tp_as_sequence_Matrix3, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Matrix3, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pf_2sf_7Matrix3_2__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Matrix3, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Matrix3, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_7Matrix3___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Matrix3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Clock(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_2sf_5Clock___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_Clock(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_5Clock_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_5Clock_elapsed_time(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Clock_12elapsed_time___get__(o);
}

static PyMethodDef __pyx_methods_2sf_Clock[] = {
  {__Pyx_NAMESTR("reset"), (PyCFunction)__pyx_pf_2sf_5Clock_2reset, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Clock[] = {
  {(char *)"elapsed_time", __pyx_getprop_2sf_5Clock_elapsed_time, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Clock = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Clock = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Clock = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Clock = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Clock = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Clock"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Clock), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Clock, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Clock, /*tp_as_number*/
  &__pyx_tp_as_sequence_Clock, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Clock, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Clock, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Clock, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Clock, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Clock, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Color(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Color(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_5Color_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_5Color_r(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Color_1r___get__(o);
}

static int __pyx_setprop_2sf_5Color_r(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Color_1r_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Color_g(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Color_1g___get__(o);
}

static int __pyx_setprop_2sf_5Color_g(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Color_1g_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Color_b(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Color_1b___get__(o);
}

static int __pyx_setprop_2sf_5Color_b(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Color_1b_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Color_a(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Color_1a___get__(o);
}

static int __pyx_setprop_2sf_5Color_a(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Color_1a_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_Color[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Color[] = {
  {(char *)"r", __pyx_getprop_2sf_5Color_r, __pyx_setprop_2sf_5Color_r, 0, 0},
  {(char *)"g", __pyx_getprop_2sf_5Color_g, __pyx_setprop_2sf_5Color_g, 0, 0},
  {(char *)"b", __pyx_getprop_2sf_5Color_b, __pyx_setprop_2sf_5Color_b, 0, 0},
  {(char *)"a", __pyx_getprop_2sf_5Color_a, __pyx_setprop_2sf_5Color_a, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Color = {
  __pyx_pf_2sf_5Color_4__add__, /*nb_add*/
  0, /*nb_subtract*/
  __pyx_pf_2sf_5Color_5__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Color = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Color = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Color = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Color = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Color"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Color), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Color, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pf_2sf_5Color_2__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Color, /*tp_as_number*/
  &__pyx_tp_as_sequence_Color, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Color, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Color, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pf_2sf_5Color_3__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Color, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Color, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_5Color___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Color, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_SoundBuffer(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_SoundBuffer(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_11SoundBuffer_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_11SoundBuffer_channels_count(PyObject *o, void *x) {
  return __pyx_pf_2sf_11SoundBuffer_14channels_count___get__(o);
}

static PyObject *__pyx_getprop_2sf_11SoundBuffer_duration(PyObject *o, void *x) {
  return __pyx_pf_2sf_11SoundBuffer_8duration___get__(o);
}

static PyObject *__pyx_getprop_2sf_11SoundBuffer_sample_rate(PyObject *o, void *x) {
  return __pyx_pf_2sf_11SoundBuffer_11sample_rate___get__(o);
}

static PyObject *__pyx_getprop_2sf_11SoundBuffer_samples(PyObject *o, void *x) {
  return __pyx_pf_2sf_11SoundBuffer_7samples___get__(o);
}

static PyObject *__pyx_getprop_2sf_11SoundBuffer_samples_count(PyObject *o, void *x) {
  return __pyx_pf_2sf_11SoundBuffer_13samples_count___get__(o);
}

static PyMethodDef __pyx_methods_2sf_SoundBuffer[] = {
  {__Pyx_NAMESTR("load_from_file"), (PyCFunction)__pyx_pf_2sf_11SoundBuffer_2load_from_file, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_from_memory"), (PyCFunction)__pyx_pf_2sf_11SoundBuffer_3load_from_memory, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_from_samples"), (PyCFunction)__pyx_pf_2sf_11SoundBuffer_4load_from_samples, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("save_to_file"), (PyCFunction)__pyx_pf_2sf_11SoundBuffer_5save_to_file, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_SoundBuffer[] = {
  {(char *)"channels_count", __pyx_getprop_2sf_11SoundBuffer_channels_count, 0, 0, 0},
  {(char *)"duration", __pyx_getprop_2sf_11SoundBuffer_duration, 0, 0, 0},
  {(char *)"sample_rate", __pyx_getprop_2sf_11SoundBuffer_sample_rate, 0, 0, 0},
  {(char *)"samples", __pyx_getprop_2sf_11SoundBuffer_samples, 0, 0, 0},
  {(char *)"samples_count", __pyx_getprop_2sf_11SoundBuffer_samples_count, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SoundBuffer = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SoundBuffer = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SoundBuffer = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SoundBuffer = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_SoundBuffer = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.SoundBuffer"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_SoundBuffer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_SoundBuffer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_SoundBuffer, /*tp_as_number*/
  &__pyx_tp_as_sequence_SoundBuffer, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SoundBuffer, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SoundBuffer, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_SoundBuffer, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_SoundBuffer, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_11SoundBuffer___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_SoundBuffer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Sound(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_2sf_5Sound___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_Sound(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_5Sound_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_5Sound_attenuation(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_11attenuation___get__(o);
}

static int __pyx_setprop_2sf_5Sound_attenuation(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_11attenuation_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Sound_buffer(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_6buffer___get__(o);
}

static int __pyx_setprop_2sf_5Sound_buffer(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_6buffer_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Sound_loop(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_4loop___get__(o);
}

static int __pyx_setprop_2sf_5Sound_loop(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_4loop_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Sound_min_distance(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_12min_distance___get__(o);
}

static int __pyx_setprop_2sf_5Sound_min_distance(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_12min_distance_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Sound_pitch(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_5pitch___get__(o);
}

static int __pyx_setprop_2sf_5Sound_pitch(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_5pitch_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Sound_playing_offset(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_14playing_offset___get__(o);
}

static int __pyx_setprop_2sf_5Sound_playing_offset(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_14playing_offset_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Sound_position(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_8position___get__(o);
}

static int __pyx_setprop_2sf_5Sound_position(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_8position_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Sound_relative_to_listener(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_20relative_to_listener___get__(o);
}

static int __pyx_setprop_2sf_5Sound_relative_to_listener(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_20relative_to_listener_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Sound_status(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_6status___get__(o);
}

static PyObject *__pyx_getprop_2sf_5Sound_volume(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Sound_6volume___get__(o);
}

static int __pyx_setprop_2sf_5Sound_volume(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Sound_6volume_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_Sound[] = {
  {__Pyx_NAMESTR("pause"), (PyCFunction)__pyx_pf_2sf_5Sound_2pause, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("play"), (PyCFunction)__pyx_pf_2sf_5Sound_3play, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("stop"), (PyCFunction)__pyx_pf_2sf_5Sound_4stop, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Sound[] = {
  {(char *)"attenuation", __pyx_getprop_2sf_5Sound_attenuation, __pyx_setprop_2sf_5Sound_attenuation, 0, 0},
  {(char *)"buffer", __pyx_getprop_2sf_5Sound_buffer, __pyx_setprop_2sf_5Sound_buffer, 0, 0},
  {(char *)"loop", __pyx_getprop_2sf_5Sound_loop, __pyx_setprop_2sf_5Sound_loop, 0, 0},
  {(char *)"min_distance", __pyx_getprop_2sf_5Sound_min_distance, __pyx_setprop_2sf_5Sound_min_distance, 0, 0},
  {(char *)"pitch", __pyx_getprop_2sf_5Sound_pitch, __pyx_setprop_2sf_5Sound_pitch, 0, 0},
  {(char *)"playing_offset", __pyx_getprop_2sf_5Sound_playing_offset, __pyx_setprop_2sf_5Sound_playing_offset, 0, 0},
  {(char *)"position", __pyx_getprop_2sf_5Sound_position, __pyx_setprop_2sf_5Sound_position, 0, 0},
  {(char *)"relative_to_listener", __pyx_getprop_2sf_5Sound_relative_to_listener, __pyx_setprop_2sf_5Sound_relative_to_listener, 0, 0},
  {(char *)"status", __pyx_getprop_2sf_5Sound_status, 0, 0, 0},
  {(char *)"volume", __pyx_getprop_2sf_5Sound_volume, __pyx_setprop_2sf_5Sound_volume, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Sound = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Sound = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Sound = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Sound = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Sound = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Sound"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Sound), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Sound, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Sound, /*tp_as_number*/
  &__pyx_tp_as_sequence_Sound, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Sound, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Sound, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Sound, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Sound, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Sound, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Input(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Input(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_5Input_mouse_x(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Input_7mouse_x___get__(o);
}

static PyObject *__pyx_getprop_2sf_5Input_mouse_y(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Input_7mouse_y___get__(o);
}

static PyMethodDef __pyx_methods_2sf_Input[] = {
  {__Pyx_NAMESTR("get_joystick_axis"), (PyCFunction)__pyx_pf_2sf_5Input_1get_joystick_axis, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_mouse_x"), (PyCFunction)__pyx_pf_2sf_5Input_2get_mouse_x, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_mouse_y"), (PyCFunction)__pyx_pf_2sf_5Input_3get_mouse_y, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("is_key_down"), (PyCFunction)__pyx_pf_2sf_5Input_4is_key_down, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("is_mouse_button_down"), (PyCFunction)__pyx_pf_2sf_5Input_5is_mouse_button_down, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("is_joystick_button_down"), (PyCFunction)__pyx_pf_2sf_5Input_6is_joystick_button_down, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Input[] = {
  {(char *)"mouse_x", __pyx_getprop_2sf_5Input_mouse_x, 0, 0, 0},
  {(char *)"mouse_y", __pyx_getprop_2sf_5Input_mouse_y, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Input = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Input = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Input = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Input = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Input = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Input"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Input), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Input, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Input, /*tp_as_number*/
  &__pyx_tp_as_sequence_Input, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Input, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Input, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Input, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Input, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_5Input___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Input, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Glyph(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Glyph(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_5Glyph_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_5Glyph_advance(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Glyph_7advance___get__(o);
}

static PyObject *__pyx_getprop_2sf_5Glyph_bounds(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Glyph_6bounds___get__(o);
}

static PyObject *__pyx_getprop_2sf_5Glyph_sub_rect(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Glyph_8sub_rect___get__(o);
}

static PyMethodDef __pyx_methods_2sf_Glyph[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Glyph[] = {
  {(char *)"advance", __pyx_getprop_2sf_5Glyph_advance, 0, 0, 0},
  {(char *)"bounds", __pyx_getprop_2sf_5Glyph_bounds, 0, 0, 0},
  {(char *)"sub_rect", __pyx_getprop_2sf_5Glyph_sub_rect, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Glyph = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Glyph = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Glyph = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Glyph = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Glyph = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Glyph"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Glyph), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Glyph, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Glyph, /*tp_as_number*/
  &__pyx_tp_as_sequence_Glyph, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Glyph, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Glyph, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Glyph, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Glyph, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_5Glyph___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Glyph, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Font(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_2sf_4Font___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_Font(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_4Font_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_2sf_Font[] = {
  {__Pyx_NAMESTR("load_from_file"), (PyCFunction)__pyx_pf_2sf_4Font_2load_from_file, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_from_memory"), (PyCFunction)__pyx_pf_2sf_4Font_3load_from_memory, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_glyph"), (PyCFunction)__pyx_pf_2sf_4Font_4get_glyph, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_image"), (PyCFunction)__pyx_pf_2sf_4Font_5get_image, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_kerning"), (PyCFunction)__pyx_pf_2sf_4Font_6get_kerning, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_line_spacing"), (PyCFunction)__pyx_pf_2sf_4Font_7get_line_spacing, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Font = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Font = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Font = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Font = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Font = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Font"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Font), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Font, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Font, /*tp_as_number*/
  &__pyx_tp_as_sequence_Font, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Font, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Font, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Font, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Font, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Image(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Image(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_5Image_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_2sf_Image(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_2sf_Image(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pf_2sf_5Image_3__setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Image_height(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Image_6height___get__(o);
}

static PyObject *__pyx_getprop_2sf_5Image_smooth(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Image_6smooth___get__(o);
}

static int __pyx_setprop_2sf_5Image_smooth(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Image_6smooth_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Image_width(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Image_5width___get__(o);
}

static PyMethodDef __pyx_methods_2sf_Image[] = {
  {__Pyx_NAMESTR("load_from_file"), (PyCFunction)__pyx_pf_2sf_5Image_4load_from_file, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_from_screen"), (PyCFunction)__pyx_pf_2sf_5Image_5load_from_screen, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_2sf_5Image_5load_from_screen)},
  {__Pyx_NAMESTR("load_from_memory"), (PyCFunction)__pyx_pf_2sf_5Image_6load_from_memory, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_from_pixels"), (PyCFunction)__pyx_pf_2sf_5Image_7load_from_pixels, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_maximum_size"), (PyCFunction)__pyx_pf_2sf_5Image_8get_maximum_size, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("bind"), (PyCFunction)__pyx_pf_2sf_5Image_9bind, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("copy"), (PyCFunction)__pyx_pf_2sf_5Image_10copy, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("create_mask_from_color"), (PyCFunction)__pyx_pf_2sf_5Image_11create_mask_from_color, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_pixel"), (PyCFunction)__pyx_pf_2sf_5Image_12get_pixel, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_pixels"), (PyCFunction)__pyx_pf_2sf_5Image_13get_pixels, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_2sf_5Image_13get_pixels)},
  {__Pyx_NAMESTR("get_tex_coords"), (PyCFunction)__pyx_pf_2sf_5Image_14get_tex_coords, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("save_to_file"), (PyCFunction)__pyx_pf_2sf_5Image_15save_to_file, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_pixel"), (PyCFunction)__pyx_pf_2sf_5Image_16set_pixel, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("update_pixels"), (PyCFunction)__pyx_pf_2sf_5Image_17update_pixels, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Image[] = {
  {(char *)"height", __pyx_getprop_2sf_5Image_height, 0, 0, 0},
  {(char *)"smooth", __pyx_getprop_2sf_5Image_smooth, __pyx_setprop_2sf_5Image_smooth, 0, 0},
  {(char *)"width", __pyx_getprop_2sf_5Image_width, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Image = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Image = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_2sf_Image, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Image = {
  0, /*mp_length*/
  __pyx_pf_2sf_5Image_2__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_2sf_Image, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Image = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Image = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Image"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Image), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Image, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Image, /*tp_as_number*/
  &__pyx_tp_as_sequence_Image, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Image, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Image, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Image, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Image, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_5Image___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Image, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Drawable(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_2sf_8Drawable___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_Drawable(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_8Drawable_blend_mode(PyObject *o, void *x) {
  return __pyx_pf_2sf_8Drawable_10blend_mode___get__(o);
}

static int __pyx_setprop_2sf_8Drawable_blend_mode(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_8Drawable_10blend_mode_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_8Drawable_color(PyObject *o, void *x) {
  return __pyx_pf_2sf_8Drawable_5color___get__(o);
}

static int __pyx_setprop_2sf_8Drawable_color(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_8Drawable_5color_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_8Drawable_origin(PyObject *o, void *x) {
  return __pyx_pf_2sf_8Drawable_6origin___get__(o);
}

static int __pyx_setprop_2sf_8Drawable_origin(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_8Drawable_6origin_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_8Drawable_position(PyObject *o, void *x) {
  return __pyx_pf_2sf_8Drawable_8position___get__(o);
}

static int __pyx_setprop_2sf_8Drawable_position(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_8Drawable_8position_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_8Drawable_rotation(PyObject *o, void *x) {
  return __pyx_pf_2sf_8Drawable_8rotation___get__(o);
}

static int __pyx_setprop_2sf_8Drawable_rotation(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_8Drawable_8rotation_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_8Drawable_scale(PyObject *o, void *x) {
  return __pyx_pf_2sf_8Drawable_5scale___get__(o);
}

static int __pyx_setprop_2sf_8Drawable_scale(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_8Drawable_5scale_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_8Drawable_x(PyObject *o, void *x) {
  return __pyx_pf_2sf_8Drawable_1x___get__(o);
}

static int __pyx_setprop_2sf_8Drawable_x(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_8Drawable_1x_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_8Drawable_y(PyObject *o, void *x) {
  return __pyx_pf_2sf_8Drawable_1y___get__(o);
}

static int __pyx_setprop_2sf_8Drawable_y(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_8Drawable_1y_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_Drawable[] = {
  {__Pyx_NAMESTR("tranform_to_local"), (PyCFunction)__pyx_pf_2sf_8Drawable_2tranform_to_local, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("transform_to_global"), (PyCFunction)__pyx_pf_2sf_8Drawable_3transform_to_global, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("move"), (PyCFunction)__pyx_pf_2sf_8Drawable_4move, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("rotate"), (PyCFunction)__pyx_pf_2sf_8Drawable_5rotate, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("scale"), (PyCFunction)__pyx_pf_2sf_8Drawable_6scale, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Drawable[] = {
  {(char *)"blend_mode", __pyx_getprop_2sf_8Drawable_blend_mode, __pyx_setprop_2sf_8Drawable_blend_mode, 0, 0},
  {(char *)"color", __pyx_getprop_2sf_8Drawable_color, __pyx_setprop_2sf_8Drawable_color, 0, 0},
  {(char *)"origin", __pyx_getprop_2sf_8Drawable_origin, __pyx_setprop_2sf_8Drawable_origin, 0, 0},
  {(char *)"position", __pyx_getprop_2sf_8Drawable_position, __pyx_setprop_2sf_8Drawable_position, 0, 0},
  {(char *)"rotation", __pyx_getprop_2sf_8Drawable_rotation, __pyx_setprop_2sf_8Drawable_rotation, 0, 0},
  {(char *)"scale", __pyx_getprop_2sf_8Drawable_scale, __pyx_setprop_2sf_8Drawable_scale, 0, 0},
  {(char *)"x", __pyx_getprop_2sf_8Drawable_x, __pyx_setprop_2sf_8Drawable_x, 0, 0},
  {(char *)"y", __pyx_getprop_2sf_8Drawable_y, __pyx_setprop_2sf_8Drawable_y, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Drawable = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Drawable = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Drawable = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Drawable = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Drawable = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Drawable"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Drawable), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Drawable, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Drawable, /*tp_as_number*/
  &__pyx_tp_as_sequence_Drawable, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Drawable, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Drawable, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Drawable, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Drawable, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_8Drawable_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Drawable, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Text(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_2sf_Drawable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_2sf_4Text___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_Text(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_4Text_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_2sf_Drawable(o);
}

static PyObject *__pyx_getprop_2sf_4Text_character_size(PyObject *o, void *x) {
  return __pyx_pf_2sf_4Text_14character_size___get__(o);
}

static int __pyx_setprop_2sf_4Text_character_size(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4Text_14character_size_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_4Text_font(PyObject *o, void *x) {
  return __pyx_pf_2sf_4Text_4font___get__(o);
}

static int __pyx_setprop_2sf_4Text_font(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4Text_4font_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_4Text_rect(PyObject *o, void *x) {
  return __pyx_pf_2sf_4Text_4rect___get__(o);
}

static PyObject *__pyx_getprop_2sf_4Text_string(PyObject *o, void *x) {
  return __pyx_pf_2sf_4Text_6string___get__(o);
}

static int __pyx_setprop_2sf_4Text_string(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4Text_6string_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_4Text_style(PyObject *o, void *x) {
  return __pyx_pf_2sf_4Text_5style___get__(o);
}

static int __pyx_setprop_2sf_4Text_style(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4Text_5style_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_Text[] = {
  {__Pyx_NAMESTR("get_character_pos"), (PyCFunction)__pyx_pf_2sf_4Text_2get_character_pos, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Text[] = {
  {(char *)"character_size", __pyx_getprop_2sf_4Text_character_size, __pyx_setprop_2sf_4Text_character_size, 0, 0},
  {(char *)"font", __pyx_getprop_2sf_4Text_font, __pyx_setprop_2sf_4Text_font, 0, 0},
  {(char *)"rect", __pyx_getprop_2sf_4Text_rect, 0, 0, 0},
  {(char *)"string", __pyx_getprop_2sf_4Text_string, __pyx_setprop_2sf_4Text_string, 0, 0},
  {(char *)"style", __pyx_getprop_2sf_4Text_style, __pyx_setprop_2sf_4Text_style, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Text = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Text = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Text = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Text = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Text = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Text"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Text), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Text, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Text, /*tp_as_number*/
  &__pyx_tp_as_sequence_Text, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Text, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Text, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Text, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Text, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Text, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Sprite(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_2sf_Drawable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_2sf_6Sprite___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_Sprite(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_6Sprite_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_2sf_Drawable(o);
}
static PyObject *__pyx_sq_item_2sf_Sprite(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyObject *__pyx_getprop_2sf_6Sprite_height(PyObject *o, void *x) {
  return __pyx_pf_2sf_6Sprite_6height___get__(o);
}

static PyObject *__pyx_getprop_2sf_6Sprite_image(PyObject *o, void *x) {
  return __pyx_pf_2sf_6Sprite_5image___get__(o);
}

static int __pyx_setprop_2sf_6Sprite_image(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_6Sprite_5image_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_6Sprite_size(PyObject *o, void *x) {
  return __pyx_pf_2sf_6Sprite_4size___get__(o);
}

static PyObject *__pyx_getprop_2sf_6Sprite_sub_rect(PyObject *o, void *x) {
  return __pyx_pf_2sf_6Sprite_8sub_rect___get__(o);
}

static int __pyx_setprop_2sf_6Sprite_sub_rect(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_6Sprite_8sub_rect_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_6Sprite_width(PyObject *o, void *x) {
  return __pyx_pf_2sf_6Sprite_5width___get__(o);
}

static PyMethodDef __pyx_methods_2sf_Sprite[] = {
  {__Pyx_NAMESTR("get_pixel"), (PyCFunction)__pyx_pf_2sf_6Sprite_3get_pixel, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("flip_x"), (PyCFunction)__pyx_pf_2sf_6Sprite_4flip_x, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("flip_y"), (PyCFunction)__pyx_pf_2sf_6Sprite_5flip_y, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("resize"), (PyCFunction)__pyx_pf_2sf_6Sprite_6resize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_image"), (PyCFunction)__pyx_pf_2sf_6Sprite_7set_image, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Sprite[] = {
  {(char *)"height", __pyx_getprop_2sf_6Sprite_height, 0, 0, 0},
  {(char *)"image", __pyx_getprop_2sf_6Sprite_image, __pyx_setprop_2sf_6Sprite_image, 0, 0},
  {(char *)"size", __pyx_getprop_2sf_6Sprite_size, 0, 0, 0},
  {(char *)"sub_rect", __pyx_getprop_2sf_6Sprite_sub_rect, __pyx_setprop_2sf_6Sprite_sub_rect, 0, 0},
  {(char *)"width", __pyx_getprop_2sf_6Sprite_width, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Sprite = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Sprite = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_2sf_Sprite, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Sprite = {
  0, /*mp_length*/
  __pyx_pf_2sf_6Sprite_2__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Sprite = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Sprite = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Sprite"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Sprite), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Sprite, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Sprite, /*tp_as_number*/
  &__pyx_tp_as_sequence_Sprite, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Sprite, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Sprite, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Sprite, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Sprite, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Sprite, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_VideoMode(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_2sf_9VideoMode___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_VideoMode(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_9VideoMode_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_9VideoMode_width(PyObject *o, void *x) {
  return __pyx_pf_2sf_9VideoMode_5width___get__(o);
}

static int __pyx_setprop_2sf_9VideoMode_width(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_9VideoMode_5width_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_9VideoMode_height(PyObject *o, void *x) {
  return __pyx_pf_2sf_9VideoMode_6height___get__(o);
}

static int __pyx_setprop_2sf_9VideoMode_height(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_9VideoMode_6height_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_9VideoMode_bits_per_pixel(PyObject *o, void *x) {
  return __pyx_pf_2sf_9VideoMode_14bits_per_pixel___get__(o);
}

static int __pyx_setprop_2sf_9VideoMode_bits_per_pixel(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_9VideoMode_14bits_per_pixel_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_VideoMode[] = {
  {__Pyx_NAMESTR("get_desktop_mode"), (PyCFunction)__pyx_pf_2sf_9VideoMode_5get_desktop_mode, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_fullscreen_modes"), (PyCFunction)__pyx_pf_2sf_9VideoMode_6get_fullscreen_modes, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("is_valid"), (PyCFunction)__pyx_pf_2sf_9VideoMode_7is_valid, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_VideoMode[] = {
  {(char *)"width", __pyx_getprop_2sf_9VideoMode_width, __pyx_setprop_2sf_9VideoMode_width, 0, 0},
  {(char *)"height", __pyx_getprop_2sf_9VideoMode_height, __pyx_setprop_2sf_9VideoMode_height, 0, 0},
  {(char *)"bits_per_pixel", __pyx_getprop_2sf_9VideoMode_bits_per_pixel, __pyx_setprop_2sf_9VideoMode_bits_per_pixel, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_VideoMode = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_VideoMode = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_VideoMode = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_VideoMode = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_VideoMode = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.VideoMode"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_VideoMode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_VideoMode, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pf_2sf_9VideoMode_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_VideoMode, /*tp_as_number*/
  &__pyx_tp_as_sequence_VideoMode, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_VideoMode, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pf_2sf_9VideoMode_2__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_VideoMode, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  __pyx_pf_2sf_9VideoMode_4__richcmp__, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_VideoMode, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_VideoMode, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_VideoMode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_View(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_2sf_4View___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_View(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_4View_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_4View_center(PyObject *o, void *x) {
  return __pyx_pf_2sf_4View_6center___get__(o);
}

static int __pyx_setprop_2sf_4View_center(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4View_6center_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_4View_height(PyObject *o, void *x) {
  return __pyx_pf_2sf_4View_6height___get__(o);
}

static int __pyx_setprop_2sf_4View_height(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4View_6height_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_4View_rotation(PyObject *o, void *x) {
  return __pyx_pf_2sf_4View_8rotation___get__(o);
}

static int __pyx_setprop_2sf_4View_rotation(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4View_8rotation_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_4View_size(PyObject *o, void *x) {
  return __pyx_pf_2sf_4View_4size___get__(o);
}

static int __pyx_setprop_2sf_4View_size(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4View_4size_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_4View_viewport(PyObject *o, void *x) {
  return __pyx_pf_2sf_4View_8viewport___get__(o);
}

static int __pyx_setprop_2sf_4View_viewport(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4View_8viewport_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_4View_width(PyObject *o, void *x) {
  return __pyx_pf_2sf_4View_5width___get__(o);
}

static int __pyx_setprop_2sf_4View_width(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_4View_5width_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_View[] = {
  {__Pyx_NAMESTR("from_center_and_size"), (PyCFunction)__pyx_pf_2sf_4View_2from_center_and_size, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("from_rect"), (PyCFunction)__pyx_pf_2sf_4View_3from_rect, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("move"), (PyCFunction)__pyx_pf_2sf_4View_4move, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("reset"), (PyCFunction)__pyx_pf_2sf_4View_5reset, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("rotate"), (PyCFunction)__pyx_pf_2sf_4View_6rotate, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("zoom"), (PyCFunction)__pyx_pf_2sf_4View_7zoom, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_View[] = {
  {(char *)"center", __pyx_getprop_2sf_4View_center, __pyx_setprop_2sf_4View_center, 0, 0},
  {(char *)"height", __pyx_getprop_2sf_4View_height, __pyx_setprop_2sf_4View_height, 0, 0},
  {(char *)"rotation", __pyx_getprop_2sf_4View_rotation, __pyx_setprop_2sf_4View_rotation, 0, 0},
  {(char *)"size", __pyx_getprop_2sf_4View_size, __pyx_setprop_2sf_4View_size, 0, 0},
  {(char *)"viewport", __pyx_getprop_2sf_4View_viewport, __pyx_setprop_2sf_4View_viewport, 0, 0},
  {(char *)"width", __pyx_getprop_2sf_4View_width, __pyx_setprop_2sf_4View_width, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_View = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_View = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_View = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_View = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_View = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.View"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_View), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_View, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_View, /*tp_as_number*/
  &__pyx_tp_as_sequence_View, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_View, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_View, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_View, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_View, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_View, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Shader(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_2sf_Shader(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_6Shader_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_2sf_Shader[] = {
  {__Pyx_NAMESTR("load_from_file"), (PyCFunction)__pyx_pf_2sf_6Shader_2load_from_file, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("load_from_memory"), (PyCFunction)__pyx_pf_2sf_6Shader_3load_from_memory, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("bind"), (PyCFunction)__pyx_pf_2sf_6Shader_4bind, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_parameter"), (PyCFunction)__pyx_pf_2sf_6Shader_5set_parameter, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_texture"), (PyCFunction)__pyx_pf_2sf_6Shader_6set_texture, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("unbind"), (PyCFunction)__pyx_pf_2sf_6Shader_7unbind, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Shader = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Shader = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Shader = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Shader = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Shader = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Shader"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Shader), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Shader, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Shader, /*tp_as_number*/
  &__pyx_tp_as_sequence_Shader, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Shader, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Shader, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Shader, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_6Shader___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Shader, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_RenderImage(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_2sf_11RenderImage___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_RenderImage(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_11RenderImage_2__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_setprop_2sf_11RenderImage_active(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_11RenderImage_6active___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_11RenderImage_default_view(PyObject *o, void *x) {
  return __pyx_pf_2sf_11RenderImage_12default_view___get__(o);
}

static PyObject *__pyx_getprop_2sf_11RenderImage_height(PyObject *o, void *x) {
  return __pyx_pf_2sf_11RenderImage_6height___get__(o);
}

static PyObject *__pyx_getprop_2sf_11RenderImage_image(PyObject *o, void *x) {
  return __pyx_pf_2sf_11RenderImage_5image___get__(o);
}

static PyObject *__pyx_getprop_2sf_11RenderImage_smooth(PyObject *o, void *x) {
  return __pyx_pf_2sf_11RenderImage_6smooth___get__(o);
}

static int __pyx_setprop_2sf_11RenderImage_smooth(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_11RenderImage_6smooth_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_11RenderImage_view(PyObject *o, void *x) {
  return __pyx_pf_2sf_11RenderImage_4view___get__(o);
}

static int __pyx_setprop_2sf_11RenderImage_view(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_11RenderImage_4view_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_11RenderImage_width(PyObject *o, void *x) {
  return __pyx_pf_2sf_11RenderImage_5width___get__(o);
}

static PyMethodDef __pyx_methods_2sf_RenderImage[] = {
  {__Pyx_NAMESTR("clear"), (PyCFunction)__pyx_pf_2sf_11RenderImage_3clear, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("convert_coords"), (PyCFunction)__pyx_pf_2sf_11RenderImage_4convert_coords, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("create"), (PyCFunction)__pyx_pf_2sf_11RenderImage_5create, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("display"), (PyCFunction)__pyx_pf_2sf_11RenderImage_6display, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("draw"), (PyCFunction)__pyx_pf_2sf_11RenderImage_7draw, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_viewport"), (PyCFunction)__pyx_pf_2sf_11RenderImage_8get_viewport, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("restore_gl_states"), (PyCFunction)__pyx_pf_2sf_11RenderImage_9restore_gl_states, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("save_gl_states"), (PyCFunction)__pyx_pf_2sf_11RenderImage_10save_gl_states, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_RenderImage[] = {
  {(char *)"active", 0, __pyx_setprop_2sf_11RenderImage_active, 0, 0},
  {(char *)"default_view", __pyx_getprop_2sf_11RenderImage_default_view, 0, 0, 0},
  {(char *)"height", __pyx_getprop_2sf_11RenderImage_height, 0, 0, 0},
  {(char *)"image", __pyx_getprop_2sf_11RenderImage_image, 0, 0, 0},
  {(char *)"smooth", __pyx_getprop_2sf_11RenderImage_smooth, __pyx_setprop_2sf_11RenderImage_smooth, 0, 0},
  {(char *)"view", __pyx_getprop_2sf_11RenderImage_view, __pyx_setprop_2sf_11RenderImage_view, 0, 0},
  {(char *)"width", __pyx_getprop_2sf_11RenderImage_width, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_RenderImage = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_RenderImage = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_RenderImage = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_RenderImage = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_RenderImage = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.RenderImage"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_RenderImage), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_RenderImage, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_RenderImage, /*tp_as_number*/
  &__pyx_tp_as_sequence_RenderImage, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_RenderImage, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_RenderImage, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_RenderImage, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_RenderImage, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_11RenderImage_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_RenderImage, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_ShapePoint(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_2sf_ShapePoint *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_2sf_ShapePoint *)o);
  p->color = ((struct __pyx_obj_2sf_Color *)Py_None); Py_INCREF(Py_None);
  p->outline = ((struct __pyx_obj_2sf_Color *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_2sf_ShapePoint(PyObject *o) {
  struct __pyx_obj_2sf_ShapePoint *p = (struct __pyx_obj_2sf_ShapePoint *)o;
  Py_XDECREF(((PyObject *)p->color));
  Py_XDECREF(((PyObject *)p->outline));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_2sf_ShapePoint(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_2sf_ShapePoint *p = (struct __pyx_obj_2sf_ShapePoint *)o;
  if (p->color) {
    e = (*v)(((PyObject*)p->color), a); if (e) return e;
  }
  if (p->outline) {
    e = (*v)(((PyObject*)p->outline), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_2sf_ShapePoint(PyObject *o) {
  struct __pyx_obj_2sf_ShapePoint *p = (struct __pyx_obj_2sf_ShapePoint *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->color);
  p->color = ((struct __pyx_obj_2sf_Color *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->outline);
  p->outline = ((struct __pyx_obj_2sf_Color *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_2sf_10ShapePoint_x(PyObject *o, void *x) {
  return __pyx_pf_2sf_10ShapePoint_1x___get__(o);
}

static int __pyx_setprop_2sf_10ShapePoint_x(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_10ShapePoint_1x_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_10ShapePoint_y(PyObject *o, void *x) {
  return __pyx_pf_2sf_10ShapePoint_1y___get__(o);
}

static int __pyx_setprop_2sf_10ShapePoint_y(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_10ShapePoint_1y_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_10ShapePoint_color(PyObject *o, void *x) {
  return __pyx_pf_2sf_10ShapePoint_5color___get__(o);
}

static int __pyx_setprop_2sf_10ShapePoint_color(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_10ShapePoint_5color_1__set__(o, v);
  }
  else {
    return __pyx_pf_2sf_10ShapePoint_5color_2__del__(o);
  }
}

static PyObject *__pyx_getprop_2sf_10ShapePoint_outline(PyObject *o, void *x) {
  return __pyx_pf_2sf_10ShapePoint_7outline___get__(o);
}

static int __pyx_setprop_2sf_10ShapePoint_outline(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_10ShapePoint_7outline_1__set__(o, v);
  }
  else {
    return __pyx_pf_2sf_10ShapePoint_7outline_2__del__(o);
  }
}

static PyMethodDef __pyx_methods_2sf_ShapePoint[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_ShapePoint[] = {
  {(char *)"x", __pyx_getprop_2sf_10ShapePoint_x, __pyx_setprop_2sf_10ShapePoint_x, 0, 0},
  {(char *)"y", __pyx_getprop_2sf_10ShapePoint_y, __pyx_setprop_2sf_10ShapePoint_y, 0, 0},
  {(char *)"color", __pyx_getprop_2sf_10ShapePoint_color, __pyx_setprop_2sf_10ShapePoint_color, 0, 0},
  {(char *)"outline", __pyx_getprop_2sf_10ShapePoint_outline, __pyx_setprop_2sf_10ShapePoint_outline, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ShapePoint = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ShapePoint = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ShapePoint = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ShapePoint = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_ShapePoint = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.ShapePoint"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_ShapePoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_ShapePoint, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ShapePoint, /*tp_as_number*/
  &__pyx_tp_as_sequence_ShapePoint, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ShapePoint, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ShapePoint, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_2sf_ShapePoint, /*tp_traverse*/
  __pyx_tp_clear_2sf_ShapePoint, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_ShapePoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_ShapePoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_10ShapePoint___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_ShapePoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_2sf_ShapePointProxy __pyx_vtable_2sf_ShapePointProxy;

static PyObject *__pyx_tp_new_2sf_ShapePointProxy(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_2sf_ShapePointProxy *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_2sf_ShapePointProxy *)o);
  p->__pyx_vtab = __pyx_vtabptr_2sf_ShapePointProxy;
  return o;
}

static void __pyx_tp_dealloc_2sf_ShapePointProxy(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_2sf_15ShapePointProxy_position(PyObject *o, void *x) {
  return __pyx_pf_2sf_15ShapePointProxy_8position___get__(o);
}

static int __pyx_setprop_2sf_15ShapePointProxy_position(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_15ShapePointProxy_8position_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_15ShapePointProxy_x(PyObject *o, void *x) {
  return __pyx_pf_2sf_15ShapePointProxy_1x___get__(o);
}

static int __pyx_setprop_2sf_15ShapePointProxy_x(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_15ShapePointProxy_1x_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_15ShapePointProxy_y(PyObject *o, void *x) {
  return __pyx_pf_2sf_15ShapePointProxy_1y___get__(o);
}

static int __pyx_setprop_2sf_15ShapePointProxy_y(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_15ShapePointProxy_1y_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_15ShapePointProxy_color(PyObject *o, void *x) {
  return __pyx_pf_2sf_15ShapePointProxy_5color___get__(o);
}

static int __pyx_setprop_2sf_15ShapePointProxy_color(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_15ShapePointProxy_5color_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_15ShapePointProxy_outline(PyObject *o, void *x) {
  return __pyx_pf_2sf_15ShapePointProxy_7outline___get__(o);
}

static int __pyx_setprop_2sf_15ShapePointProxy_outline(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_15ShapePointProxy_7outline_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_ShapePointProxy[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_ShapePointProxy[] = {
  {(char *)"position", __pyx_getprop_2sf_15ShapePointProxy_position, __pyx_setprop_2sf_15ShapePointProxy_position, 0, 0},
  {(char *)"x", __pyx_getprop_2sf_15ShapePointProxy_x, __pyx_setprop_2sf_15ShapePointProxy_x, 0, 0},
  {(char *)"y", __pyx_getprop_2sf_15ShapePointProxy_y, __pyx_setprop_2sf_15ShapePointProxy_y, 0, 0},
  {(char *)"color", __pyx_getprop_2sf_15ShapePointProxy_color, __pyx_setprop_2sf_15ShapePointProxy_color, 0, 0},
  {(char *)"outline", __pyx_getprop_2sf_15ShapePointProxy_outline, __pyx_setprop_2sf_15ShapePointProxy_outline, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ShapePointProxy = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ShapePointProxy = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ShapePointProxy = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ShapePointProxy = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_ShapePointProxy = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.ShapePointProxy"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_ShapePointProxy), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_ShapePointProxy, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ShapePointProxy, /*tp_as_number*/
  &__pyx_tp_as_sequence_ShapePointProxy, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ShapePointProxy, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ShapePointProxy, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_ShapePointProxy, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_ShapePointProxy, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_ShapePointProxy, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2sf_Shape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_2sf_Drawable(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_2sf_5Shape___cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2sf_Shape(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2sf_5Shape_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_2sf_Drawable(o);
}
static PyObject *__pyx_sq_item_2sf_Shape(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_2sf_Shape(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pf_2sf_5Shape_5__setitem__(o, i, v);
  }
  else {
    if (__pyx_ptype_2sf_Drawable->tp_as_mapping && __pyx_ptype_2sf_Drawable->tp_as_mapping->mp_ass_subscript)
      return __pyx_ptype_2sf_Drawable->tp_as_mapping->mp_ass_subscript(o, i, v);
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyObject *__pyx_getprop_2sf_5Shape_thickness(PyObject *o, void *x) {
  return __pyx_pf_2sf_5Shape_9thickness___get__(o);
}

static int __pyx_setprop_2sf_5Shape_thickness(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2sf_5Shape_9thickness_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_2sf_Shape[] = {
  {__Pyx_NAMESTR("line"), (PyCFunction)__pyx_pf_2sf_5Shape_6line, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("rectangle"), (PyCFunction)__pyx_pf_2sf_5Shape_7rectangle, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("rectangle_from_rect"), (PyCFunction)__pyx_pf_2sf_5Shape_8rectangle_from_rect, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("circle"), (PyCFunction)__pyx_pf_2sf_5Shape_9circle, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("append"), (PyCFunction)__pyx_pf_2sf_5Shape_10append, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enable_fill"), (PyCFunction)__pyx_pf_2sf_5Shape_11enable_fill, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("enable_outline"), (PyCFunction)__pyx_pf_2sf_5Shape_12enable_outline, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2sf_Shape[] = {
  {(char *)"thickness", __pyx_getprop_2sf_5Shape_thickness, __pyx_setprop_2sf_5Shape_thickness, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Shape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Shape = {
  __pyx_pf_2sf_5Shape_3__len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_2sf_Shape, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Shape = {
  __pyx_pf_2sf_5Shape_3__len__, /*mp_length*/
  __pyx_pf_2sf_5Shape_4__getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_2sf_Shape, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Shape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_2sf_Shape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("sf.Shape"), /*tp_name*/
  sizeof(struct __pyx_obj_2sf_Shape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2sf_Shape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Shape, /*tp_as_number*/
  &__pyx_tp_as_sequence_Shape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Shape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Shape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2sf_Shape, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2sf_Shape, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_2sf_5Shape_2__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2sf_Shape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("sf"),
    __Pyx_DOCSTR(__pyx_k_74), /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 0},
  {&__pyx_kp_s_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 0, 1, 0},
  {&__pyx_n_s_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 0, 1, 1},
  {&__pyx_n_s_18, __pyx_k_18, sizeof(__pyx_k_18), 0, 0, 1, 1},
  {&__pyx_n_s_19, __pyx_k_19, sizeof(__pyx_k_19), 0, 0, 1, 1},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_n_s_20, __pyx_k_20, sizeof(__pyx_k_20), 0, 0, 1, 1},
  {&__pyx_kp_s_21, __pyx_k_21, sizeof(__pyx_k_21), 0, 0, 1, 0},
  {&__pyx_n_s_23, __pyx_k_23, sizeof(__pyx_k_23), 0, 0, 1, 1},
  {&__pyx_kp_s_24, __pyx_k_24, sizeof(__pyx_k_24), 0, 0, 1, 0},
  {&__pyx_kp_s_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 0, 1, 0},
  {&__pyx_kp_s_27, __pyx_k_27, sizeof(__pyx_k_27), 0, 0, 1, 0},
  {&__pyx_kp_s_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 0, 1, 0},
  {&__pyx_kp_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 0},
  {&__pyx_kp_s_30, __pyx_k_30, sizeof(__pyx_k_30), 0, 0, 1, 0},
  {&__pyx_kp_s_32, __pyx_k_32, sizeof(__pyx_k_32), 0, 0, 1, 0},
  {&__pyx_kp_s_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 0, 1, 0},
  {&__pyx_kp_s_37, __pyx_k_37, sizeof(__pyx_k_37), 0, 0, 1, 0},
  {&__pyx_kp_s_39, __pyx_k_39, sizeof(__pyx_k_39), 0, 0, 1, 0},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_kp_s_40, __pyx_k_40, sizeof(__pyx_k_40), 0, 0, 1, 0},
  {&__pyx_kp_s_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 0, 1, 0},
  {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
  {&__pyx_kp_s_50, __pyx_k_50, sizeof(__pyx_k_50), 0, 0, 1, 0},
  {&__pyx_kp_s_51, __pyx_k_51, sizeof(__pyx_k_51), 0, 0, 1, 0},
  {&__pyx_kp_s_52, __pyx_k_52, sizeof(__pyx_k_52), 0, 0, 1, 0},
  {&__pyx_kp_s_53, __pyx_k_53, sizeof(__pyx_k_53), 0, 0, 1, 0},
  {&__pyx_n_s_55, __pyx_k_55, sizeof(__pyx_k_55), 0, 0, 1, 1},
  {&__pyx_kp_s_56, __pyx_k_56, sizeof(__pyx_k_56), 0, 0, 1, 0},
  {&__pyx_kp_s_58, __pyx_k_58, sizeof(__pyx_k_58), 0, 0, 1, 0},
  {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
  {&__pyx_kp_s_60, __pyx_k_60, sizeof(__pyx_k_60), 0, 0, 1, 0},
  {&__pyx_kp_s_62, __pyx_k_62, sizeof(__pyx_k_62), 0, 0, 1, 0},
  {&__pyx_n_s_66, __pyx_k_66, sizeof(__pyx_k_66), 0, 0, 1, 1},
  {&__pyx_n_s_67, __pyx_k_67, sizeof(__pyx_k_67), 0, 0, 1, 1},
  {&__pyx_kp_s_75, __pyx_k_75, sizeof(__pyx_k_75), 0, 0, 1, 0},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_kp_s_84, __pyx_k_84, sizeof(__pyx_k_84), 0, 0, 1, 0},
  {&__pyx_kp_s_85, __pyx_k_85, sizeof(__pyx_k_85), 0, 0, 1, 0},
  {&__pyx_kp_s_86, __pyx_k_86, sizeof(__pyx_k_86), 0, 0, 1, 0},
  {&__pyx_kp_s_87, __pyx_k_87, sizeof(__pyx_k_87), 0, 0, 1, 0},
  {&__pyx_kp_s_88, __pyx_k_88, sizeof(__pyx_k_88), 0, 0, 1, 0},
  {&__pyx_kp_s_89, __pyx_k_89, sizeof(__pyx_k_89), 0, 0, 1, 0},
  {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
  {&__pyx_kp_s_90, __pyx_k_90, sizeof(__pyx_k_90), 0, 0, 1, 0},
  {&__pyx_kp_s_91, __pyx_k_91, sizeof(__pyx_k_91), 0, 0, 1, 0},
  {&__pyx_kp_s_92, __pyx_k_92, sizeof(__pyx_k_92), 0, 0, 1, 0},
  {&__pyx_kp_s_93, __pyx_k_93, sizeof(__pyx_k_93), 0, 0, 1, 0},
  {&__pyx_kp_s_94, __pyx_k_94, sizeof(__pyx_k_94), 0, 0, 1, 0},
  {&__pyx_kp_s_95, __pyx_k_95, sizeof(__pyx_k_95), 0, 0, 1, 0},
  {&__pyx_kp_s_96, __pyx_k_96, sizeof(__pyx_k_96), 0, 0, 1, 0},
  {&__pyx_kp_s_97, __pyx_k_97, sizeof(__pyx_k_97), 0, 0, 1, 0},
  {&__pyx_n_s_98, __pyx_k_98, sizeof(__pyx_k_98), 0, 0, 1, 1},
  {&__pyx_n_s_99, __pyx_k_99, sizeof(__pyx_k_99), 0, 0, 1, 1},
  {&__pyx_n_s__A, __pyx_k__A, sizeof(__pyx_k__A), 0, 0, 1, 1},
  {&__pyx_n_s__ADD, __pyx_k__ADD, sizeof(__pyx_k__ADD), 0, 0, 1, 1},
  {&__pyx_n_s__ALPHA, __pyx_k__ALPHA, sizeof(__pyx_k__ALPHA), 0, 0, 1, 1},
  {&__pyx_n_s__AXIS_COUNT, __pyx_k__AXIS_COUNT, sizeof(__pyx_k__AXIS_COUNT), 0, 0, 1, 1},
  {&__pyx_n_s__AXIS_POV, __pyx_k__AXIS_POV, sizeof(__pyx_k__AXIS_POV), 0, 0, 1, 1},
  {&__pyx_n_s__AXIS_R, __pyx_k__AXIS_R, sizeof(__pyx_k__AXIS_R), 0, 0, 1, 1},
  {&__pyx_n_s__AXIS_U, __pyx_k__AXIS_U, sizeof(__pyx_k__AXIS_U), 0, 0, 1, 1},
  {&__pyx_n_s__AXIS_V, __pyx_k__AXIS_V, sizeof(__pyx_k__AXIS_V), 0, 0, 1, 1},
  {&__pyx_n_s__AXIS_X, __pyx_k__AXIS_X, sizeof(__pyx_k__AXIS_X), 0, 0, 1, 1},
  {&__pyx_n_s__AXIS_Y, __pyx_k__AXIS_Y, sizeof(__pyx_k__AXIS_Y), 0, 0, 1, 1},
  {&__pyx_n_s__AXIS_Z, __pyx_k__AXIS_Z, sizeof(__pyx_k__AXIS_Z), 0, 0, 1, 1},
  {&__pyx_n_s__AddPoint, __pyx_k__AddPoint, sizeof(__pyx_k__AddPoint), 0, 0, 1, 1},
  {&__pyx_n_s__Advance, __pyx_k__Advance, sizeof(__pyx_k__Advance), 0, 0, 1, 1},
  {&__pyx_n_s__Alt, __pyx_k__Alt, sizeof(__pyx_k__Alt), 0, 0, 1, 1},
  {&__pyx_n_s__Axis, __pyx_k__Axis, sizeof(__pyx_k__Axis), 0, 0, 1, 1},
  {&__pyx_n_s__B, __pyx_k__B, sizeof(__pyx_k__B), 0, 0, 1, 1},
  {&__pyx_n_s__BACK, __pyx_k__BACK, sizeof(__pyx_k__BACK), 0, 0, 1, 1},
  {&__pyx_n_s__BACK_SLASH, __pyx_k__BACK_SLASH, sizeof(__pyx_k__BACK_SLASH), 0, 0, 1, 1},
  {&__pyx_n_s__BLACK, __pyx_k__BLACK, sizeof(__pyx_k__BLACK), 0, 0, 1, 1},
  {&__pyx_n_s__BLUE, __pyx_k__BLUE, sizeof(__pyx_k__BLUE), 0, 0, 1, 1},
  {&__pyx_n_s__BOLD, __pyx_k__BOLD, sizeof(__pyx_k__BOLD), 0, 0, 1, 1},
  {&__pyx_n_s__BUTTON_COUNT, __pyx_k__BUTTON_COUNT, sizeof(__pyx_k__BUTTON_COUNT), 0, 0, 1, 1},
  {&__pyx_n_s__Bind, __pyx_k__Bind, sizeof(__pyx_k__Bind), 0, 0, 1, 1},
  {&__pyx_n_s__BitsPerPixel, __pyx_k__BitsPerPixel, sizeof(__pyx_k__BitsPerPixel), 0, 0, 1, 1},
  {&__pyx_n_s__Bounds, __pyx_k__Bounds, sizeof(__pyx_k__Bounds), 0, 0, 1, 1},
  {&__pyx_n_s__Button, __pyx_k__Button, sizeof(__pyx_k__Button), 0, 0, 1, 1},
  {&__pyx_n_s__C, __pyx_k__C, sizeof(__pyx_k__C), 0, 0, 1, 1},
  {&__pyx_n_s__CLOSE, __pyx_k__CLOSE, sizeof(__pyx_k__CLOSE), 0, 0, 1, 1},
  {&__pyx_n_s__CLOSED, __pyx_k__CLOSED, sizeof(__pyx_k__CLOSED), 0, 0, 1, 1},
  {&__pyx_n_s__COMMA, __pyx_k__COMMA, sizeof(__pyx_k__COMMA), 0, 0, 1, 1},
  {&__pyx_n_s__COUNT, __pyx_k__COUNT, sizeof(__pyx_k__COUNT), 0, 0, 1, 1},
  {&__pyx_n_s__CYAN, __pyx_k__CYAN, sizeof(__pyx_k__CYAN), 0, 0, 1, 1},
  {&__pyx_n_s__Clear, __pyx_k__Clear, sizeof(__pyx_k__Clear), 0, 0, 1, 1},
  {&__pyx_n_s__Close, __pyx_k__Close, sizeof(__pyx_k__Close), 0, 0, 1, 1},
  {&__pyx_n_s__Closed, __pyx_k__Closed, sizeof(__pyx_k__Closed), 0, 0, 1, 1},
  {&__pyx_n_s__Code, __pyx_k__Code, sizeof(__pyx_k__Code), 0, 0, 1, 1},
  {&__pyx_n_s__Contains, __pyx_k__Contains, sizeof(__pyx_k__Contains), 0, 0, 1, 1},
  {&__pyx_n_s__Control, __pyx_k__Control, sizeof(__pyx_k__Control), 0, 0, 1, 1},
  {&__pyx_n_s__ConvertCoords, __pyx_k__ConvertCoords, sizeof(__pyx_k__ConvertCoords), 0, 0, 1, 1},
  {&__pyx_n_s__Copy, __pyx_k__Copy, sizeof(__pyx_k__Copy), 0, 0, 1, 1},
  {&__pyx_n_s__CopyScreen, __pyx_k__CopyScreen, sizeof(__pyx_k__CopyScreen), 0, 0, 1, 1},
  {&__pyx_n_s__Create, __pyx_k__Create, sizeof(__pyx_k__Create), 0, 0, 1, 1},
  {&__pyx_n_s__CreateMaskFromColor, __pyx_k__CreateMaskFromColor, sizeof(__pyx_k__CreateMaskFromColor), 0, 0, 1, 1},
  {&__pyx_n_s__D, __pyx_k__D, sizeof(__pyx_k__D), 0, 0, 1, 1},
  {&__pyx_n_s__DASH, __pyx_k__DASH, sizeof(__pyx_k__DASH), 0, 0, 1, 1},
  {&__pyx_n_s__DEFAULT_FONT, __pyx_k__DEFAULT_FONT, sizeof(__pyx_k__DEFAULT_FONT), 0, 0, 1, 1},
  {&__pyx_n_s__DELETE, __pyx_k__DELETE, sizeof(__pyx_k__DELETE), 0, 0, 1, 1},
  {&__pyx_n_s__DIVIDE, __pyx_k__DIVIDE, sizeof(__pyx_k__DIVIDE), 0, 0, 1, 1},
  {&__pyx_n_s__DOWN, __pyx_k__DOWN, sizeof(__pyx_k__DOWN), 0, 0, 1, 1},
  {&__pyx_n_s__Delta, __pyx_k__Delta, sizeof(__pyx_k__Delta), 0, 0, 1, 1},
  {&__pyx_n_s__Display, __pyx_k__Display, sizeof(__pyx_k__Display), 0, 0, 1, 1},
  {&__pyx_n_s__Draw, __pyx_k__Draw, sizeof(__pyx_k__Draw), 0, 0, 1, 1},
  {&__pyx_n_s__E, __pyx_k__E, sizeof(__pyx_k__E), 0, 0, 1, 1},
  {&__pyx_n_s__END, __pyx_k__END, sizeof(__pyx_k__END), 0, 0, 1, 1},
  {&__pyx_n_s__EQUAL, __pyx_k__EQUAL, sizeof(__pyx_k__EQUAL), 0, 0, 1, 1},
  {&__pyx_n_s__ESCAPE, __pyx_k__ESCAPE, sizeof(__pyx_k__ESCAPE), 0, 0, 1, 1},
  {&__pyx_n_s__EnableFill, __pyx_k__EnableFill, sizeof(__pyx_k__EnableFill), 0, 0, 1, 1},
  {&__pyx_n_s__EnableKeyRepeat, __pyx_k__EnableKeyRepeat, sizeof(__pyx_k__EnableKeyRepeat), 0, 0, 1, 1},
  {&__pyx_n_s__EnableOutline, __pyx_k__EnableOutline, sizeof(__pyx_k__EnableOutline), 0, 0, 1, 1},
  {&__pyx_n_s__Event, __pyx_k__Event, sizeof(__pyx_k__Event), 0, 0, 1, 1},
  {&__pyx_n_s__Exception, __pyx_k__Exception, sizeof(__pyx_k__Exception), 0, 0, 1, 1},
  {&__pyx_n_s__F, __pyx_k__F, sizeof(__pyx_k__F), 0, 0, 1, 1},
  {&__pyx_n_s__F1, __pyx_k__F1, sizeof(__pyx_k__F1), 0, 0, 1, 1},
  {&__pyx_n_s__F10, __pyx_k__F10, sizeof(__pyx_k__F10), 0, 0, 1, 1},
  {&__pyx_n_s__F11, __pyx_k__F11, sizeof(__pyx_k__F11), 0, 0, 1, 1},
  {&__pyx_n_s__F12, __pyx_k__F12, sizeof(__pyx_k__F12), 0, 0, 1, 1},
  {&__pyx_n_s__F13, __pyx_k__F13, sizeof(__pyx_k__F13), 0, 0, 1, 1},
  {&__pyx_n_s__F14, __pyx_k__F14, sizeof(__pyx_k__F14), 0, 0, 1, 1},
  {&__pyx_n_s__F15, __pyx_k__F15, sizeof(__pyx_k__F15), 0, 0, 1, 1},
  {&__pyx_n_s__F2, __pyx_k__F2, sizeof(__pyx_k__F2), 0, 0, 1, 1},
  {&__pyx_n_s__F3, __pyx_k__F3, sizeof(__pyx_k__F3), 0, 0, 1, 1},
  {&__pyx_n_s__F4, __pyx_k__F4, sizeof(__pyx_k__F4), 0, 0, 1, 1},
  {&__pyx_n_s__F5, __pyx_k__F5, sizeof(__pyx_k__F5), 0, 0, 1, 1},
  {&__pyx_n_s__F6, __pyx_k__F6, sizeof(__pyx_k__F6), 0, 0, 1, 1},
  {&__pyx_n_s__F7, __pyx_k__F7, sizeof(__pyx_k__F7), 0, 0, 1, 1},
  {&__pyx_n_s__F8, __pyx_k__F8, sizeof(__pyx_k__F8), 0, 0, 1, 1},
  {&__pyx_n_s__F9, __pyx_k__F9, sizeof(__pyx_k__F9), 0, 0, 1, 1},
  {&__pyx_n_s__FULLSCREEN, __pyx_k__FULLSCREEN, sizeof(__pyx_k__FULLSCREEN), 0, 0, 1, 1},
  {&__pyx_n_s__FlipX, __pyx_k__FlipX, sizeof(__pyx_k__FlipX), 0, 0, 1, 1},
  {&__pyx_n_s__FlipY, __pyx_k__FlipY, sizeof(__pyx_k__FlipY), 0, 0, 1, 1},
  {&__pyx_n_s__G, __pyx_k__G, sizeof(__pyx_k__G), 0, 0, 1, 1},
  {&__pyx_n_s__GAINED_FOCUS, __pyx_k__GAINED_FOCUS, sizeof(__pyx_k__GAINED_FOCUS), 0, 0, 1, 1},
  {&__pyx_n_s__GREEN, __pyx_k__GREEN, sizeof(__pyx_k__GREEN), 0, 0, 1, 1},
  {&__pyx_n_s__Get4x4Elements, __pyx_k__Get4x4Elements, sizeof(__pyx_k__Get4x4Elements), 0, 0, 1, 1},
  {&__pyx_n_s__GetAttenuation, __pyx_k__GetAttenuation, sizeof(__pyx_k__GetAttenuation), 0, 0, 1, 1},
  {&__pyx_n_s__GetBlendMode, __pyx_k__GetBlendMode, sizeof(__pyx_k__GetBlendMode), 0, 0, 1, 1},
  {&__pyx_n_s__GetBuffer, __pyx_k__GetBuffer, sizeof(__pyx_k__GetBuffer), 0, 0, 1, 1},
  {&__pyx_n_s__GetCenter, __pyx_k__GetCenter, sizeof(__pyx_k__GetCenter), 0, 0, 1, 1},
  {&__pyx_n_s__GetChannelsCount, __pyx_k__GetChannelsCount, sizeof(__pyx_k__GetChannelsCount), 0, 0, 1, 1},
  {&__pyx_n_s__GetCharacterPos, __pyx_k__GetCharacterPos, sizeof(__pyx_k__GetCharacterPos), 0, 0, 1, 1},
  {&__pyx_n_s__GetCharacterSize, __pyx_k__GetCharacterSize, sizeof(__pyx_k__GetCharacterSize), 0, 0, 1, 1},
  {&__pyx_n_s__GetColor, __pyx_k__GetColor, sizeof(__pyx_k__GetColor), 0, 0, 1, 1},
  {&__pyx_n_s__GetData, __pyx_k__GetData, sizeof(__pyx_k__GetData), 0, 0, 1, 1},
  {&__pyx_n_s__GetDefaultView, __pyx_k__GetDefaultView, sizeof(__pyx_k__GetDefaultView), 0, 0, 1, 1},
  {&__pyx_n_s__GetDuration, __pyx_k__GetDuration, sizeof(__pyx_k__GetDuration), 0, 0, 1, 1},
  {&__pyx_n_s__GetElapsedTime, __pyx_k__GetElapsedTime, sizeof(__pyx_k__GetElapsedTime), 0, 0, 1, 1},
  {&__pyx_n_s__GetEvent, __pyx_k__GetEvent, sizeof(__pyx_k__GetEvent), 0, 0, 1, 1},
  {&__pyx_n_s__GetFont, __pyx_k__GetFont, sizeof(__pyx_k__GetFont), 0, 0, 1, 1},
  {&__pyx_n_s__GetFrameTime, __pyx_k__GetFrameTime, sizeof(__pyx_k__GetFrameTime), 0, 0, 1, 1},
  {&__pyx_n_s__GetGlyph, __pyx_k__GetGlyph, sizeof(__pyx_k__GetGlyph), 0, 0, 1, 1},
  {&__pyx_n_s__GetHeight, __pyx_k__GetHeight, sizeof(__pyx_k__GetHeight), 0, 0, 1, 1},
  {&__pyx_n_s__GetImage, __pyx_k__GetImage, sizeof(__pyx_k__GetImage), 0, 0, 1, 1},
  {&__pyx_n_s__GetInput, __pyx_k__GetInput, sizeof(__pyx_k__GetInput), 0, 0, 1, 1},
  {&__pyx_n_s__GetInverse, __pyx_k__GetInverse, sizeof(__pyx_k__GetInverse), 0, 0, 1, 1},
  {&__pyx_n_s__GetJoystickAxis, __pyx_k__GetJoystickAxis, sizeof(__pyx_k__GetJoystickAxis), 0, 0, 1, 1},
  {&__pyx_n_s__GetKerning, __pyx_k__GetKerning, sizeof(__pyx_k__GetKerning), 0, 0, 1, 1},
  {&__pyx_n_s__GetLineSpacing, __pyx_k__GetLineSpacing, sizeof(__pyx_k__GetLineSpacing), 0, 0, 1, 1},
  {&__pyx_n_s__GetLoop, __pyx_k__GetLoop, sizeof(__pyx_k__GetLoop), 0, 0, 1, 1},
  {&__pyx_n_s__GetMinDistance, __pyx_k__GetMinDistance, sizeof(__pyx_k__GetMinDistance), 0, 0, 1, 1},
  {&__pyx_n_s__GetMouseX, __pyx_k__GetMouseX, sizeof(__pyx_k__GetMouseX), 0, 0, 1, 1},
  {&__pyx_n_s__GetMouseY, __pyx_k__GetMouseY, sizeof(__pyx_k__GetMouseY), 0, 0, 1, 1},
  {&__pyx_n_s__GetOrigin, __pyx_k__GetOrigin, sizeof(__pyx_k__GetOrigin), 0, 0, 1, 1},
  {&__pyx_n_s__GetOutlineThickness, __pyx_k__GetOutlineThickness, sizeof(__pyx_k__GetOutlineThickness), 0, 0, 1, 1},
  {&__pyx_n_s__GetPitch, __pyx_k__GetPitch, sizeof(__pyx_k__GetPitch), 0, 0, 1, 1},
  {&__pyx_n_s__GetPixel, __pyx_k__GetPixel, sizeof(__pyx_k__GetPixel), 0, 0, 1, 1},
  {&__pyx_n_s__GetPixelsPtr, __pyx_k__GetPixelsPtr, sizeof(__pyx_k__GetPixelsPtr), 0, 0, 1, 1},
  {&__pyx_n_s__GetPlayingOffset, __pyx_k__GetPlayingOffset, sizeof(__pyx_k__GetPlayingOffset), 0, 0, 1, 1},
  {&__pyx_n_s__GetPointColor, __pyx_k__GetPointColor, sizeof(__pyx_k__GetPointColor), 0, 0, 1, 1},
  {&__pyx_n_s__GetPointPosition, __pyx_k__GetPointPosition, sizeof(__pyx_k__GetPointPosition), 0, 0, 1, 1},
  {&__pyx_n_s__GetPointsCount, __pyx_k__GetPointsCount, sizeof(__pyx_k__GetPointsCount), 0, 0, 1, 1},
  {&__pyx_n_s__GetPosition, __pyx_k__GetPosition, sizeof(__pyx_k__GetPosition), 0, 0, 1, 1},
  {&__pyx_n_s__GetRect, __pyx_k__GetRect, sizeof(__pyx_k__GetRect), 0, 0, 1, 1},
  {&__pyx_n_s__GetRotation, __pyx_k__GetRotation, sizeof(__pyx_k__GetRotation), 0, 0, 1, 1},
  {&__pyx_n_s__GetSampleRate, __pyx_k__GetSampleRate, sizeof(__pyx_k__GetSampleRate), 0, 0, 1, 1},
  {&__pyx_n_s__GetSamples, __pyx_k__GetSamples, sizeof(__pyx_k__GetSamples), 0, 0, 1, 1},
  {&__pyx_n_s__GetSamplesCount, __pyx_k__GetSamplesCount, sizeof(__pyx_k__GetSamplesCount), 0, 0, 1, 1},
  {&__pyx_n_s__GetScale, __pyx_k__GetScale, sizeof(__pyx_k__GetScale), 0, 0, 1, 1},
  {&__pyx_n_s__GetSize, __pyx_k__GetSize, sizeof(__pyx_k__GetSize), 0, 0, 1, 1},
  {&__pyx_n_s__GetStatus, __pyx_k__GetStatus, sizeof(__pyx_k__GetStatus), 0, 0, 1, 1},
  {&__pyx_n_s__GetString, __pyx_k__GetString, sizeof(__pyx_k__GetString), 0, 0, 1, 1},
  {&__pyx_n_s__GetStyle, __pyx_k__GetStyle, sizeof(__pyx_k__GetStyle), 0, 0, 1, 1},
  {&__pyx_n_s__GetSubRect, __pyx_k__GetSubRect, sizeof(__pyx_k__GetSubRect), 0, 0, 1, 1},
  {&__pyx_n_s__GetTexCoords, __pyx_k__GetTexCoords, sizeof(__pyx_k__GetTexCoords), 0, 0, 1, 1},
  {&__pyx_n_s__GetView, __pyx_k__GetView, sizeof(__pyx_k__GetView), 0, 0, 1, 1},
  {&__pyx_n_s__GetViewport, __pyx_k__GetViewport, sizeof(__pyx_k__GetViewport), 0, 0, 1, 1},
  {&__pyx_n_s__GetVolume, __pyx_k__GetVolume, sizeof(__pyx_k__GetVolume), 0, 0, 1, 1},
  {&__pyx_n_s__GetWidth, __pyx_k__GetWidth, sizeof(__pyx_k__GetWidth), 0, 0, 1, 1},
  {&__pyx_n_s__H, __pyx_k__H, sizeof(__pyx_k__H), 0, 0, 1, 1},
  {&__pyx_n_s__HOME, __pyx_k__HOME, sizeof(__pyx_k__HOME), 0, 0, 1, 1},
  {&__pyx_n_s__Height, __pyx_k__Height, sizeof(__pyx_k__Height), 0, 0, 1, 1},
  {&__pyx_n_s__I, __pyx_k__I, sizeof(__pyx_k__I), 0, 0, 1, 1},
  {&__pyx_n_s__IDENTITY, __pyx_k__IDENTITY, sizeof(__pyx_k__IDENTITY), 0, 0, 1, 1},
  {&__pyx_n_s__INSERT, __pyx_k__INSERT, sizeof(__pyx_k__INSERT), 0, 0, 1, 1},
  {&__pyx_n_s__IS_AVAILABLE, __pyx_k__IS_AVAILABLE, sizeof(__pyx_k__IS_AVAILABLE), 0, 0, 1, 1},
  {&__pyx_n_s__ITALIC, __pyx_k__ITALIC, sizeof(__pyx_k__ITALIC), 0, 0, 1, 1},
  {&__pyx_n_s__Intersects, __pyx_k__Intersects, sizeof(__pyx_k__Intersects), 0, 0, 1, 1},
  {&__pyx_n_s__IsKeyDown, __pyx_k__IsKeyDown, sizeof(__pyx_k__IsKeyDown), 0, 0, 1, 1},
  {&__pyx_n_s__IsMouseButtonDown, __pyx_k__IsMouseButtonDown, sizeof(__pyx_k__IsMouseButtonDown), 0, 0, 1, 1},
  {&__pyx_n_s__IsOpened, __pyx_k__IsOpened, sizeof(__pyx_k__IsOpened), 0, 0, 1, 1},
  {&__pyx_n_s__IsSmooth, __pyx_k__IsSmooth, sizeof(__pyx_k__IsSmooth), 0, 0, 1, 1},
  {&__pyx_n_s__IsValid, __pyx_k__IsValid, sizeof(__pyx_k__IsValid), 0, 0, 1, 1},
  {&__pyx_n_s__J, __pyx_k__J, sizeof(__pyx_k__J), 0, 0, 1, 1},
  {&__pyx_n_s__JOY_BUTTON_PRESSED, __pyx_k__JOY_BUTTON_PRESSED, sizeof(__pyx_k__JOY_BUTTON_PRESSED), 0, 0, 1, 1},
  {&__pyx_n_s__JOY_BUTTON_RELEASED, __pyx_k__JOY_BUTTON_RELEASED, sizeof(__pyx_k__JOY_BUTTON_RELEASED), 0, 0, 1, 1},
  {&__pyx_n_s__JOY_MOVED, __pyx_k__JOY_MOVED, sizeof(__pyx_k__JOY_MOVED), 0, 0, 1, 1},
  {&__pyx_n_s__JoyButton, __pyx_k__JoyButton, sizeof(__pyx_k__JoyButton), 0, 0, 1, 1},
  {&__pyx_n_s__JoyMove, __pyx_k__JoyMove, sizeof(__pyx_k__JoyMove), 0, 0, 1, 1},
  {&__pyx_n_s__JoystickId, __pyx_k__JoystickId, sizeof(__pyx_k__JoystickId), 0, 0, 1, 1},
  {&__pyx_n_s__K, __pyx_k__K, sizeof(__pyx_k__K), 0, 0, 1, 1},
  {&__pyx_n_s__KEY_PRESSED, __pyx_k__KEY_PRESSED, sizeof(__pyx_k__KEY_PRESSED), 0, 0, 1, 1},
  {&__pyx_n_s__KEY_RELEASED, __pyx_k__KEY_RELEASED, sizeof(__pyx_k__KEY_RELEASED), 0, 0, 1, 1},
  {&__pyx_n_s__Key, __pyx_k__Key, sizeof(__pyx_k__Key), 0, 0, 1, 1},
  {&__pyx_n_s__L, __pyx_k__L, sizeof(__pyx_k__L), 0, 0, 1, 1},
  {&__pyx_n_s__LEFT, __pyx_k__LEFT, sizeof(__pyx_k__LEFT), 0, 0, 1, 1},
  {&__pyx_n_s__LOST_FOCUS, __pyx_k__LOST_FOCUS, sizeof(__pyx_k__LOST_FOCUS), 0, 0, 1, 1},
  {&__pyx_n_s__L_ALT, __pyx_k__L_ALT, sizeof(__pyx_k__L_ALT), 0, 0, 1, 1},
  {&__pyx_n_s__L_BRACKET, __pyx_k__L_BRACKET, sizeof(__pyx_k__L_BRACKET), 0, 0, 1, 1},
  {&__pyx_n_s__L_CONTROL, __pyx_k__L_CONTROL, sizeof(__pyx_k__L_CONTROL), 0, 0, 1, 1},
  {&__pyx_n_s__L_SHIFT, __pyx_k__L_SHIFT, sizeof(__pyx_k__L_SHIFT), 0, 0, 1, 1},
  {&__pyx_n_s__L_SYSTEM, __pyx_k__L_SYSTEM, sizeof(__pyx_k__L_SYSTEM), 0, 0, 1, 1},
  {&__pyx_n_s__Left, __pyx_k__Left, sizeof(__pyx_k__Left), 0, 0, 1, 1},
  {&__pyx_n_s__LoadFromFile, __pyx_k__LoadFromFile, sizeof(__pyx_k__LoadFromFile), 0, 0, 1, 1},
  {&__pyx_n_s__LoadFromMemory, __pyx_k__LoadFromMemory, sizeof(__pyx_k__LoadFromMemory), 0, 0, 1, 1},
  {&__pyx_n_s__LoadFromPixels, __pyx_k__LoadFromPixels, sizeof(__pyx_k__LoadFromPixels), 0, 0, 1, 1},
  {&__pyx_n_s__LoadFromSamples, __pyx_k__LoadFromSamples, sizeof(__pyx_k__LoadFromSamples), 0, 0, 1, 1},
  {&__pyx_n_s__M, __pyx_k__M, sizeof(__pyx_k__M), 0, 0, 1, 1},
  {&__pyx_n_s__MAGENTA, __pyx_k__MAGENTA, sizeof(__pyx_k__MAGENTA), 0, 0, 1, 1},
  {&__pyx_n_s__MENU, __pyx_k__MENU, sizeof(__pyx_k__MENU), 0, 0, 1, 1},
  {&__pyx_n_s__MIDDLE, __pyx_k__MIDDLE, sizeof(__pyx_k__MIDDLE), 0, 0, 1, 1},
  {&__pyx_n_s__MOUSE_ENTERED, __pyx_k__MOUSE_ENTERED, sizeof(__pyx_k__MOUSE_ENTERED), 0, 0, 1, 1},
  {&__pyx_n_s__MOUSE_LEFT, __pyx_k__MOUSE_LEFT, sizeof(__pyx_k__MOUSE_LEFT), 0, 0, 1, 1},
  {&__pyx_n_s__MOUSE_MOVED, __pyx_k__MOUSE_MOVED, sizeof(__pyx_k__MOUSE_MOVED), 0, 0, 1, 1},
  {&__pyx_n_s__MOUSE_WHEEL_MOVED, __pyx_k__MOUSE_WHEEL_MOVED, sizeof(__pyx_k__MOUSE_WHEEL_MOVED), 0, 0, 1, 1},
  {&__pyx_n_s__MULTIPLY, __pyx_k__MULTIPLY, sizeof(__pyx_k__MULTIPLY), 0, 0, 1, 1},
  {&__pyx_n_s__MouseButton, __pyx_k__MouseButton, sizeof(__pyx_k__MouseButton), 0, 0, 1, 1},
  {&__pyx_n_s__MouseMove, __pyx_k__MouseMove, sizeof(__pyx_k__MouseMove), 0, 0, 1, 1},
  {&__pyx_n_s__MouseWheel, __pyx_k__MouseWheel, sizeof(__pyx_k__MouseWheel), 0, 0, 1, 1},
  {&__pyx_n_s__Move, __pyx_k__Move, sizeof(__pyx_k__Move), 0, 0, 1, 1},
  {&__pyx_n_s__N, __pyx_k__N, sizeof(__pyx_k__N), 0, 0, 1, 1},
  {&__pyx_n_s__NAMES, __pyx_k__NAMES, sizeof(__pyx_k__NAMES), 0, 0, 1, 1},
  {&__pyx_n_s__NONE, __pyx_k__NONE, sizeof(__pyx_k__NONE), 0, 0, 1, 1},
  {&__pyx_n_s__NUM0, __pyx_k__NUM0, sizeof(__pyx_k__NUM0), 0, 0, 1, 1},
  {&__pyx_n_s__NUM1, __pyx_k__NUM1, sizeof(__pyx_k__NUM1), 0, 0, 1, 1},
  {&__pyx_n_s__NUM2, __pyx_k__NUM2, sizeof(__pyx_k__NUM2), 0, 0, 1, 1},
  {&__pyx_n_s__NUM3, __pyx_k__NUM3, sizeof(__pyx_k__NUM3), 0, 0, 1, 1},
  {&__pyx_n_s__NUM4, __pyx_k__NUM4, sizeof(__pyx_k__NUM4), 0, 0, 1, 1},
  {&__pyx_n_s__NUM5, __pyx_k__NUM5, sizeof(__pyx_k__NUM5), 0, 0, 1, 1},
  {&__pyx_n_s__NUM6, __pyx_k__NUM6, sizeof(__pyx_k__NUM6), 0, 0, 1, 1},
  {&__pyx_n_s__NUM7, __pyx_k__NUM7, sizeof(__pyx_k__NUM7), 0, 0, 1, 1},
  {&__pyx_n_s__NUM8, __pyx_k__NUM8, sizeof(__pyx_k__NUM8), 0, 0, 1, 1},
  {&__pyx_n_s__NUM9, __pyx_k__NUM9, sizeof(__pyx_k__NUM9), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD0, __pyx_k__NUMPAD0, sizeof(__pyx_k__NUMPAD0), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD1, __pyx_k__NUMPAD1, sizeof(__pyx_k__NUMPAD1), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD2, __pyx_k__NUMPAD2, sizeof(__pyx_k__NUMPAD2), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD3, __pyx_k__NUMPAD3, sizeof(__pyx_k__NUMPAD3), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD4, __pyx_k__NUMPAD4, sizeof(__pyx_k__NUMPAD4), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD5, __pyx_k__NUMPAD5, sizeof(__pyx_k__NUMPAD5), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD6, __pyx_k__NUMPAD6, sizeof(__pyx_k__NUMPAD6), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD7, __pyx_k__NUMPAD7, sizeof(__pyx_k__NUMPAD7), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD8, __pyx_k__NUMPAD8, sizeof(__pyx_k__NUMPAD8), 0, 0, 1, 1},
  {&__pyx_n_s__NUMPAD9, __pyx_k__NUMPAD9, sizeof(__pyx_k__NUMPAD9), 0, 0, 1, 1},
  {&__pyx_n_s__NotImplemented, __pyx_k__NotImplemented, sizeof(__pyx_k__NotImplemented), 0, 0, 1, 1},
  {&__pyx_n_s__NotImplementedError, __pyx_k__NotImplementedError, sizeof(__pyx_k__NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s__O, __pyx_k__O, sizeof(__pyx_k__O), 0, 0, 1, 1},
  {&__pyx_n_s__P, __pyx_k__P, sizeof(__pyx_k__P), 0, 0, 1, 1},
  {&__pyx_n_s__PAGE_DOWN, __pyx_k__PAGE_DOWN, sizeof(__pyx_k__PAGE_DOWN), 0, 0, 1, 1},
  {&__pyx_n_s__PAGE_UP, __pyx_k__PAGE_UP, sizeof(__pyx_k__PAGE_UP), 0, 0, 1, 1},
  {&__pyx_n_s__PAUSE, __pyx_k__PAUSE, sizeof(__pyx_k__PAUSE), 0, 0, 1, 1},
  {&__pyx_n_s__PAUSED, __pyx_k__PAUSED, sizeof(__pyx_k__PAUSED), 0, 0, 1, 1},
  {&__pyx_n_s__PERIOD, __pyx_k__PERIOD, sizeof(__pyx_k__PERIOD), 0, 0, 1, 1},
  {&__pyx_n_s__PLAYING, __pyx_k__PLAYING, sizeof(__pyx_k__PLAYING), 0, 0, 1, 1},
  {&__pyx_n_s__Pause, __pyx_k__Pause, sizeof(__pyx_k__Pause), 0, 0, 1, 1},
  {&__pyx_n_s__Play, __pyx_k__Play, sizeof(__pyx_k__Play), 0, 0, 1, 1},
  {&__pyx_n_s__Position, __pyx_k__Position, sizeof(__pyx_k__Position), 0, 0, 1, 1},
  {&__pyx_n_s__PySFMLException, __pyx_k__PySFMLException, sizeof(__pyx_k__PySFMLException), 0, 0, 1, 1},
  {&__pyx_n_s__Q, __pyx_k__Q, sizeof(__pyx_k__Q), 0, 0, 1, 1},
  {&__pyx_n_s__QUOTE, __pyx_k__QUOTE, sizeof(__pyx_k__QUOTE), 0, 0, 1, 1},
  {&__pyx_n_s__R, __pyx_k__R, sizeof(__pyx_k__R), 0, 0, 1, 1},
  {&__pyx_n_s__RED, __pyx_k__RED, sizeof(__pyx_k__RED), 0, 0, 1, 1},
  {&__pyx_n_s__REGULAR, __pyx_k__REGULAR, sizeof(__pyx_k__REGULAR), 0, 0, 1, 1},
  {&__pyx_n_s__RESIZE, __pyx_k__RESIZE, sizeof(__pyx_k__RESIZE), 0, 0, 1, 1},
  {&__pyx_n_s__RESIZED, __pyx_k__RESIZED, sizeof(__pyx_k__RESIZED), 0, 0, 1, 1},
  {&__pyx_n_s__RETURN, __pyx_k__RETURN, sizeof(__pyx_k__RETURN), 0, 0, 1, 1},
  {&__pyx_n_s__RIGHT, __pyx_k__RIGHT, sizeof(__pyx_k__RIGHT), 0, 0, 1, 1},
  {&__pyx_n_s__R_ALT, __pyx_k__R_ALT, sizeof(__pyx_k__R_ALT), 0, 0, 1, 1},
  {&__pyx_n_s__R_BRACKET, __pyx_k__R_BRACKET, sizeof(__pyx_k__R_BRACKET), 0, 0, 1, 1},
  {&__pyx_n_s__R_CONTROL, __pyx_k__R_CONTROL, sizeof(__pyx_k__R_CONTROL), 0, 0, 1, 1},
  {&__pyx_n_s__R_SHIFT, __pyx_k__R_SHIFT, sizeof(__pyx_k__R_SHIFT), 0, 0, 1, 1},
  {&__pyx_n_s__R_SYSTEM, __pyx_k__R_SYSTEM, sizeof(__pyx_k__R_SYSTEM), 0, 0, 1, 1},
  {&__pyx_n_s__Reset, __pyx_k__Reset, sizeof(__pyx_k__Reset), 0, 0, 1, 1},
  {&__pyx_n_s__Resize, __pyx_k__Resize, sizeof(__pyx_k__Resize), 0, 0, 1, 1},
  {&__pyx_n_s__Resized, __pyx_k__Resized, sizeof(__pyx_k__Resized), 0, 0, 1, 1},
  {&__pyx_n_s__RestoreGLStates, __pyx_k__RestoreGLStates, sizeof(__pyx_k__RestoreGLStates), 0, 0, 1, 1},
  {&__pyx_n_s__Rotate, __pyx_k__Rotate, sizeof(__pyx_k__Rotate), 0, 0, 1, 1},
  {&__pyx_n_s__S, __pyx_k__S, sizeof(__pyx_k__S), 0, 0, 1, 1},
  {&__pyx_n_s__SEMI_COLON, __pyx_k__SEMI_COLON, sizeof(__pyx_k__SEMI_COLON), 0, 0, 1, 1},
  {&__pyx_n_s__SLASH, __pyx_k__SLASH, sizeof(__pyx_k__SLASH), 0, 0, 1, 1},
  {&__pyx_n_s__SPACE, __pyx_k__SPACE, sizeof(__pyx_k__SPACE), 0, 0, 1, 1},
  {&__pyx_n_s__STOPPED, __pyx_k__STOPPED, sizeof(__pyx_k__STOPPED), 0, 0, 1, 1},
  {&__pyx_n_s__SUBTRACT, __pyx_k__SUBTRACT, sizeof(__pyx_k__SUBTRACT), 0, 0, 1, 1},
  {&__pyx_n_s__SaveGLStates, __pyx_k__SaveGLStates, sizeof(__pyx_k__SaveGLStates), 0, 0, 1, 1},
  {&__pyx_n_s__SaveToFile, __pyx_k__SaveToFile, sizeof(__pyx_k__SaveToFile), 0, 0, 1, 1},
  {&__pyx_n_s__Scale, __pyx_k__Scale, sizeof(__pyx_k__Scale), 0, 0, 1, 1},
  {&__pyx_n_s__SetActive, __pyx_k__SetActive, sizeof(__pyx_k__SetActive), 0, 0, 1, 1},
  {&__pyx_n_s__SetAttenuation, __pyx_k__SetAttenuation, sizeof(__pyx_k__SetAttenuation), 0, 0, 1, 1},
  {&__pyx_n_s__SetBlendMode, __pyx_k__SetBlendMode, sizeof(__pyx_k__SetBlendMode), 0, 0, 1, 1},
  {&__pyx_n_s__SetBuffer, __pyx_k__SetBuffer, sizeof(__pyx_k__SetBuffer), 0, 0, 1, 1},
  {&__pyx_n_s__SetCenter, __pyx_k__SetCenter, sizeof(__pyx_k__SetCenter), 0, 0, 1, 1},
  {&__pyx_n_s__SetCharacterSize, __pyx_k__SetCharacterSize, sizeof(__pyx_k__SetCharacterSize), 0, 0, 1, 1},
  {&__pyx_n_s__SetColor, __pyx_k__SetColor, sizeof(__pyx_k__SetColor), 0, 0, 1, 1},
  {&__pyx_n_s__SetCursorPosition, __pyx_k__SetCursorPosition, sizeof(__pyx_k__SetCursorPosition), 0, 0, 1, 1},
  {&__pyx_n_s__SetFont, __pyx_k__SetFont, sizeof(__pyx_k__SetFont), 0, 0, 1, 1},
  {&__pyx_n_s__SetFramerateLimit, __pyx_k__SetFramerateLimit, sizeof(__pyx_k__SetFramerateLimit), 0, 0, 1, 1},
  {&__pyx_n_s__SetIcon, __pyx_k__SetIcon, sizeof(__pyx_k__SetIcon), 0, 0, 1, 1},
  {&__pyx_n_s__SetImage, __pyx_k__SetImage, sizeof(__pyx_k__SetImage), 0, 0, 1, 1},
  {&__pyx_n_s__SetLoop, __pyx_k__SetLoop, sizeof(__pyx_k__SetLoop), 0, 0, 1, 1},
  {&__pyx_n_s__SetMinDistance, __pyx_k__SetMinDistance, sizeof(__pyx_k__SetMinDistance), 0, 0, 1, 1},
  {&__pyx_n_s__SetOrigin, __pyx_k__SetOrigin, sizeof(__pyx_k__SetOrigin), 0, 0, 1, 1},
  {&__pyx_n_s__SetOutlineThickness, __pyx_k__SetOutlineThickness, sizeof(__pyx_k__SetOutlineThickness), 0, 0, 1, 1},
  {&__pyx_n_s__SetParameter, __pyx_k__SetParameter, sizeof(__pyx_k__SetParameter), 0, 0, 1, 1},
  {&__pyx_n_s__SetPitch, __pyx_k__SetPitch, sizeof(__pyx_k__SetPitch), 0, 0, 1, 1},
  {&__pyx_n_s__SetPixel, __pyx_k__SetPixel, sizeof(__pyx_k__SetPixel), 0, 0, 1, 1},
  {&__pyx_n_s__SetPlayingOffset, __pyx_k__SetPlayingOffset, sizeof(__pyx_k__SetPlayingOffset), 0, 0, 1, 1},
  {&__pyx_n_s__SetPointColor, __pyx_k__SetPointColor, sizeof(__pyx_k__SetPointColor), 0, 0, 1, 1},
  {&__pyx_n_s__SetPointPosition, __pyx_k__SetPointPosition, sizeof(__pyx_k__SetPointPosition), 0, 0, 1, 1},
  {&__pyx_n_s__SetPosition, __pyx_k__SetPosition, sizeof(__pyx_k__SetPosition), 0, 0, 1, 1},
  {&__pyx_n_s__SetRotation, __pyx_k__SetRotation, sizeof(__pyx_k__SetRotation), 0, 0, 1, 1},
  {&__pyx_n_s__SetScale, __pyx_k__SetScale, sizeof(__pyx_k__SetScale), 0, 0, 1, 1},
  {&__pyx_n_s__SetSize, __pyx_k__SetSize, sizeof(__pyx_k__SetSize), 0, 0, 1, 1},
  {&__pyx_n_s__SetSmooth, __pyx_k__SetSmooth, sizeof(__pyx_k__SetSmooth), 0, 0, 1, 1},
  {&__pyx_n_s__SetString, __pyx_k__SetString, sizeof(__pyx_k__SetString), 0, 0, 1, 1},
  {&__pyx_n_s__SetStyle, __pyx_k__SetStyle, sizeof(__pyx_k__SetStyle), 0, 0, 1, 1},
  {&__pyx_n_s__SetSubRect, __pyx_k__SetSubRect, sizeof(__pyx_k__SetSubRect), 0, 0, 1, 1},
  {&__pyx_n_s__SetTexture, __pyx_k__SetTexture, sizeof(__pyx_k__SetTexture), 0, 0, 1, 1},
  {&__pyx_n_s__SetTitle, __pyx_k__SetTitle, sizeof(__pyx_k__SetTitle), 0, 0, 1, 1},
  {&__pyx_n_s__SetView, __pyx_k__SetView, sizeof(__pyx_k__SetView), 0, 0, 1, 1},
  {&__pyx_n_s__SetViewport, __pyx_k__SetViewport, sizeof(__pyx_k__SetViewport), 0, 0, 1, 1},
  {&__pyx_n_s__SetVolume, __pyx_k__SetVolume, sizeof(__pyx_k__SetVolume), 0, 0, 1, 1},
  {&__pyx_n_s__SetX, __pyx_k__SetX, sizeof(__pyx_k__SetX), 0, 0, 1, 1},
  {&__pyx_n_s__SetY, __pyx_k__SetY, sizeof(__pyx_k__SetY), 0, 0, 1, 1},
  {&__pyx_n_s__Shift, __pyx_k__Shift, sizeof(__pyx_k__Shift), 0, 0, 1, 1},
  {&__pyx_n_s__Show, __pyx_k__Show, sizeof(__pyx_k__Show), 0, 0, 1, 1},
  {&__pyx_n_s__ShowMouseCursor, __pyx_k__ShowMouseCursor, sizeof(__pyx_k__ShowMouseCursor), 0, 0, 1, 1},
  {&__pyx_n_s__Size, __pyx_k__Size, sizeof(__pyx_k__Size), 0, 0, 1, 1},
  {&__pyx_n_s__Stop, __pyx_k__Stop, sizeof(__pyx_k__Stop), 0, 0, 1, 1},
  {&__pyx_n_s__StopIteration, __pyx_k__StopIteration, sizeof(__pyx_k__StopIteration), 0, 0, 1, 1},
  {&__pyx_n_s__SubRect, __pyx_k__SubRect, sizeof(__pyx_k__SubRect), 0, 0, 1, 1},
  {&__pyx_n_s__T, __pyx_k__T, sizeof(__pyx_k__T), 0, 0, 1, 1},
  {&__pyx_n_s__TAB, __pyx_k__TAB, sizeof(__pyx_k__TAB), 0, 0, 1, 1},
  {&__pyx_n_s__TEXT_ENTERED, __pyx_k__TEXT_ENTERED, sizeof(__pyx_k__TEXT_ENTERED), 0, 0, 1, 1},
  {&__pyx_n_s__TILDE, __pyx_k__TILDE, sizeof(__pyx_k__TILDE), 0, 0, 1, 1},
  {&__pyx_n_s__TITLEEBAR, __pyx_k__TITLEEBAR, sizeof(__pyx_k__TITLEEBAR), 0, 0, 1, 1},
  {&__pyx_n_s__ToAnsiString, __pyx_k__ToAnsiString, sizeof(__pyx_k__ToAnsiString), 0, 0, 1, 1},
  {&__pyx_n_s__Top, __pyx_k__Top, sizeof(__pyx_k__Top), 0, 0, 1, 1},
  {&__pyx_n_s__Transform, __pyx_k__Transform, sizeof(__pyx_k__Transform), 0, 0, 1, 1},
  {&__pyx_n_s__TransformToGlobal, __pyx_k__TransformToGlobal, sizeof(__pyx_k__TransformToGlobal), 0, 0, 1, 1},
  {&__pyx_n_s__TransformToLocal, __pyx_k__TransformToLocal, sizeof(__pyx_k__TransformToLocal), 0, 0, 1, 1},
  {&__pyx_n_s__Type, __pyx_k__Type, sizeof(__pyx_k__Type), 0, 0, 1, 1},
  {&__pyx_n_s__TypeError, __pyx_k__TypeError, sizeof(__pyx_k__TypeError), 0, 0, 1, 1},
  {&__pyx_n_s__U, __pyx_k__U, sizeof(__pyx_k__U), 0, 0, 1, 1},
  {&__pyx_n_s__UNDERLINED, __pyx_k__UNDERLINED, sizeof(__pyx_k__UNDERLINED), 0, 0, 1, 1},
  {&__pyx_n_s__UP, __pyx_k__UP, sizeof(__pyx_k__UP), 0, 0, 1, 1},
  {&__pyx_n_s__Unbind, __pyx_k__Unbind, sizeof(__pyx_k__Unbind), 0, 0, 1, 1},
  {&__pyx_n_s__UpdatePixels, __pyx_k__UpdatePixels, sizeof(__pyx_k__UpdatePixels), 0, 0, 1, 1},
  {&__pyx_n_s__V, __pyx_k__V, sizeof(__pyx_k__V), 0, 0, 1, 1},
  {&__pyx_n_s__W, __pyx_k__W, sizeof(__pyx_k__W), 0, 0, 1, 1},
  {&__pyx_n_s__WHITE, __pyx_k__WHITE, sizeof(__pyx_k__WHITE), 0, 0, 1, 1},
  {&__pyx_n_s__WaitEvent, __pyx_k__WaitEvent, sizeof(__pyx_k__WaitEvent), 0, 0, 1, 1},
  {&__pyx_n_s__Width, __pyx_k__Width, sizeof(__pyx_k__Width), 0, 0, 1, 1},
  {&__pyx_n_s__X, __pyx_k__X, sizeof(__pyx_k__X), 0, 0, 1, 1},
  {&__pyx_n_s__X_BUTTON1, __pyx_k__X_BUTTON1, sizeof(__pyx_k__X_BUTTON1), 0, 0, 1, 1},
  {&__pyx_n_s__X_BUTTON2, __pyx_k__X_BUTTON2, sizeof(__pyx_k__X_BUTTON2), 0, 0, 1, 1},
  {&__pyx_n_s__Y, __pyx_k__Y, sizeof(__pyx_k__Y), 0, 0, 1, 1},
  {&__pyx_n_s__YELLOW, __pyx_k__YELLOW, sizeof(__pyx_k__YELLOW), 0, 0, 1, 1},
  {&__pyx_n_s__Z, __pyx_k__Z, sizeof(__pyx_k__Z), 0, 0, 1, 1},
  {&__pyx_n_s__Zoom, __pyx_k__Zoom, sizeof(__pyx_k__Zoom), 0, 0, 1, 1},
  {&__pyx_n_s____class__, __pyx_k____class__, sizeof(__pyx_k____class__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____str__, __pyx_k____str__, sizeof(__pyx_k____str__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s___init, __pyx_k___init, sizeof(__pyx_k___init), 0, 0, 1, 1},
  {&__pyx_n_s__a, __pyx_k__a, sizeof(__pyx_k__a), 0, 0, 1, 1},
  {&__pyx_n_s__a00, __pyx_k__a00, sizeof(__pyx_k__a00), 0, 0, 1, 1},
  {&__pyx_n_s__a01, __pyx_k__a01, sizeof(__pyx_k__a01), 0, 0, 1, 1},
  {&__pyx_n_s__a02, __pyx_k__a02, sizeof(__pyx_k__a02), 0, 0, 1, 1},
  {&__pyx_n_s__a10, __pyx_k__a10, sizeof(__pyx_k__a10), 0, 0, 1, 1},
  {&__pyx_n_s__a11, __pyx_k__a11, sizeof(__pyx_k__a11), 0, 0, 1, 1},
  {&__pyx_n_s__a12, __pyx_k__a12, sizeof(__pyx_k__a12), 0, 0, 1, 1},
  {&__pyx_n_s__a20, __pyx_k__a20, sizeof(__pyx_k__a20), 0, 0, 1, 1},
  {&__pyx_n_s__a21, __pyx_k__a21, sizeof(__pyx_k__a21), 0, 0, 1, 1},
  {&__pyx_n_s__a22, __pyx_k__a22, sizeof(__pyx_k__a22), 0, 0, 1, 1},
  {&__pyx_n_s__adjust_to_new_size, __pyx_k__adjust_to_new_size, sizeof(__pyx_k__adjust_to_new_size), 0, 0, 1, 1},
  {&__pyx_n_s__alpha, __pyx_k__alpha, sizeof(__pyx_k__alpha), 0, 0, 1, 1},
  {&__pyx_n_s__alt, __pyx_k__alt, sizeof(__pyx_k__alt), 0, 0, 1, 1},
  {&__pyx_n_s__append, __pyx_k__append, sizeof(__pyx_k__append), 0, 0, 1, 1},
  {&__pyx_n_s__apply_alpha, __pyx_k__apply_alpha, sizeof(__pyx_k__apply_alpha), 0, 0, 1, 1},
  {&__pyx_n_s__axis, __pyx_k__axis, sizeof(__pyx_k__axis), 0, 0, 1, 1},
  {&__pyx_n_s__b, __pyx_k__b, sizeof(__pyx_k__b), 0, 0, 1, 1},
  {&__pyx_n_s__begin, __pyx_k__begin, sizeof(__pyx_k__begin), 0, 0, 1, 1},
  {&__pyx_n_s__bits_per_pixel, __pyx_k__bits_per_pixel, sizeof(__pyx_k__bits_per_pixel), 0, 0, 1, 1},
  {&__pyx_n_s__bold, __pyx_k__bold, sizeof(__pyx_k__bold), 0, 0, 1, 1},
  {&__pyx_n_s__buffer, __pyx_k__buffer, sizeof(__pyx_k__buffer), 0, 0, 1, 1},
  {&__pyx_n_s__button, __pyx_k__button, sizeof(__pyx_k__button), 0, 0, 1, 1},
  {&__pyx_n_s__c_str, __pyx_k__c_str, sizeof(__pyx_k__c_str), 0, 0, 1, 1},
  {&__pyx_n_s__center, __pyx_k__center, sizeof(__pyx_k__center), 0, 0, 1, 1},
  {&__pyx_n_s__channels_count, __pyx_k__channels_count, sizeof(__pyx_k__channels_count), 0, 0, 1, 1},
  {&__pyx_n_s__character_size, __pyx_k__character_size, sizeof(__pyx_k__character_size), 0, 0, 1, 1},
  {&__pyx_n_s__circle, __pyx_k__circle, sizeof(__pyx_k__circle), 0, 0, 1, 1},
  {&__pyx_n_s__code, __pyx_k__code, sizeof(__pyx_k__code), 0, 0, 1, 1},
  {&__pyx_n_s__code_point, __pyx_k__code_point, sizeof(__pyx_k__code_point), 0, 0, 1, 1},
  {&__pyx_n_s__color, __pyx_k__color, sizeof(__pyx_k__color), 0, 0, 1, 1},
  {&__pyx_n_s__control, __pyx_k__control, sizeof(__pyx_k__control), 0, 0, 1, 1},
  {&__pyx_n_s__create, __pyx_k__create, sizeof(__pyx_k__create), 0, 0, 1, 1},
  {&__pyx_n_s__decode, __pyx_k__decode, sizeof(__pyx_k__decode), 0, 0, 1, 1},
  {&__pyx_n_s__delete_this, __pyx_k__delete_this, sizeof(__pyx_k__delete_this), 0, 0, 1, 1},
  {&__pyx_n_s__delta, __pyx_k__delta, sizeof(__pyx_k__delta), 0, 0, 1, 1},
  {&__pyx_n_s__depth, __pyx_k__depth, sizeof(__pyx_k__depth), 0, 0, 1, 1},
  {&__pyx_n_s__dest_x, __pyx_k__dest_x, sizeof(__pyx_k__dest_x), 0, 0, 1, 1},
  {&__pyx_n_s__dest_y, __pyx_k__dest_y, sizeof(__pyx_k__dest_y), 0, 0, 1, 1},
  {&__pyx_n_s__drawable, __pyx_k__drawable, sizeof(__pyx_k__drawable), 0, 0, 1, 1},
  {&__pyx_n_s__encode, __pyx_k__encode, sizeof(__pyx_k__encode), 0, 0, 1, 1},
  {&__pyx_n_s__end, __pyx_k__end, sizeof(__pyx_k__end), 0, 0, 1, 1},
  {&__pyx_n_s__first, __pyx_k__first, sizeof(__pyx_k__first), 0, 0, 1, 1},
  {&__pyx_n_s__font, __pyx_k__font, sizeof(__pyx_k__font), 0, 0, 1, 1},
  {&__pyx_n_s__format, __pyx_k__format, sizeof(__pyx_k__format), 0, 0, 1, 1},
  {&__pyx_n_s__from_rect, __pyx_k__from_rect, sizeof(__pyx_k__from_rect), 0, 0, 1, 1},
  {&__pyx_n_s__g, __pyx_k__g, sizeof(__pyx_k__g), 0, 0, 1, 1},
  {&__pyx_n_s__get_desktop_mode, __pyx_k__get_desktop_mode, sizeof(__pyx_k__get_desktop_mode), 0, 0, 1, 1},
  {&__pyx_n_s__get_maximum_size, __pyx_k__get_maximum_size, sizeof(__pyx_k__get_maximum_size), 0, 0, 1, 1},
  {&__pyx_n_s__get_mouse_x, __pyx_k__get_mouse_x, sizeof(__pyx_k__get_mouse_x), 0, 0, 1, 1},
  {&__pyx_n_s__get_mouse_y, __pyx_k__get_mouse_y, sizeof(__pyx_k__get_mouse_y), 0, 0, 1, 1},
  {&__pyx_n_s__get_pixel, __pyx_k__get_pixel, sizeof(__pyx_k__get_pixel), 0, 0, 1, 1},
  {&__pyx_n_s__height, __pyx_k__height, sizeof(__pyx_k__height), 0, 0, 1, 1},
  {&__pyx_n_s__image, __pyx_k__image, sizeof(__pyx_k__image), 0, 0, 1, 1},
  {&__pyx_n_s__index, __pyx_k__index, sizeof(__pyx_k__index), 0, 0, 1, 1},
  {&__pyx_n_s__input, __pyx_k__input, sizeof(__pyx_k__input), 0, 0, 1, 1},
  {&__pyx_n_s__intersection, __pyx_k__intersection, sizeof(__pyx_k__intersection), 0, 0, 1, 1},
  {&__pyx_n_s__is_unicode, __pyx_k__is_unicode, sizeof(__pyx_k__is_unicode), 0, 0, 1, 1},
  {&__pyx_n_s__joy_id, __pyx_k__joy_id, sizeof(__pyx_k__joy_id), 0, 0, 1, 1},
  {&__pyx_n_s__joystick_id, __pyx_k__joystick_id, sizeof(__pyx_k__joystick_id), 0, 0, 1, 1},
  {&__pyx_n_s__left, __pyx_k__left, sizeof(__pyx_k__left), 0, 0, 1, 1},
  {&__pyx_n_s__line, __pyx_k__line, sizeof(__pyx_k__line), 0, 0, 1, 1},
  {&__pyx_n_s__load_from_file, __pyx_k__load_from_file, sizeof(__pyx_k__load_from_file), 0, 0, 1, 1},
  {&__pyx_n_s__load_from_memory, __pyx_k__load_from_memory, sizeof(__pyx_k__load_from_memory), 0, 0, 1, 1},
  {&__pyx_n_s__load_from_pixels, __pyx_k__load_from_pixels, sizeof(__pyx_k__load_from_pixels), 0, 0, 1, 1},
  {&__pyx_n_s__load_from_samples, __pyx_k__load_from_samples, sizeof(__pyx_k__load_from_samples), 0, 0, 1, 1},
  {&__pyx_n_s__load_from_screen, __pyx_k__load_from_screen, sizeof(__pyx_k__load_from_screen), 0, 0, 1, 1},
  {&__pyx_n_s__loop, __pyx_k__loop, sizeof(__pyx_k__loop), 0, 0, 1, 1},
  {&__pyx_n_s__mode, __pyx_k__mode, sizeof(__pyx_k__mode), 0, 0, 1, 1},
  {&__pyx_n_s__name, __pyx_k__name, sizeof(__pyx_k__name), 0, 0, 1, 1},
  {&__pyx_n_s__origin, __pyx_k__origin, sizeof(__pyx_k__origin), 0, 0, 1, 1},
  {&__pyx_n_s__outline, __pyx_k__outline, sizeof(__pyx_k__outline), 0, 0, 1, 1},
  {&__pyx_n_s__outline_color, __pyx_k__outline_color, sizeof(__pyx_k__outline_color), 0, 0, 1, 1},
  {&__pyx_n_s__p1x, __pyx_k__p1x, sizeof(__pyx_k__p1x), 0, 0, 1, 1},
  {&__pyx_n_s__p1y, __pyx_k__p1y, sizeof(__pyx_k__p1y), 0, 0, 1, 1},
  {&__pyx_n_s__p2x, __pyx_k__p2x, sizeof(__pyx_k__p2x), 0, 0, 1, 1},
  {&__pyx_n_s__p2y, __pyx_k__p2y, sizeof(__pyx_k__p2y), 0, 0, 1, 1},
  {&__pyx_n_s__p_this, __pyx_k__p_this, sizeof(__pyx_k__p_this), 0, 0, 1, 1},
  {&__pyx_n_s__parent, __pyx_k__parent, sizeof(__pyx_k__parent), 0, 0, 1, 1},
  {&__pyx_n_s__pitch, __pyx_k__pitch, sizeof(__pyx_k__pitch), 0, 0, 1, 1},
  {&__pyx_n_s__pixels, __pyx_k__pixels, sizeof(__pyx_k__pixels), 0, 0, 1, 1},
  {&__pyx_n_s__points, __pyx_k__points, sizeof(__pyx_k__points), 0, 0, 1, 1},
  {&__pyx_n_s__position, __pyx_k__position, sizeof(__pyx_k__position), 0, 0, 1, 1},
  {&__pyx_n_s__projection, __pyx_k__projection, sizeof(__pyx_k__projection), 0, 0, 1, 1},
  {&__pyx_n_s__r, __pyx_k__r, sizeof(__pyx_k__r), 0, 0, 1, 1},
  {&__pyx_n_s__radius, __pyx_k__radius, sizeof(__pyx_k__radius), 0, 0, 1, 1},
  {&__pyx_n_s__rect, __pyx_k__rect, sizeof(__pyx_k__rect), 0, 0, 1, 1},
  {&__pyx_n_s__rectangle, __pyx_k__rectangle, sizeof(__pyx_k__rectangle), 0, 0, 1, 1},
  {&__pyx_n_s__rectangle_from_rect, __pyx_k__rectangle_from_rect, sizeof(__pyx_k__rectangle_from_rect), 0, 0, 1, 1},
  {&__pyx_n_s__rotation, __pyx_k__rotation, sizeof(__pyx_k__rotation), 0, 0, 1, 1},
  {&__pyx_n_s__sample_rate, __pyx_k__sample_rate, sizeof(__pyx_k__sample_rate), 0, 0, 1, 1},
  {&__pyx_n_s__samples, __pyx_k__samples, sizeof(__pyx_k__samples), 0, 0, 1, 1},
  {&__pyx_n_s__scale, __pyx_k__scale, sizeof(__pyx_k__scale), 0, 0, 1, 1},
  {&__pyx_n_s__second, __pyx_k__second, sizeof(__pyx_k__second), 0, 0, 1, 1},
  {&__pyx_n_s__set_pixel, __pyx_k__set_pixel, sizeof(__pyx_k__set_pixel), 0, 0, 1, 1},
  {&__pyx_n_s__sf, __pyx_k__sf, sizeof(__pyx_k__sf), 0, 0, 1, 1},
  {&__pyx_n_s__shader, __pyx_k__shader, sizeof(__pyx_k__shader), 0, 0, 1, 1},
  {&__pyx_n_s__shift, __pyx_k__shift, sizeof(__pyx_k__shift), 0, 0, 1, 1},
  {&__pyx_n_s__size, __pyx_k__size, sizeof(__pyx_k__size), 0, 0, 1, 1},
  {&__pyx_n_s__source, __pyx_k__source, sizeof(__pyx_k__source), 0, 0, 1, 1},
  {&__pyx_n_s__source_rect, __pyx_k__source_rect, sizeof(__pyx_k__source_rect), 0, 0, 1, 1},
  {&__pyx_n_s__string, __pyx_k__string, sizeof(__pyx_k__string), 0, 0, 1, 1},
  {&__pyx_n_s__style, __pyx_k__style, sizeof(__pyx_k__style), 0, 0, 1, 1},
  {&__pyx_n_s__thickness, __pyx_k__thickness, sizeof(__pyx_k__thickness), 0, 0, 1, 1},
  {&__pyx_n_s__title, __pyx_k__title, sizeof(__pyx_k__title), 0, 0, 1, 1},
  {&__pyx_n_s__top, __pyx_k__top, sizeof(__pyx_k__top), 0, 0, 1, 1},
  {&__pyx_n_s__transformation, __pyx_k__transformation, sizeof(__pyx_k__transformation), 0, 0, 1, 1},
  {&__pyx_n_s__translation, __pyx_k__translation, sizeof(__pyx_k__translation), 0, 0, 1, 1},
  {&__pyx_n_s__type, __pyx_k__type, sizeof(__pyx_k__type), 0, 0, 1, 1},
  {&__pyx_n_s__view, __pyx_k__view, sizeof(__pyx_k__view), 0, 0, 1, 1},
  {&__pyx_n_s__volume, __pyx_k__volume, sizeof(__pyx_k__volume), 0, 0, 1, 1},
  {&__pyx_n_s__w, __pyx_k__w, sizeof(__pyx_k__w), 0, 0, 1, 1},
  {&__pyx_n_s__width, __pyx_k__width, sizeof(__pyx_k__width), 0, 0, 1, 1},
  {&__pyx_n_s__window, __pyx_k__window, sizeof(__pyx_k__window), 0, 0, 1, 1},
  {&__pyx_n_s__x, __pyx_k__x, sizeof(__pyx_k__x), 0, 0, 1, 1},
  {&__pyx_n_s__y, __pyx_k__y, sizeof(__pyx_k__y), 0, 0, 1, 1},
  {&__pyx_n_s__z, __pyx_k__z, sizeof(__pyx_k__z), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_Exception = __Pyx_GetName(__pyx_b, __pyx_n_s__Exception); if (!__pyx_builtin_Exception) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetName(__pyx_b, __pyx_n_s__TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplemented = __Pyx_GetName(__pyx_b, __pyx_n_s__NotImplemented); if (!__pyx_builtin_NotImplemented) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_NotImplementedError = __Pyx_GetName(__pyx_b, __pyx_n_s__NotImplementedError); if (!__pyx_builtin_NotImplementedError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_StopIteration = __Pyx_GetName(__pyx_b, __pyx_n_s__StopIteration); if (!__pyx_builtin_StopIteration) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants");

  /* "sf.pyx":547
 *     def __init__(self):
 *         # self.delete_this = True
 *         raise NotImplementedError("Use static methods like load_from_file "             # <<<<<<<<<<<<<<
 *                                   "to create SoundBuffer instances")
 * 
 */
  __pyx_k_tuple_7 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_7));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_6));
  PyTuple_SET_ITEM(__pyx_k_tuple_7, 0, ((PyObject *)__pyx_kp_s_6));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_6));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_7));

  /* "sf.pyx":596
 *             return wrap_sound_buffer_instance(p, True)
 * 
 *         raise PySFMLException("Couldn't load sound buffer from memory")             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_k_tuple_10 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_10));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_9));
  PyTuple_SET_ITEM(__pyx_k_tuple_10, 0, ((PyObject *)__pyx_kp_s_9));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_9));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_10));

  /* "sf.pyx":607
 * 
 *         if p_samples == NULL:
 *             raise PySFMLException("Couldn't allocate memory for samples")             # <<<<<<<<<<<<<<
 *         else:
 *             p_temp = p_samples
 */
  __pyx_k_tuple_12 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_12));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_11));
  PyTuple_SET_ITEM(__pyx_k_tuple_12, 0, ((PyObject *)__pyx_kp_s_11));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_11));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_12));

  /* "sf.pyx":621
 *             else:
 *                 free(p_samples)
 *                 raise PySFMLException("Couldn't load samples")             # <<<<<<<<<<<<<<
 * 
 *     def save_to_file(self, char* filename):
 */
  __pyx_k_tuple_14 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_14));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_13));
  PyTuple_SET_ITEM(__pyx_k_tuple_14, 0, ((PyObject *)__pyx_kp_s_13));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_13));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_14));

  /* "sf.pyx":647
 * 
 *     def __cinit__(self, SoundBuffer buffer=None, bint loop=False,
 *                   float pitch=1.0, float volume=100.0, tuple position=(0,0,0)):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector3f cpp_position
 * 
 */
  __pyx_k_tuple_15 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_15));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_15, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_15, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_15, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_15));
  __pyx_k_tuple_16 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_16));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_16, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_16, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_16, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_16));

  /* "sf.pyx":872
 * 
 *     def __init__(self):
 *         raise NotImplementedError("You shouldn't need to create Input objects")             # <<<<<<<<<<<<<<
 * 
 *     property mouse_x:
 */
  __pyx_k_tuple_22 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_22));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_21));
  PyTuple_SET_ITEM(__pyx_k_tuple_22, 0, ((PyObject *)__pyx_kp_s_21));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_21));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_22));

  /* "sf.pyx":974
 *             return wrap_font_instance(p, True)
 * 
 *         raise PySFMLException("Couldn't load font from memory")             # <<<<<<<<<<<<<<
 * 
 *     def get_glyph(self, unsigned int code_point, unsigned int character_size,
 */
  __pyx_k_tuple_26 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 974; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_26));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_25));
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 0, ((PyObject *)__pyx_kp_s_25));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_25));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_26));

  /* "sf.pyx":1076
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 *         raise PySFMLException("Couldn't copy screen")             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_k_tuple_29 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_29));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_28));
  PyTuple_SET_ITEM(__pyx_k_tuple_29, 0, ((PyObject *)__pyx_kp_s_28));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_28));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_29));

  /* "sf.pyx":1085
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 *         raise PySFMLException("Couldn't create image from memory")             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_k_tuple_31 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_31)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_31));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_30));
  PyTuple_SET_ITEM(__pyx_k_tuple_31, 0, ((PyObject *)__pyx_kp_s_30));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_30));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_31));

  /* "sf.pyx":1094
 *             return wrap_image_instance(p_cpp_instance, True)
 * 
 *         raise PySFMLException("Couldn't create image from pixels")             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_k_tuple_33 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_33));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_32));
  PyTuple_SET_ITEM(__pyx_k_tuple_33, 0, ((PyObject *)__pyx_kp_s_32));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_32));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_33));

  /* "sf.pyx":1118
 *                 cpp_source_rect = (<IntRect>source_rect).p_this[0]
 *             else:
 *                 raise TypeError('source_rect must be tuple or IntRect')             # <<<<<<<<<<<<<<
 * 
 *             if apply_alpha is None:
 */
  __pyx_k_tuple_36 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_36)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_36));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_35));
  PyTuple_SET_ITEM(__pyx_k_tuple_36, 0, ((PyObject *)__pyx_kp_s_35));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_35));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_36));

  /* "sf.pyx":1191
 *     def __init__(self, *args, **kwargs):
 *         if self.__class__ == Drawable:
 *             raise NotImplementedError('Drawable is abstact')             # <<<<<<<<<<<<<<
 * 
 *     property blend_mode:
 */
  __pyx_k_tuple_38 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_38)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_38));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_37));
  PyTuple_SET_ITEM(__pyx_k_tuple_38, 0, ((PyObject *)__pyx_kp_s_37));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_37));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_38));

  /* "sf.pyx":1323
 *             self.is_unicode = True
 *             string += '\x00'
 *             py_byte_string = string.encode('utf-32-le')             # <<<<<<<<<<<<<<
 *             c_string = py_byte_string
 *             cpp_string = decl.String(<decl.Uint32*>c_string)
 */
  __pyx_k_tuple_41 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_41)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_41));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_40));
  PyTuple_SET_ITEM(__pyx_k_tuple_41, 0, ((PyObject *)__pyx_kp_s_40));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_40));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_41));

  /* "sf.pyx":1379
 *                 p = <char*>(<decl.Text*>self.p_this).GetString().GetData()
 *                 data = p[:(<decl.Text*>self.p_this).GetString().GetSize() * 4]
 *                 ret = data.decode('utf-32-le')             # <<<<<<<<<<<<<<
 * 
 *             return ret
 */
  __pyx_k_tuple_43 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_43));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_40));
  PyTuple_SET_ITEM(__pyx_k_tuple_43, 0, ((PyObject *)__pyx_kp_s_40));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_40));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_43));

  /* "sf.pyx":1391
 *             elif isinstance(value, unicode):
 *                 value += '\x00'
 *                 py_byte_string = value.encode('utf-32-le')             # <<<<<<<<<<<<<<
 *                 c_string = py_byte_string
 *                 (<decl.Text*>self.p_this).SetString(
 */
  __pyx_k_tuple_44 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_44)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_44));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_40));
  PyTuple_SET_ITEM(__pyx_k_tuple_44, 0, ((PyObject *)__pyx_kp_s_40));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_40));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_44));

  /* "sf.pyx":1418
 * 
 * cdef class Sprite(Drawable):
 *     def __cinit__(self, Image image=None, tuple position=(0,0),             # <<<<<<<<<<<<<<
 *                   tuple scale=(1,1), float rotation=0.0,
 *                   Color color=Color.WHITE):
 */
  __pyx_k_tuple_45 = PyTuple_New(2); if (unlikely(!__pyx_k_tuple_45)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_45));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_45, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_45, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_45));

  /* "sf.pyx":1419
 * cdef class Sprite(Drawable):
 *     def __cinit__(self, Image image=None, tuple position=(0,0),
 *                   tuple scale=(1,1), float rotation=0.0,             # <<<<<<<<<<<<<<
 *                   Color color=Color.WHITE):
 *         cdef decl.Vector2f cpp_position
 */
  __pyx_k_tuple_46 = PyTuple_New(2); if (unlikely(!__pyx_k_tuple_46)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_46));
  __Pyx_INCREF(__pyx_int_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_46, 0, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  __Pyx_INCREF(__pyx_int_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_46, 1, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_46));

  /* "sf.pyx":1418
 * 
 * cdef class Sprite(Drawable):
 *     def __cinit__(self, Image image=None, tuple position=(0,0),             # <<<<<<<<<<<<<<
 *                   tuple scale=(1,1), float rotation=0.0,
 *                   Color color=Color.WHITE):
 */
  __pyx_k_tuple_48 = PyTuple_New(2); if (unlikely(!__pyx_k_tuple_48)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_48));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_48, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_48, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_48));

  /* "sf.pyx":1419
 * cdef class Sprite(Drawable):
 *     def __cinit__(self, Image image=None, tuple position=(0,0),
 *                   tuple scale=(1,1), float rotation=0.0,             # <<<<<<<<<<<<<<
 *                   Color color=Color.WHITE):
 *         cdef decl.Vector2f cpp_position
 */
  __pyx_k_tuple_49 = PyTuple_New(2); if (unlikely(!__pyx_k_tuple_49)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_49));
  __Pyx_INCREF(__pyx_int_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_49, 0, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  __Pyx_INCREF(__pyx_int_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_49, 1, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_49));

  /* "sf.pyx":1760
 *             return wrap_shader_instance(p)
 *         else:
 *             raise PySFMLException("Couldn't load shader from memory")             # <<<<<<<<<<<<<<
 * 
 *     def bind(self):
 */
  __pyx_k_tuple_54 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_54)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_54));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_53));
  PyTuple_SET_ITEM(__pyx_k_tuple_54, 0, ((PyObject *)__pyx_kp_s_53));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_53));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_54));

  /* "sf.pyx":1874
 *     property settings:
 *         def __get__(self):
 *             raise NotImplementedError(             # <<<<<<<<<<<<<<
 *                 "The ContextSettings class isn't available yet")
 * 
 */
  __pyx_k_tuple_57 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_57)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_57));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_56));
  PyTuple_SET_ITEM(__pyx_k_tuple_57, 0, ((PyObject *)__pyx_kp_s_56));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_56));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_57));

  /* "sf.pyx":1891
 *     property system_handle:
 *         def __get__(self):
 *             raise NotImplementedError(             # <<<<<<<<<<<<<<
 *                 "The WindowHandle class isn't available yet")
 * 
 */
  __pyx_k_tuple_59 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_59)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_59));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_58));
  PyTuple_SET_ITEM(__pyx_k_tuple_59, 0, ((PyObject *)__pyx_kp_s_58));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_58));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_59));

  /* "sf.pyx":1985
 *             return wrap_event_instance(&e)
 * 
 *         raise PySFMLException("Error reported by C++ method "             # <<<<<<<<<<<<<<
 *                               "sf::RenderWindow::WaitEvent()")
 * 
 */
  __pyx_k_tuple_61 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_61)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1985; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_61));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_60));
  PyTuple_SET_ITEM(__pyx_k_tuple_61, 0, ((PyObject *)__pyx_kp_s_60));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_60));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_61));

  /* "sf.pyx":2075
 *             self.p_this.Draw(drawable.p_this[0])
 *         else:
 *             raise NotImplementedError("The Shader class isn't available yet")             # <<<<<<<<<<<<<<
 * 
 *     def get_viewport(self, View view):
 */
  __pyx_k_tuple_63 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_63)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_63));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_62));
  PyTuple_SET_ITEM(__pyx_k_tuple_63, 0, ((PyObject *)__pyx_kp_s_62));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_62));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_63));

  /* "sf.pyx":2104
 * 
 *         if color is None:
 *             color = Color(255, 255, 255)             # <<<<<<<<<<<<<<
 * 
 *         if outline is None:
 */
  __pyx_k_tuple_64 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_64)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_64));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_64, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_64, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_64, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_64));

  /* "sf.pyx":2107
 * 
 *         if outline is None:
 *             outline = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 * 
 *         self.color = color
 */
  __pyx_k_tuple_65 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_65)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_65));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_65, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_65, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_65, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_65));

  /* "sf.pyx":2186
 *     def __init__(self, points=None):
 *         cdef ShapePoint p
 *         cdef Color color = Color(255, 255, 255)             # <<<<<<<<<<<<<<
 *         cdef Color outline = Color(0, 0, 0)
 *         cdef float x, y
 */
  __pyx_k_tuple_68 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_68)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_68));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_68, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_68, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_68, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_68));

  /* "sf.pyx":2187
 *         cdef ShapePoint p
 *         cdef Color color = Color(255, 255, 255)
 *         cdef Color outline = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 *         cdef float x, y
 *         cdef int l_p
 */
  __pyx_k_tuple_69 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_69)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_69));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_69, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_69, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_69, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_69));

  /* "sf.pyx":2222
 *              Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 *         cdef decl.Shape *s = new decl.Shape()
 *         s[0] = decl.Line(p1x, p1y, p2x, p2y, thickness, color.p_this[0],
 */
  __pyx_k_tuple_70 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_70)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_70));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_70, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_70, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_70, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_70));

  /* "sf.pyx":2232
 *                   Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 */
  __pyx_k_tuple_71 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_71)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_71));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_71, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_71, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_71, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_71));

  /* "sf.pyx":2244
 *                             Color outline_color=None):
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 */
  __pyx_k_tuple_72 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_72)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_72));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_72, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_72, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_72, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_72));

  /* "sf.pyx":2256
 *                float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 *             outline_color = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 * 
 *         cdef decl.Shape *s = new decl.Shape()
 */
  __pyx_k_tuple_73 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_73)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_73));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_73, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_73, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_73, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_73));

  /* "sf.pyx":458
 * 
 * cdef class Color:
 *     BLACK = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 *     WHITE = Color(255, 255, 255)
 *     RED = Color(255, 0, 0)
 */
  __pyx_k_tuple_76 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_76)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_76));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_76, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_76, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_76, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_76));

  /* "sf.pyx":459
 * cdef class Color:
 *     BLACK = Color(0, 0, 0)
 *     WHITE = Color(255, 255, 255)             # <<<<<<<<<<<<<<
 *     RED = Color(255, 0, 0)
 *     GREEN = Color(0, 255, 0)
 */
  __pyx_k_tuple_77 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_77)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_77));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_77, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_77, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_77, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_77));

  /* "sf.pyx":460
 *     BLACK = Color(0, 0, 0)
 *     WHITE = Color(255, 255, 255)
 *     RED = Color(255, 0, 0)             # <<<<<<<<<<<<<<
 *     GREEN = Color(0, 255, 0)
 *     BLUE = Color(0, 0, 255)
 */
  __pyx_k_tuple_78 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_78)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_78));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_78, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_78, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_78, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_78));

  /* "sf.pyx":461
 *     WHITE = Color(255, 255, 255)
 *     RED = Color(255, 0, 0)
 *     GREEN = Color(0, 255, 0)             # <<<<<<<<<<<<<<
 *     BLUE = Color(0, 0, 255)
 *     YELLOW = Color(255, 255, 0)
 */
  __pyx_k_tuple_79 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_79)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_79));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_79, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_79, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_79, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_79));

  /* "sf.pyx":462
 *     RED = Color(255, 0, 0)
 *     GREEN = Color(0, 255, 0)
 *     BLUE = Color(0, 0, 255)             # <<<<<<<<<<<<<<
 *     YELLOW = Color(255, 255, 0)
 *     MAGENTA = Color(255, 0, 255)
 */
  __pyx_k_tuple_80 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_80)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_80));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_80, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_80, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_80, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_80));

  /* "sf.pyx":463
 *     GREEN = Color(0, 255, 0)
 *     BLUE = Color(0, 0, 255)
 *     YELLOW = Color(255, 255, 0)             # <<<<<<<<<<<<<<
 *     MAGENTA = Color(255, 0, 255)
 *     CYAN = Color(0, 255, 255)
 */
  __pyx_k_tuple_81 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_81)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_81));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_81, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_81, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_81, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_81));

  /* "sf.pyx":464
 *     BLUE = Color(0, 0, 255)
 *     YELLOW = Color(255, 255, 0)
 *     MAGENTA = Color(255, 0, 255)             # <<<<<<<<<<<<<<
 *     CYAN = Color(0, 255, 255)
 * 
 */
  __pyx_k_tuple_82 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_82)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_82));
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_82, 0, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_82, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_82, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_82));

  /* "sf.pyx":465
 *     YELLOW = Color(255, 255, 0)
 *     MAGENTA = Color(255, 0, 255)
 *     CYAN = Color(0, 255, 255)             # <<<<<<<<<<<<<<
 * 
 *     cdef decl.Color *p_this
 */
  __pyx_k_tuple_83 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_83)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_83));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_83, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_83, 1, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_INCREF(__pyx_int_255);
  PyTuple_SET_ITEM(__pyx_k_tuple_83, 2, __pyx_int_255);
  __Pyx_GIVEREF(__pyx_int_255);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_83));
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_32 = PyInt_FromLong(32); if (unlikely(!__pyx_int_32)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_255 = PyInt_FromLong(255); if (unlikely(!__pyx_int_255)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initsf(void); /*proto*/
PyMODINIT_FUNC initsf(void)
#else
PyMODINIT_FUNC PyInit_sf(void); /*proto*/
PyMODINIT_FUNC PyInit_sf(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  #if CYTHON_REFNANNY
  void* __pyx_refnanny = NULL;
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  __pyx_refnanny = __Pyx_RefNanny->SetupContext("PyMODINIT_FUNC PyInit_sf(void)", __LINE__, __FILE__);
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __pyx_binding_PyCFunctionType_USED
  if (__pyx_binding_PyCFunctionType_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("sf"), __pyx_methods, __Pyx_DOCSTR(__pyx_k_74), 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_sf) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_2sf_RenderWindow) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "RenderWindow", (PyObject *)&__pyx_type_2sf_RenderWindow) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_RenderWindow = &__pyx_type_2sf_RenderWindow;
  if (PyType_Ready(&__pyx_type_2sf_Mouse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Mouse", (PyObject *)&__pyx_type_2sf_Mouse) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Mouse = &__pyx_type_2sf_Mouse;
  if (PyType_Ready(&__pyx_type_2sf_Joy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Joy", (PyObject *)&__pyx_type_2sf_Joy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Joy = &__pyx_type_2sf_Joy;
  if (PyType_Ready(&__pyx_type_2sf_Key) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Key", (PyObject *)&__pyx_type_2sf_Key) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Key = &__pyx_type_2sf_Key;
  if (PyType_Ready(&__pyx_type_2sf_BlendMode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BlendMode", (PyObject *)&__pyx_type_2sf_BlendMode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_BlendMode = &__pyx_type_2sf_BlendMode;
  if (PyType_Ready(&__pyx_type_2sf_Style) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Style", (PyObject *)&__pyx_type_2sf_Style) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Style = &__pyx_type_2sf_Style;
  if (PyType_Ready(&__pyx_type_2sf_IntRect) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "IntRect", (PyObject *)&__pyx_type_2sf_IntRect) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_IntRect = &__pyx_type_2sf_IntRect;
  if (PyType_Ready(&__pyx_type_2sf_FloatRect) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "FloatRect", (PyObject *)&__pyx_type_2sf_FloatRect) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_FloatRect = &__pyx_type_2sf_FloatRect;
  if (PyType_Ready(&__pyx_type_2sf_Matrix3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Matrix3", (PyObject *)&__pyx_type_2sf_Matrix3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Matrix3 = &__pyx_type_2sf_Matrix3;
  if (PyType_Ready(&__pyx_type_2sf_Clock) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Clock", (PyObject *)&__pyx_type_2sf_Clock) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Clock = &__pyx_type_2sf_Clock;
  if (PyType_Ready(&__pyx_type_2sf_Color) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Color", (PyObject *)&__pyx_type_2sf_Color) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Color = &__pyx_type_2sf_Color;
  if (PyType_Ready(&__pyx_type_2sf_SoundBuffer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SoundBuffer", (PyObject *)&__pyx_type_2sf_SoundBuffer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_SoundBuffer = &__pyx_type_2sf_SoundBuffer;
  if (PyType_Ready(&__pyx_type_2sf_Sound) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Sound", (PyObject *)&__pyx_type_2sf_Sound) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Sound = &__pyx_type_2sf_Sound;
  if (PyType_Ready(&__pyx_type_2sf_Input) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Input", (PyObject *)&__pyx_type_2sf_Input) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Input = &__pyx_type_2sf_Input;
  if (PyType_Ready(&__pyx_type_2sf_Glyph) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Glyph", (PyObject *)&__pyx_type_2sf_Glyph) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 903; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Glyph = &__pyx_type_2sf_Glyph;
  if (PyType_Ready(&__pyx_type_2sf_Font) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Font", (PyObject *)&__pyx_type_2sf_Font) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 944; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Font = &__pyx_type_2sf_Font;
  if (PyType_Ready(&__pyx_type_2sf_Image) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Image", (PyObject *)&__pyx_type_2sf_Image) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Image = &__pyx_type_2sf_Image;
  if (PyType_Ready(&__pyx_type_2sf_Drawable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Drawable", (PyObject *)&__pyx_type_2sf_Drawable) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Drawable = &__pyx_type_2sf_Drawable;
  __pyx_type_2sf_Text.tp_base = __pyx_ptype_2sf_Drawable;
  if (PyType_Ready(&__pyx_type_2sf_Text) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Text", (PyObject *)&__pyx_type_2sf_Text) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Text = &__pyx_type_2sf_Text;
  __pyx_type_2sf_Sprite.tp_base = __pyx_ptype_2sf_Drawable;
  if (PyType_Ready(&__pyx_type_2sf_Sprite) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Sprite", (PyObject *)&__pyx_type_2sf_Sprite) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Sprite = &__pyx_type_2sf_Sprite;
  if (PyType_Ready(&__pyx_type_2sf_VideoMode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    PyObject *wrapper = __Pyx_GetAttrString((PyObject *)&__pyx_type_2sf_VideoMode, "__str__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_2sf_9VideoMode_2__str__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_2sf_9VideoMode_2__str__.doc = __pyx_doc_2sf_9VideoMode_2__str__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_2sf_9VideoMode_2__str__;
    }
  }
  if (__Pyx_SetAttrString(__pyx_m, "VideoMode", (PyObject *)&__pyx_type_2sf_VideoMode) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_VideoMode = &__pyx_type_2sf_VideoMode;
  if (PyType_Ready(&__pyx_type_2sf_View) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "View", (PyObject *)&__pyx_type_2sf_View) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_View = &__pyx_type_2sf_View;
  if (PyType_Ready(&__pyx_type_2sf_Shader) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Shader", (PyObject *)&__pyx_type_2sf_Shader) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Shader = &__pyx_type_2sf_Shader;
  if (PyType_Ready(&__pyx_type_2sf_RenderImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "RenderImage", (PyObject *)&__pyx_type_2sf_RenderImage) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_RenderImage = &__pyx_type_2sf_RenderImage;
  if (PyType_Ready(&__pyx_type_2sf_ShapePoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ShapePoint", (PyObject *)&__pyx_type_2sf_ShapePoint) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_ShapePoint = &__pyx_type_2sf_ShapePoint;
  __pyx_vtabptr_2sf_ShapePointProxy = &__pyx_vtable_2sf_ShapePointProxy;
  __pyx_vtable_2sf_ShapePointProxy._init = (PyObject *(*)(struct __pyx_obj_2sf_ShapePointProxy *, sf::Shape *, unsigned int))__pyx_f_2sf_15ShapePointProxy__init;
  if (PyType_Ready(&__pyx_type_2sf_ShapePointProxy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_2sf_ShapePointProxy.tp_dict, __pyx_vtabptr_2sf_ShapePointProxy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ShapePointProxy", (PyObject *)&__pyx_type_2sf_ShapePointProxy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_ShapePointProxy = &__pyx_type_2sf_ShapePointProxy;
  __pyx_type_2sf_Shape.tp_base = __pyx_ptype_2sf_Drawable;
  if (PyType_Ready(&__pyx_type_2sf_Shape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Shape", (PyObject *)&__pyx_type_2sf_Shape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2sf_Shape = &__pyx_type_2sf_Shape;
  /*--- Type import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "sf.pyx":57
 * 
 * 
 * class PySFMLException(Exception):             # <<<<<<<<<<<<<<
 *     """Base class for the exceptions raised by PySFML."""
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_builtin_Exception);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_builtin_Exception);
  __Pyx_GIVEREF(__pyx_builtin_Exception);
  if (PyDict_SetItemString(((PyObject *)__pyx_t_1), "__doc__", ((PyObject *)__pyx_kp_s_75)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_CreateClass(((PyObject *)__pyx_t_2), ((PyObject *)__pyx_t_1), __pyx_n_s__PySFMLException, __pyx_n_s__sf); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__PySFMLException, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "sf.pyx":63
 * 
 * cdef class Mouse:
 *     LEFT = declmouse.Left             # <<<<<<<<<<<<<<
 *     RIGHT = declmouse.Right
 *     MIDDLE = declmouse.Middle
 */
  __pyx_t_1 = PyInt_FromLong(sf::Mouse::Left); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Mouse->tp_dict, __pyx_n_s__LEFT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Mouse);

  /* "sf.pyx":64
 * cdef class Mouse:
 *     LEFT = declmouse.Left
 *     RIGHT = declmouse.Right             # <<<<<<<<<<<<<<
 *     MIDDLE = declmouse.Middle
 *     X_BUTTON1 = declmouse.XButton1
 */
  __pyx_t_1 = PyInt_FromLong(sf::Mouse::Right); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Mouse->tp_dict, __pyx_n_s__RIGHT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Mouse);

  /* "sf.pyx":65
 *     LEFT = declmouse.Left
 *     RIGHT = declmouse.Right
 *     MIDDLE = declmouse.Middle             # <<<<<<<<<<<<<<
 *     X_BUTTON1 = declmouse.XButton1
 *     X_BUTTON2 = declmouse.XButton2
 */
  __pyx_t_1 = PyInt_FromLong(sf::Mouse::Middle); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Mouse->tp_dict, __pyx_n_s__MIDDLE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Mouse);

  /* "sf.pyx":66
 *     RIGHT = declmouse.Right
 *     MIDDLE = declmouse.Middle
 *     X_BUTTON1 = declmouse.XButton1             # <<<<<<<<<<<<<<
 *     X_BUTTON2 = declmouse.XButton2
 *     BUTTON_COUNT = declmouse.ButtonCount
 */
  __pyx_t_1 = PyInt_FromLong(sf::Mouse::XButton1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Mouse->tp_dict, __pyx_n_s__X_BUTTON1, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 66; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Mouse);

  /* "sf.pyx":67
 *     MIDDLE = declmouse.Middle
 *     X_BUTTON1 = declmouse.XButton1
 *     X_BUTTON2 = declmouse.XButton2             # <<<<<<<<<<<<<<
 *     BUTTON_COUNT = declmouse.ButtonCount
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Mouse::XButton2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Mouse->tp_dict, __pyx_n_s__X_BUTTON2, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Mouse);

  /* "sf.pyx":68
 *     X_BUTTON1 = declmouse.XButton1
 *     X_BUTTON2 = declmouse.XButton2
 *     BUTTON_COUNT = declmouse.ButtonCount             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Mouse::ButtonCount); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Mouse->tp_dict, __pyx_n_s__BUTTON_COUNT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Mouse);

  /* "sf.pyx":73
 * 
 * cdef class Joy:
 *     AXIS_X = decljoy.AxisX             # <<<<<<<<<<<<<<
 *     AXIS_Y = decljoy.AxisY
 *     AXIS_Z = decljoy.AxisZ
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::AxisX); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__AXIS_X, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 73; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":74
 * cdef class Joy:
 *     AXIS_X = decljoy.AxisX
 *     AXIS_Y = decljoy.AxisY             # <<<<<<<<<<<<<<
 *     AXIS_Z = decljoy.AxisZ
 *     AXIS_R = decljoy.AxisR
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::AxisY); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__AXIS_Y, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":75
 *     AXIS_X = decljoy.AxisX
 *     AXIS_Y = decljoy.AxisY
 *     AXIS_Z = decljoy.AxisZ             # <<<<<<<<<<<<<<
 *     AXIS_R = decljoy.AxisR
 *     AXIS_U = decljoy.AxisU
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::AxisZ); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__AXIS_Z, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 75; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":76
 *     AXIS_Y = decljoy.AxisY
 *     AXIS_Z = decljoy.AxisZ
 *     AXIS_R = decljoy.AxisR             # <<<<<<<<<<<<<<
 *     AXIS_U = decljoy.AxisU
 *     AXIS_V = decljoy.AxisV
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::AxisR); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__AXIS_R, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 76; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":77
 *     AXIS_Z = decljoy.AxisZ
 *     AXIS_R = decljoy.AxisR
 *     AXIS_U = decljoy.AxisU             # <<<<<<<<<<<<<<
 *     AXIS_V = decljoy.AxisV
 *     AXIS_POV = decljoy.AxisPOV
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::AxisU); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__AXIS_U, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":78
 *     AXIS_R = decljoy.AxisR
 *     AXIS_U = decljoy.AxisU
 *     AXIS_V = decljoy.AxisV             # <<<<<<<<<<<<<<
 *     AXIS_POV = decljoy.AxisPOV
 *     AXIS_COUNT = decljoy.AxisCount
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::AxisV); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__AXIS_V, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":79
 *     AXIS_U = decljoy.AxisU
 *     AXIS_V = decljoy.AxisV
 *     AXIS_POV = decljoy.AxisPOV             # <<<<<<<<<<<<<<
 *     AXIS_COUNT = decljoy.AxisCount
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::AxisPOV); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__AXIS_POV, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":80
 *     AXIS_V = decljoy.AxisV
 *     AXIS_POV = decljoy.AxisPOV
 *     AXIS_COUNT = decljoy.AxisCount             # <<<<<<<<<<<<<<
 * 
 *     COUNT = decljoy.Count
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::AxisCount); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__AXIS_COUNT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":82
 *     AXIS_COUNT = decljoy.AxisCount
 * 
 *     COUNT = decljoy.Count             # <<<<<<<<<<<<<<
 *     BUTTON_COUNT = decljoy.ButtonCount
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::Count); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__COUNT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":83
 * 
 *     COUNT = decljoy.Count
 *     BUTTON_COUNT = decljoy.ButtonCount             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Joy::ButtonCount); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Joy->tp_dict, __pyx_n_s__BUTTON_COUNT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Joy);

  /* "sf.pyx":88
 * 
 * cdef class Key:
 *     A = declkey.A             # <<<<<<<<<<<<<<
 *     B = declkey.B
 *     C = declkey.C
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::A); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__A, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":89
 * cdef class Key:
 *     A = declkey.A
 *     B = declkey.B             # <<<<<<<<<<<<<<
 *     C = declkey.C
 *     D = declkey.D
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::B); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__B, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":90
 *     A = declkey.A
 *     B = declkey.B
 *     C = declkey.C             # <<<<<<<<<<<<<<
 *     D = declkey.D
 *     E = declkey.E
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::C); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__C, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":91
 *     B = declkey.B
 *     C = declkey.C
 *     D = declkey.D             # <<<<<<<<<<<<<<
 *     E = declkey.E
 *     F = declkey.F
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::D); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__D, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":92
 *     C = declkey.C
 *     D = declkey.D
 *     E = declkey.E             # <<<<<<<<<<<<<<
 *     F = declkey.F
 *     G = declkey.G
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::E); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__E, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":93
 *     D = declkey.D
 *     E = declkey.E
 *     F = declkey.F             # <<<<<<<<<<<<<<
 *     G = declkey.G
 *     H = declkey.H
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":94
 *     E = declkey.E
 *     F = declkey.F
 *     G = declkey.G             # <<<<<<<<<<<<<<
 *     H = declkey.H
 *     I = declkey.I
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::G); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__G, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":95
 *     F = declkey.F
 *     G = declkey.G
 *     H = declkey.H             # <<<<<<<<<<<<<<
 *     I = declkey.I
 *     J = declkey.J
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::H); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__H, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":96
 *     G = declkey.G
 *     H = declkey.H
 *     I = declkey.I             # <<<<<<<<<<<<<<
 *     J = declkey.J
 *     K = declkey.K
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::I); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__I, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 96; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":97
 *     H = declkey.H
 *     I = declkey.I
 *     J = declkey.J             # <<<<<<<<<<<<<<
 *     K = declkey.K
 *     L = declkey.L
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::J); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__J, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 97; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":98
 *     I = declkey.I
 *     J = declkey.J
 *     K = declkey.K             # <<<<<<<<<<<<<<
 *     L = declkey.L
 *     M = declkey.M
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::K); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__K, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":99
 *     J = declkey.J
 *     K = declkey.K
 *     L = declkey.L             # <<<<<<<<<<<<<<
 *     M = declkey.M
 *     N = declkey.N
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::L); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__L, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":100
 *     K = declkey.K
 *     L = declkey.L
 *     M = declkey.M             # <<<<<<<<<<<<<<
 *     N = declkey.N
 *     O = declkey.O
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::M); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__M, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":101
 *     L = declkey.L
 *     M = declkey.M
 *     N = declkey.N             # <<<<<<<<<<<<<<
 *     O = declkey.O
 *     P = declkey.P
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::N); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__N, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":102
 *     M = declkey.M
 *     N = declkey.N
 *     O = declkey.O             # <<<<<<<<<<<<<<
 *     P = declkey.P
 *     Q = declkey.Q
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::O); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__O, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":103
 *     N = declkey.N
 *     O = declkey.O
 *     P = declkey.P             # <<<<<<<<<<<<<<
 *     Q = declkey.Q
 *     R = declkey.R
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::P); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__P, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":104
 *     O = declkey.O
 *     P = declkey.P
 *     Q = declkey.Q             # <<<<<<<<<<<<<<
 *     R = declkey.R
 *     S = declkey.S
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Q); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__Q, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":105
 *     P = declkey.P
 *     Q = declkey.Q
 *     R = declkey.R             # <<<<<<<<<<<<<<
 *     S = declkey.S
 *     T = declkey.T
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::R); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__R, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":106
 *     Q = declkey.Q
 *     R = declkey.R
 *     S = declkey.S             # <<<<<<<<<<<<<<
 *     T = declkey.T
 *     U = declkey.U
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::S); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__S, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":107
 *     R = declkey.R
 *     S = declkey.S
 *     T = declkey.T             # <<<<<<<<<<<<<<
 *     U = declkey.U
 *     V = declkey.V
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::T); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__T, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":108
 *     S = declkey.S
 *     T = declkey.T
 *     U = declkey.U             # <<<<<<<<<<<<<<
 *     V = declkey.V
 *     W = declkey.W
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::U); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__U, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":109
 *     T = declkey.T
 *     U = declkey.U
 *     V = declkey.V             # <<<<<<<<<<<<<<
 *     W = declkey.W
 *     X = declkey.X
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::V); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__V, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":110
 *     U = declkey.U
 *     V = declkey.V
 *     W = declkey.W             # <<<<<<<<<<<<<<
 *     X = declkey.X
 *     Y = declkey.Y
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::W); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__W, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":111
 *     V = declkey.V
 *     W = declkey.W
 *     X = declkey.X             # <<<<<<<<<<<<<<
 *     Y = declkey.Y
 *     Z = declkey.Z
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::X); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__X, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":112
 *     W = declkey.W
 *     X = declkey.X
 *     Y = declkey.Y             # <<<<<<<<<<<<<<
 *     Z = declkey.Z
 *     NUM0 = declkey.Num0
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__Y, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":113
 *     X = declkey.X
 *     Y = declkey.Y
 *     Z = declkey.Z             # <<<<<<<<<<<<<<
 *     NUM0 = declkey.Num0
 *     NUM1 = declkey.Num1
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Z); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__Z, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":114
 *     Y = declkey.Y
 *     Z = declkey.Z
 *     NUM0 = declkey.Num0             # <<<<<<<<<<<<<<
 *     NUM1 = declkey.Num1
 *     NUM2 = declkey.Num2
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM0, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":115
 *     Z = declkey.Z
 *     NUM0 = declkey.Num0
 *     NUM1 = declkey.Num1             # <<<<<<<<<<<<<<
 *     NUM2 = declkey.Num2
 *     NUM3 = declkey.Num3
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM1, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":116
 *     NUM0 = declkey.Num0
 *     NUM1 = declkey.Num1
 *     NUM2 = declkey.Num2             # <<<<<<<<<<<<<<
 *     NUM3 = declkey.Num3
 *     NUM4 = declkey.Num4
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM2, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":117
 *     NUM1 = declkey.Num1
 *     NUM2 = declkey.Num2
 *     NUM3 = declkey.Num3             # <<<<<<<<<<<<<<
 *     NUM4 = declkey.Num4
 *     NUM5 = declkey.Num5
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM3, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":118
 *     NUM2 = declkey.Num2
 *     NUM3 = declkey.Num3
 *     NUM4 = declkey.Num4             # <<<<<<<<<<<<<<
 *     NUM5 = declkey.Num5
 *     NUM6 = declkey.Num6
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM4, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":119
 *     NUM3 = declkey.Num3
 *     NUM4 = declkey.Num4
 *     NUM5 = declkey.Num5             # <<<<<<<<<<<<<<
 *     NUM6 = declkey.Num6
 *     NUM7 = declkey.Num7
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM5, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":120
 *     NUM4 = declkey.Num4
 *     NUM5 = declkey.Num5
 *     NUM6 = declkey.Num6             # <<<<<<<<<<<<<<
 *     NUM7 = declkey.Num7
 *     NUM8 = declkey.Num8
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM6, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":121
 *     NUM5 = declkey.Num5
 *     NUM6 = declkey.Num6
 *     NUM7 = declkey.Num7             # <<<<<<<<<<<<<<
 *     NUM8 = declkey.Num8
 *     NUM9 = declkey.Num9
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM7, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":122
 *     NUM6 = declkey.Num6
 *     NUM7 = declkey.Num7
 *     NUM8 = declkey.Num8             # <<<<<<<<<<<<<<
 *     NUM9 = declkey.Num9
 *     ESCAPE = declkey.Escape
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM8, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":123
 *     NUM7 = declkey.Num7
 *     NUM8 = declkey.Num8
 *     NUM9 = declkey.Num9             # <<<<<<<<<<<<<<
 *     ESCAPE = declkey.Escape
 *     L_CONTROL = declkey.LControl
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Num9); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUM9, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":124
 *     NUM8 = declkey.Num8
 *     NUM9 = declkey.Num9
 *     ESCAPE = declkey.Escape             # <<<<<<<<<<<<<<
 *     L_CONTROL = declkey.LControl
 *     L_SHIFT = declkey.LShift
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Escape); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__ESCAPE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":125
 *     NUM9 = declkey.Num9
 *     ESCAPE = declkey.Escape
 *     L_CONTROL = declkey.LControl             # <<<<<<<<<<<<<<
 *     L_SHIFT = declkey.LShift
 *     L_ALT = declkey.LAlt
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::LControl); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__L_CONTROL, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":126
 *     ESCAPE = declkey.Escape
 *     L_CONTROL = declkey.LControl
 *     L_SHIFT = declkey.LShift             # <<<<<<<<<<<<<<
 *     L_ALT = declkey.LAlt
 *     L_SYSTEM = declkey.LSystem
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::LShift); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__L_SHIFT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":127
 *     L_CONTROL = declkey.LControl
 *     L_SHIFT = declkey.LShift
 *     L_ALT = declkey.LAlt             # <<<<<<<<<<<<<<
 *     L_SYSTEM = declkey.LSystem
 *     R_CONTROL = declkey.RControl
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::LAlt); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__L_ALT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":128
 *     L_SHIFT = declkey.LShift
 *     L_ALT = declkey.LAlt
 *     L_SYSTEM = declkey.LSystem             # <<<<<<<<<<<<<<
 *     R_CONTROL = declkey.RControl
 *     R_SHIFT = declkey.RShift
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::LSystem); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__L_SYSTEM, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":129
 *     L_ALT = declkey.LAlt
 *     L_SYSTEM = declkey.LSystem
 *     R_CONTROL = declkey.RControl             # <<<<<<<<<<<<<<
 *     R_SHIFT = declkey.RShift
 *     R_ALT = declkey.RAlt
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::RControl); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__R_CONTROL, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":130
 *     L_SYSTEM = declkey.LSystem
 *     R_CONTROL = declkey.RControl
 *     R_SHIFT = declkey.RShift             # <<<<<<<<<<<<<<
 *     R_ALT = declkey.RAlt
 *     R_SYSTEM = declkey.RSystem
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::RShift); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__R_SHIFT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":131
 *     R_CONTROL = declkey.RControl
 *     R_SHIFT = declkey.RShift
 *     R_ALT = declkey.RAlt             # <<<<<<<<<<<<<<
 *     R_SYSTEM = declkey.RSystem
 *     MENU = declkey.Menu
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::RAlt); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__R_ALT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":132
 *     R_SHIFT = declkey.RShift
 *     R_ALT = declkey.RAlt
 *     R_SYSTEM = declkey.RSystem             # <<<<<<<<<<<<<<
 *     MENU = declkey.Menu
 *     L_BRACKET = declkey.LBracket
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::RSystem); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__R_SYSTEM, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":133
 *     R_ALT = declkey.RAlt
 *     R_SYSTEM = declkey.RSystem
 *     MENU = declkey.Menu             # <<<<<<<<<<<<<<
 *     L_BRACKET = declkey.LBracket
 *     R_BRACKET = declkey.RBracket
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Menu); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__MENU, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":134
 *     R_SYSTEM = declkey.RSystem
 *     MENU = declkey.Menu
 *     L_BRACKET = declkey.LBracket             # <<<<<<<<<<<<<<
 *     R_BRACKET = declkey.RBracket
 *     SEMI_COLON = declkey.SemiColon
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::LBracket); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__L_BRACKET, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":135
 *     MENU = declkey.Menu
 *     L_BRACKET = declkey.LBracket
 *     R_BRACKET = declkey.RBracket             # <<<<<<<<<<<<<<
 *     SEMI_COLON = declkey.SemiColon
 *     COMMA = declkey.Comma
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::RBracket); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__R_BRACKET, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":136
 *     L_BRACKET = declkey.LBracket
 *     R_BRACKET = declkey.RBracket
 *     SEMI_COLON = declkey.SemiColon             # <<<<<<<<<<<<<<
 *     COMMA = declkey.Comma
 *     PERIOD = declkey.Period
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::SemiColon); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__SEMI_COLON, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":137
 *     R_BRACKET = declkey.RBracket
 *     SEMI_COLON = declkey.SemiColon
 *     COMMA = declkey.Comma             # <<<<<<<<<<<<<<
 *     PERIOD = declkey.Period
 *     QUOTE = declkey.Quote
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Comma); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__COMMA, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":138
 *     SEMI_COLON = declkey.SemiColon
 *     COMMA = declkey.Comma
 *     PERIOD = declkey.Period             # <<<<<<<<<<<<<<
 *     QUOTE = declkey.Quote
 *     SLASH = declkey.Slash
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Period); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__PERIOD, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":139
 *     COMMA = declkey.Comma
 *     PERIOD = declkey.Period
 *     QUOTE = declkey.Quote             # <<<<<<<<<<<<<<
 *     SLASH = declkey.Slash
 *     BACK_SLASH = declkey.BackSlash
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Quote); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__QUOTE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":140
 *     PERIOD = declkey.Period
 *     QUOTE = declkey.Quote
 *     SLASH = declkey.Slash             # <<<<<<<<<<<<<<
 *     BACK_SLASH = declkey.BackSlash
 *     TILDE = declkey.Tilde
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Slash); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__SLASH, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":141
 *     QUOTE = declkey.Quote
 *     SLASH = declkey.Slash
 *     BACK_SLASH = declkey.BackSlash             # <<<<<<<<<<<<<<
 *     TILDE = declkey.Tilde
 *     EQUAL = declkey.Equal
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::BackSlash); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__BACK_SLASH, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":142
 *     SLASH = declkey.Slash
 *     BACK_SLASH = declkey.BackSlash
 *     TILDE = declkey.Tilde             # <<<<<<<<<<<<<<
 *     EQUAL = declkey.Equal
 *     DASH = declkey.Dash
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Tilde); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__TILDE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":143
 *     BACK_SLASH = declkey.BackSlash
 *     TILDE = declkey.Tilde
 *     EQUAL = declkey.Equal             # <<<<<<<<<<<<<<
 *     DASH = declkey.Dash
 *     SPACE = declkey.Space
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Equal); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__EQUAL, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":144
 *     TILDE = declkey.Tilde
 *     EQUAL = declkey.Equal
 *     DASH = declkey.Dash             # <<<<<<<<<<<<<<
 *     SPACE = declkey.Space
 *     RETURN = declkey.Return
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Dash); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__DASH, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":145
 *     EQUAL = declkey.Equal
 *     DASH = declkey.Dash
 *     SPACE = declkey.Space             # <<<<<<<<<<<<<<
 *     RETURN = declkey.Return
 *     BACK = declkey.Back
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Space); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__SPACE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":146
 *     DASH = declkey.Dash
 *     SPACE = declkey.Space
 *     RETURN = declkey.Return             # <<<<<<<<<<<<<<
 *     BACK = declkey.Back
 *     TAB = declkey.Tab
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Return); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__RETURN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":147
 *     SPACE = declkey.Space
 *     RETURN = declkey.Return
 *     BACK = declkey.Back             # <<<<<<<<<<<<<<
 *     TAB = declkey.Tab
 *     PAGE_UP = declkey.PageUp
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Back); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__BACK, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":148
 *     RETURN = declkey.Return
 *     BACK = declkey.Back
 *     TAB = declkey.Tab             # <<<<<<<<<<<<<<
 *     PAGE_UP = declkey.PageUp
 *     PAGE_DOWN = declkey.PageDown
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Tab); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__TAB, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":149
 *     BACK = declkey.Back
 *     TAB = declkey.Tab
 *     PAGE_UP = declkey.PageUp             # <<<<<<<<<<<<<<
 *     PAGE_DOWN = declkey.PageDown
 *     END = declkey.End
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::PageUp); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__PAGE_UP, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":150
 *     TAB = declkey.Tab
 *     PAGE_UP = declkey.PageUp
 *     PAGE_DOWN = declkey.PageDown             # <<<<<<<<<<<<<<
 *     END = declkey.End
 *     HOME = declkey.Home
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::PageDown); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__PAGE_DOWN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":151
 *     PAGE_UP = declkey.PageUp
 *     PAGE_DOWN = declkey.PageDown
 *     END = declkey.End             # <<<<<<<<<<<<<<
 *     HOME = declkey.Home
 *     INSERT = declkey.Insert
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::End); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__END, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":152
 *     PAGE_DOWN = declkey.PageDown
 *     END = declkey.End
 *     HOME = declkey.Home             # <<<<<<<<<<<<<<
 *     INSERT = declkey.Insert
 *     DELETE = declkey.Delete
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Home); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__HOME, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":153
 *     END = declkey.End
 *     HOME = declkey.Home
 *     INSERT = declkey.Insert             # <<<<<<<<<<<<<<
 *     DELETE = declkey.Delete
 *     ADD = declkey.Add
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Insert); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__INSERT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":154
 *     HOME = declkey.Home
 *     INSERT = declkey.Insert
 *     DELETE = declkey.Delete             # <<<<<<<<<<<<<<
 *     ADD = declkey.Add
 *     SUBTRACT = declkey.Subtract
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Delete); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__DELETE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":155
 *     INSERT = declkey.Insert
 *     DELETE = declkey.Delete
 *     ADD = declkey.Add             # <<<<<<<<<<<<<<
 *     SUBTRACT = declkey.Subtract
 *     MULTIPLY = declkey.Multiply
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Add); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__ADD, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":156
 *     DELETE = declkey.Delete
 *     ADD = declkey.Add
 *     SUBTRACT = declkey.Subtract             # <<<<<<<<<<<<<<
 *     MULTIPLY = declkey.Multiply
 *     DIVIDE = declkey.Divide
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Subtract); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__SUBTRACT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":157
 *     ADD = declkey.Add
 *     SUBTRACT = declkey.Subtract
 *     MULTIPLY = declkey.Multiply             # <<<<<<<<<<<<<<
 *     DIVIDE = declkey.Divide
 *     LEFT = declkey.Left
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Multiply); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__MULTIPLY, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":158
 *     SUBTRACT = declkey.Subtract
 *     MULTIPLY = declkey.Multiply
 *     DIVIDE = declkey.Divide             # <<<<<<<<<<<<<<
 *     LEFT = declkey.Left
 *     RIGHT = declkey.Right
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Divide); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__DIVIDE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":159
 *     MULTIPLY = declkey.Multiply
 *     DIVIDE = declkey.Divide
 *     LEFT = declkey.Left             # <<<<<<<<<<<<<<
 *     RIGHT = declkey.Right
 *     UP = declkey.Up
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Left); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__LEFT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":160
 *     DIVIDE = declkey.Divide
 *     LEFT = declkey.Left
 *     RIGHT = declkey.Right             # <<<<<<<<<<<<<<
 *     UP = declkey.Up
 *     DOWN = declkey.Down
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Right); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__RIGHT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":161
 *     LEFT = declkey.Left
 *     RIGHT = declkey.Right
 *     UP = declkey.Up             # <<<<<<<<<<<<<<
 *     DOWN = declkey.Down
 *     NUMPAD0 = declkey.Numpad0
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Up); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__UP, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":162
 *     RIGHT = declkey.Right
 *     UP = declkey.Up
 *     DOWN = declkey.Down             # <<<<<<<<<<<<<<
 *     NUMPAD0 = declkey.Numpad0
 *     NUMPAD1 = declkey.Numpad1
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Down); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__DOWN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":163
 *     UP = declkey.Up
 *     DOWN = declkey.Down
 *     NUMPAD0 = declkey.Numpad0             # <<<<<<<<<<<<<<
 *     NUMPAD1 = declkey.Numpad1
 *     NUMPAD2 = declkey.Numpad2
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD0, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":164
 *     DOWN = declkey.Down
 *     NUMPAD0 = declkey.Numpad0
 *     NUMPAD1 = declkey.Numpad1             # <<<<<<<<<<<<<<
 *     NUMPAD2 = declkey.Numpad2
 *     NUMPAD3 = declkey.Numpad3
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD1, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":165
 *     NUMPAD0 = declkey.Numpad0
 *     NUMPAD1 = declkey.Numpad1
 *     NUMPAD2 = declkey.Numpad2             # <<<<<<<<<<<<<<
 *     NUMPAD3 = declkey.Numpad3
 *     NUMPAD4 = declkey.Numpad4
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD2, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":166
 *     NUMPAD1 = declkey.Numpad1
 *     NUMPAD2 = declkey.Numpad2
 *     NUMPAD3 = declkey.Numpad3             # <<<<<<<<<<<<<<
 *     NUMPAD4 = declkey.Numpad4
 *     NUMPAD5 = declkey.Numpad5
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD3, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":167
 *     NUMPAD2 = declkey.Numpad2
 *     NUMPAD3 = declkey.Numpad3
 *     NUMPAD4 = declkey.Numpad4             # <<<<<<<<<<<<<<
 *     NUMPAD5 = declkey.Numpad5
 *     NUMPAD6 = declkey.Numpad6
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD4, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":168
 *     NUMPAD3 = declkey.Numpad3
 *     NUMPAD4 = declkey.Numpad4
 *     NUMPAD5 = declkey.Numpad5             # <<<<<<<<<<<<<<
 *     NUMPAD6 = declkey.Numpad6
 *     NUMPAD7 = declkey.Numpad7
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD5, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":169
 *     NUMPAD4 = declkey.Numpad4
 *     NUMPAD5 = declkey.Numpad5
 *     NUMPAD6 = declkey.Numpad6             # <<<<<<<<<<<<<<
 *     NUMPAD7 = declkey.Numpad7
 *     NUMPAD8 = declkey.Numpad8
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD6, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":170
 *     NUMPAD5 = declkey.Numpad5
 *     NUMPAD6 = declkey.Numpad6
 *     NUMPAD7 = declkey.Numpad7             # <<<<<<<<<<<<<<
 *     NUMPAD8 = declkey.Numpad8
 *     NUMPAD9 = declkey.Numpad9
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD7, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":171
 *     NUMPAD6 = declkey.Numpad6
 *     NUMPAD7 = declkey.Numpad7
 *     NUMPAD8 = declkey.Numpad8             # <<<<<<<<<<<<<<
 *     NUMPAD9 = declkey.Numpad9
 *     F1 = declkey.F1
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD8, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":172
 *     NUMPAD7 = declkey.Numpad7
 *     NUMPAD8 = declkey.Numpad8
 *     NUMPAD9 = declkey.Numpad9             # <<<<<<<<<<<<<<
 *     F1 = declkey.F1
 *     F2 = declkey.F2
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Numpad9); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__NUMPAD9, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":173
 *     NUMPAD8 = declkey.Numpad8
 *     NUMPAD9 = declkey.Numpad9
 *     F1 = declkey.F1             # <<<<<<<<<<<<<<
 *     F2 = declkey.F2
 *     F3 = declkey.F3
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F1, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":174
 *     NUMPAD9 = declkey.Numpad9
 *     F1 = declkey.F1
 *     F2 = declkey.F2             # <<<<<<<<<<<<<<
 *     F3 = declkey.F3
 *     F4 = declkey.F4
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F2, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":175
 *     F1 = declkey.F1
 *     F2 = declkey.F2
 *     F3 = declkey.F3             # <<<<<<<<<<<<<<
 *     F4 = declkey.F4
 *     F5 = declkey.F5
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F3, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":176
 *     F2 = declkey.F2
 *     F3 = declkey.F3
 *     F4 = declkey.F4             # <<<<<<<<<<<<<<
 *     F5 = declkey.F5
 *     F6 = declkey.F6
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F4, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":177
 *     F3 = declkey.F3
 *     F4 = declkey.F4
 *     F5 = declkey.F5             # <<<<<<<<<<<<<<
 *     F6 = declkey.F6
 *     F7 = declkey.F7
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F5, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":178
 *     F4 = declkey.F4
 *     F5 = declkey.F5
 *     F6 = declkey.F6             # <<<<<<<<<<<<<<
 *     F7 = declkey.F7
 *     F8 = declkey.F8
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F6, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":179
 *     F5 = declkey.F5
 *     F6 = declkey.F6
 *     F7 = declkey.F7             # <<<<<<<<<<<<<<
 *     F8 = declkey.F8
 *     F9 = declkey.F9
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F7, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":180
 *     F6 = declkey.F6
 *     F7 = declkey.F7
 *     F8 = declkey.F8             # <<<<<<<<<<<<<<
 *     F9 = declkey.F9
 *     F10 = declkey.F10
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F8, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":181
 *     F7 = declkey.F7
 *     F8 = declkey.F8
 *     F9 = declkey.F9             # <<<<<<<<<<<<<<
 *     F10 = declkey.F10
 *     F11 = declkey.F11
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F9); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F9, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":182
 *     F8 = declkey.F8
 *     F9 = declkey.F9
 *     F10 = declkey.F10             # <<<<<<<<<<<<<<
 *     F11 = declkey.F11
 *     F12 = declkey.F12
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F10); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F10, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":183
 *     F9 = declkey.F9
 *     F10 = declkey.F10
 *     F11 = declkey.F11             # <<<<<<<<<<<<<<
 *     F12 = declkey.F12
 *     F13 = declkey.F13
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F11); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F11, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":184
 *     F10 = declkey.F10
 *     F11 = declkey.F11
 *     F12 = declkey.F12             # <<<<<<<<<<<<<<
 *     F13 = declkey.F13
 *     F14 = declkey.F14
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F12); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F12, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":185
 *     F11 = declkey.F11
 *     F12 = declkey.F12
 *     F13 = declkey.F13             # <<<<<<<<<<<<<<
 *     F14 = declkey.F14
 *     F15 = declkey.F15
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F13); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F13, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":186
 *     F12 = declkey.F12
 *     F13 = declkey.F13
 *     F14 = declkey.F14             # <<<<<<<<<<<<<<
 *     F15 = declkey.F15
 *     PAUSE = declkey.Pause
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F14, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":187
 *     F13 = declkey.F13
 *     F14 = declkey.F14
 *     F15 = declkey.F15             # <<<<<<<<<<<<<<
 *     PAUSE = declkey.Pause
 *     COUNT = declkey.Count
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::F15); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__F15, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":188
 *     F14 = declkey.F14
 *     F15 = declkey.F15
 *     PAUSE = declkey.Pause             # <<<<<<<<<<<<<<
 *     COUNT = declkey.Count
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Pause); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__PAUSE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":189
 *     F15 = declkey.F15
 *     PAUSE = declkey.Pause
 *     COUNT = declkey.Count             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Key::Count); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Key->tp_dict, __pyx_n_s__COUNT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Key);

  /* "sf.pyx":194
 * 
 * cdef class BlendMode:
 *     ALPHA = declblendmode.Alpha             # <<<<<<<<<<<<<<
 *     ADD = declblendmode.Add
 *     MULTIPLY = declblendmode.Multiply
 */
  __pyx_t_1 = PyInt_FromLong(sf::Blend::Alpha); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_BlendMode->tp_dict, __pyx_n_s__ALPHA, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_BlendMode);

  /* "sf.pyx":195
 * cdef class BlendMode:
 *     ALPHA = declblendmode.Alpha
 *     ADD = declblendmode.Add             # <<<<<<<<<<<<<<
 *     MULTIPLY = declblendmode.Multiply
 *     NONE = declblendmode.None
 */
  __pyx_t_1 = PyInt_FromLong(sf::Blend::Add); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_BlendMode->tp_dict, __pyx_n_s__ADD, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_BlendMode);

  /* "sf.pyx":196
 *     ALPHA = declblendmode.Alpha
 *     ADD = declblendmode.Add
 *     MULTIPLY = declblendmode.Multiply             # <<<<<<<<<<<<<<
 *     NONE = declblendmode.None
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Blend::Multiply); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_BlendMode->tp_dict, __pyx_n_s__MULTIPLY, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_BlendMode);

  /* "sf.pyx":197
 *     ADD = declblendmode.Add
 *     MULTIPLY = declblendmode.Multiply
 *     NONE = declblendmode.None             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Blend::None); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_BlendMode->tp_dict, __pyx_n_s__NONE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_BlendMode);

  /* "sf.pyx":202
 * 
 * cdef class Style:
 *     NONE = declstyle.None             # <<<<<<<<<<<<<<
 *     TITLEEBAR = declstyle.Titlebar
 *     RESIZE = declstyle.Resize
 */
  __pyx_t_1 = PyInt_FromLong(sf::Style::None); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Style->tp_dict, __pyx_n_s__NONE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Style);

  /* "sf.pyx":203
 * cdef class Style:
 *     NONE = declstyle.None
 *     TITLEEBAR = declstyle.Titlebar             # <<<<<<<<<<<<<<
 *     RESIZE = declstyle.Resize
 *     CLOSE = declstyle.Close
 */
  __pyx_t_1 = PyInt_FromLong(sf::Style::Titlebar); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Style->tp_dict, __pyx_n_s__TITLEEBAR, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Style);

  /* "sf.pyx":204
 *     NONE = declstyle.None
 *     TITLEEBAR = declstyle.Titlebar
 *     RESIZE = declstyle.Resize             # <<<<<<<<<<<<<<
 *     CLOSE = declstyle.Close
 *     FULLSCREEN = declstyle.Fullscreen
 */
  __pyx_t_1 = PyInt_FromLong(sf::Style::Resize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Style->tp_dict, __pyx_n_s__RESIZE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Style);

  /* "sf.pyx":205
 *     TITLEEBAR = declstyle.Titlebar
 *     RESIZE = declstyle.Resize
 *     CLOSE = declstyle.Close             # <<<<<<<<<<<<<<
 *     FULLSCREEN = declstyle.Fullscreen
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Style::Close); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Style->tp_dict, __pyx_n_s__CLOSE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Style);

  /* "sf.pyx":206
 *     RESIZE = declstyle.Resize
 *     CLOSE = declstyle.Close
 *     FULLSCREEN = declstyle.Fullscreen             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Style::Fullscreen); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Style->tp_dict, __pyx_n_s__FULLSCREEN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Style);

  /* "sf.pyx":347
 *     cdef decl.Matrix3 *p_this
 * 
 *     IDENTITY = wrap_matrix_instance(<decl.Matrix3*>&decl.Identity)             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, float a00, float a01, float a02,
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_2sf_wrap_matrix_instance(((sf::Matrix3 *)(&sf::Matrix3::Identity)))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Matrix3->tp_dict, __pyx_n_s__IDENTITY, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Matrix3);

  /* "sf.pyx":381
 * 
 *     @classmethod
 *     def projection(cls, tuple center, tuple size, float rotation):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f cpp_center
 *         cdef decl.Vector2f cpp_size
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Matrix3, __pyx_n_s__projection); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Matrix3->tp_dict, __pyx_n_s__projection, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Matrix3);

  /* "sf.pyx":393
 * 
 *     @classmethod
 *     def transformation(cls, tuple origin, tuple translation, float rotation,             # <<<<<<<<<<<<<<
 *                        tuple scale):
 *         cdef decl.Vector2f cpp_origin
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Matrix3, __pyx_n_s__transformation); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Matrix3->tp_dict, __pyx_n_s__transformation, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Matrix3);

  /* "sf.pyx":458
 * 
 * cdef class Color:
 *     BLACK = Color(0, 0, 0)             # <<<<<<<<<<<<<<
 *     WHITE = Color(255, 255, 255)
 *     RED = Color(255, 0, 0)
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_76), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Color->tp_dict, __pyx_n_s__BLACK, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Color);

  /* "sf.pyx":459
 * cdef class Color:
 *     BLACK = Color(0, 0, 0)
 *     WHITE = Color(255, 255, 255)             # <<<<<<<<<<<<<<
 *     RED = Color(255, 0, 0)
 *     GREEN = Color(0, 255, 0)
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_77), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Color->tp_dict, __pyx_n_s__WHITE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Color);

  /* "sf.pyx":460
 *     BLACK = Color(0, 0, 0)
 *     WHITE = Color(255, 255, 255)
 *     RED = Color(255, 0, 0)             # <<<<<<<<<<<<<<
 *     GREEN = Color(0, 255, 0)
 *     BLUE = Color(0, 0, 255)
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_78), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Color->tp_dict, __pyx_n_s__RED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Color);

  /* "sf.pyx":461
 *     WHITE = Color(255, 255, 255)
 *     RED = Color(255, 0, 0)
 *     GREEN = Color(0, 255, 0)             # <<<<<<<<<<<<<<
 *     BLUE = Color(0, 0, 255)
 *     YELLOW = Color(255, 255, 0)
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_79), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Color->tp_dict, __pyx_n_s__GREEN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Color);

  /* "sf.pyx":462
 *     RED = Color(255, 0, 0)
 *     GREEN = Color(0, 255, 0)
 *     BLUE = Color(0, 0, 255)             # <<<<<<<<<<<<<<
 *     YELLOW = Color(255, 255, 0)
 *     MAGENTA = Color(255, 0, 255)
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_80), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Color->tp_dict, __pyx_n_s__BLUE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Color);

  /* "sf.pyx":463
 *     GREEN = Color(0, 255, 0)
 *     BLUE = Color(0, 0, 255)
 *     YELLOW = Color(255, 255, 0)             # <<<<<<<<<<<<<<
 *     MAGENTA = Color(255, 0, 255)
 *     CYAN = Color(0, 255, 255)
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_81), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Color->tp_dict, __pyx_n_s__YELLOW, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Color);

  /* "sf.pyx":464
 *     BLUE = Color(0, 0, 255)
 *     YELLOW = Color(255, 255, 0)
 *     MAGENTA = Color(255, 0, 255)             # <<<<<<<<<<<<<<
 *     CYAN = Color(0, 255, 255)
 * 
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_82), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Color->tp_dict, __pyx_n_s__MAGENTA, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Color);

  /* "sf.pyx":465
 *     YELLOW = Color(255, 255, 0)
 *     MAGENTA = Color(255, 0, 255)
 *     CYAN = Color(0, 255, 255)             # <<<<<<<<<<<<<<
 * 
 *     cdef decl.Color *p_this
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), ((PyObject *)__pyx_k_tuple_83), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Color->tp_dict, __pyx_n_s__CYAN, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Color);

  /* "sf.pyx":581
 * 
 *     @classmethod
 *     def load_from_file(cls, char* filename):             # <<<<<<<<<<<<<<
 *         cdef declaudio.SoundBuffer *p = new declaudio.SoundBuffer()
 * 
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_SoundBuffer, __pyx_n_s__load_from_file); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_SoundBuffer->tp_dict, __pyx_n_s__load_from_file, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_SoundBuffer);

  /* "sf.pyx":590
 * 
 *     @classmethod
 *     def load_from_memory(cls, char* data):             # <<<<<<<<<<<<<<
 *         cdef declaudio.SoundBuffer *p = new declaudio.SoundBuffer()
 * 
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_SoundBuffer, __pyx_n_s__load_from_memory); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_SoundBuffer->tp_dict, __pyx_n_s__load_from_memory, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_SoundBuffer);

  /* "sf.pyx":599
 * 
 *     @classmethod
 *     def load_from_samples(cls, list samples, unsigned int channels_count,             # <<<<<<<<<<<<<<
 *                           unsigned int sample_rate):
 *         cdef declaudio.SoundBuffer *p_sb = new declaudio.SoundBuffer()
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_SoundBuffer, __pyx_n_s__load_from_samples); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_SoundBuffer->tp_dict, __pyx_n_s__load_from_samples, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_SoundBuffer);

  /* "sf.pyx":642
 *     cdef declaudio.Sound *p_this
 * 
 *     STOPPED = declaudio.Stopped             # <<<<<<<<<<<<<<
 *     PAUSED = declaudio.Paused
 *     PLAYING = declaudio.Playing
 */
  __pyx_t_3 = PyInt_FromLong(sf::SoundSource::Stopped); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Sound->tp_dict, __pyx_n_s__STOPPED, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Sound);

  /* "sf.pyx":643
 * 
 *     STOPPED = declaudio.Stopped
 *     PAUSED = declaudio.Paused             # <<<<<<<<<<<<<<
 *     PLAYING = declaudio.Playing
 * 
 */
  __pyx_t_3 = PyInt_FromLong(sf::SoundSource::Paused); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Sound->tp_dict, __pyx_n_s__PAUSED, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Sound);

  /* "sf.pyx":644
 *     STOPPED = declaudio.Stopped
 *     PAUSED = declaudio.Paused
 *     PLAYING = declaudio.Playing             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, SoundBuffer buffer=None, bint loop=False,
 */
  __pyx_t_3 = PyInt_FromLong(sf::SoundSource::Playing); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Sound->tp_dict, __pyx_n_s__PLAYING, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Sound);

  /* "sf.pyx":747
 * 
 * 
 * class Event:             # <<<<<<<<<<<<<<
 *     CLOSED = declevent.Closed
 *     RESIZED = declevent.Resized
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));

  /* "sf.pyx":748
 * 
 * class Event:
 *     CLOSED = declevent.Closed             # <<<<<<<<<<<<<<
 *     RESIZED = declevent.Resized
 *     LOST_FOCUS = declevent.LostFocus
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::Closed); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__CLOSED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":749
 * class Event:
 *     CLOSED = declevent.Closed
 *     RESIZED = declevent.Resized             # <<<<<<<<<<<<<<
 *     LOST_FOCUS = declevent.LostFocus
 *     GAINED_FOCUS = declevent.GainedFocus
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::Resized); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__RESIZED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":750
 *     CLOSED = declevent.Closed
 *     RESIZED = declevent.Resized
 *     LOST_FOCUS = declevent.LostFocus             # <<<<<<<<<<<<<<
 *     GAINED_FOCUS = declevent.GainedFocus
 *     TEXT_ENTERED = declevent.TextEntered
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::LostFocus); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 750; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__LOST_FOCUS, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 750; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":751
 *     RESIZED = declevent.Resized
 *     LOST_FOCUS = declevent.LostFocus
 *     GAINED_FOCUS = declevent.GainedFocus             # <<<<<<<<<<<<<<
 *     TEXT_ENTERED = declevent.TextEntered
 *     KEY_PRESSED = declevent.KeyPressed
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::GainedFocus); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__GAINED_FOCUS, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":752
 *     LOST_FOCUS = declevent.LostFocus
 *     GAINED_FOCUS = declevent.GainedFocus
 *     TEXT_ENTERED = declevent.TextEntered             # <<<<<<<<<<<<<<
 *     KEY_PRESSED = declevent.KeyPressed
 *     KEY_RELEASED = declevent.KeyReleased
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::TextEntered); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 752; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__TEXT_ENTERED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 752; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":753
 *     GAINED_FOCUS = declevent.GainedFocus
 *     TEXT_ENTERED = declevent.TextEntered
 *     KEY_PRESSED = declevent.KeyPressed             # <<<<<<<<<<<<<<
 *     KEY_RELEASED = declevent.KeyReleased
 *     MOUSE_WHEEL_MOVED = declevent.MouseWheelMoved
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::KeyPressed); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__KEY_PRESSED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":754
 *     TEXT_ENTERED = declevent.TextEntered
 *     KEY_PRESSED = declevent.KeyPressed
 *     KEY_RELEASED = declevent.KeyReleased             # <<<<<<<<<<<<<<
 *     MOUSE_WHEEL_MOVED = declevent.MouseWheelMoved
 *     MOUSE_BUTTON_PRESSED = declevent.MouseButtonPressed
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::KeyReleased); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__KEY_RELEASED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":755
 *     KEY_PRESSED = declevent.KeyPressed
 *     KEY_RELEASED = declevent.KeyReleased
 *     MOUSE_WHEEL_MOVED = declevent.MouseWheelMoved             # <<<<<<<<<<<<<<
 *     MOUSE_BUTTON_PRESSED = declevent.MouseButtonPressed
 *     MOUSE_BUTTON_RELEASED = declevent.MouseButtonReleased
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::MouseWheelMoved); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 755; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__MOUSE_WHEEL_MOVED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 755; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":756
 *     KEY_RELEASED = declevent.KeyReleased
 *     MOUSE_WHEEL_MOVED = declevent.MouseWheelMoved
 *     MOUSE_BUTTON_PRESSED = declevent.MouseButtonPressed             # <<<<<<<<<<<<<<
 *     MOUSE_BUTTON_RELEASED = declevent.MouseButtonReleased
 *     MOUSE_MOVED = declevent.MouseMoved
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::MouseButtonPressed); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_19, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":757
 *     MOUSE_WHEEL_MOVED = declevent.MouseWheelMoved
 *     MOUSE_BUTTON_PRESSED = declevent.MouseButtonPressed
 *     MOUSE_BUTTON_RELEASED = declevent.MouseButtonReleased             # <<<<<<<<<<<<<<
 *     MOUSE_MOVED = declevent.MouseMoved
 *     MOUSE_ENTERED = declevent.MouseEntered
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::MouseButtonReleased); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s_20, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":758
 *     MOUSE_BUTTON_PRESSED = declevent.MouseButtonPressed
 *     MOUSE_BUTTON_RELEASED = declevent.MouseButtonReleased
 *     MOUSE_MOVED = declevent.MouseMoved             # <<<<<<<<<<<<<<
 *     MOUSE_ENTERED = declevent.MouseEntered
 *     MOUSE_LEFT = declevent.MouseLeft
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::MouseMoved); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__MOUSE_MOVED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 758; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":759
 *     MOUSE_BUTTON_RELEASED = declevent.MouseButtonReleased
 *     MOUSE_MOVED = declevent.MouseMoved
 *     MOUSE_ENTERED = declevent.MouseEntered             # <<<<<<<<<<<<<<
 *     MOUSE_LEFT = declevent.MouseLeft
 *     JOY_BUTTON_PRESSED = declevent.JoyButtonPressed
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::MouseEntered); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 759; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__MOUSE_ENTERED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 759; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":760
 *     MOUSE_MOVED = declevent.MouseMoved
 *     MOUSE_ENTERED = declevent.MouseEntered
 *     MOUSE_LEFT = declevent.MouseLeft             # <<<<<<<<<<<<<<
 *     JOY_BUTTON_PRESSED = declevent.JoyButtonPressed
 *     JOY_BUTTON_RELEASED = declevent.JoyButtonReleased
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::MouseLeft); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__MOUSE_LEFT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":761
 *     MOUSE_ENTERED = declevent.MouseEntered
 *     MOUSE_LEFT = declevent.MouseLeft
 *     JOY_BUTTON_PRESSED = declevent.JoyButtonPressed             # <<<<<<<<<<<<<<
 *     JOY_BUTTON_RELEASED = declevent.JoyButtonReleased
 *     JOY_MOVED = declevent.JoyMoved
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::JoyButtonPressed); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__JOY_BUTTON_PRESSED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":762
 *     MOUSE_LEFT = declevent.MouseLeft
 *     JOY_BUTTON_PRESSED = declevent.JoyButtonPressed
 *     JOY_BUTTON_RELEASED = declevent.JoyButtonReleased             # <<<<<<<<<<<<<<
 *     JOY_MOVED = declevent.JoyMoved
 *     COUNT = declevent.Count
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::JoyButtonReleased); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__JOY_BUTTON_RELEASED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":763
 *     JOY_BUTTON_PRESSED = declevent.JoyButtonPressed
 *     JOY_BUTTON_RELEASED = declevent.JoyButtonReleased
 *     JOY_MOVED = declevent.JoyMoved             # <<<<<<<<<<<<<<
 *     COUNT = declevent.Count
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::JoyMoved); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__JOY_MOVED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":764
 *     JOY_BUTTON_RELEASED = declevent.JoyButtonReleased
 *     JOY_MOVED = declevent.JoyMoved
 *     COUNT = declevent.Count             # <<<<<<<<<<<<<<
 * 
 *     NAMES = {
 */
  __pyx_t_1 = PyInt_FromLong(sf::Event::Count); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__COUNT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":766
 *     COUNT = declevent.Count
 * 
 *     NAMES = {             # <<<<<<<<<<<<<<
 *         CLOSED: 'Closed',
 *         RESIZED: 'Resized',
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));

  /* "sf.pyx":767
 * 
 *     NAMES = {
 *         CLOSED: 'Closed',             # <<<<<<<<<<<<<<
 *         RESIZED: 'Resized',
 *         LOST_FOCUS: 'Lost focus',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__CLOSED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_n_s__Closed)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":768
 *     NAMES = {
 *         CLOSED: 'Closed',
 *         RESIZED: 'Resized',             # <<<<<<<<<<<<<<
 *         LOST_FOCUS: 'Lost focus',
 *         GAINED_FOCUS: 'Gained focus',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__RESIZED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 768; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_n_s__Resized)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":769
 *         CLOSED: 'Closed',
 *         RESIZED: 'Resized',
 *         LOST_FOCUS: 'Lost focus',             # <<<<<<<<<<<<<<
 *         GAINED_FOCUS: 'Gained focus',
 *         TEXT_ENTERED: 'Text entered',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__LOST_FOCUS); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_84)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":770
 *         RESIZED: 'Resized',
 *         LOST_FOCUS: 'Lost focus',
 *         GAINED_FOCUS: 'Gained focus',             # <<<<<<<<<<<<<<
 *         TEXT_ENTERED: 'Text entered',
 *         KEY_PRESSED: 'Key pressed',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__GAINED_FOCUS); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_85)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":771
 *         LOST_FOCUS: 'Lost focus',
 *         GAINED_FOCUS: 'Gained focus',
 *         TEXT_ENTERED: 'Text entered',             # <<<<<<<<<<<<<<
 *         KEY_PRESSED: 'Key pressed',
 *         KEY_RELEASED: 'Key released',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__TEXT_ENTERED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_86)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":772
 *         GAINED_FOCUS: 'Gained focus',
 *         TEXT_ENTERED: 'Text entered',
 *         KEY_PRESSED: 'Key pressed',             # <<<<<<<<<<<<<<
 *         KEY_RELEASED: 'Key released',
 *         MOUSE_WHEEL_MOVED: 'Mouse wheel moved',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__KEY_PRESSED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_87)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":773
 *         TEXT_ENTERED: 'Text entered',
 *         KEY_PRESSED: 'Key pressed',
 *         KEY_RELEASED: 'Key released',             # <<<<<<<<<<<<<<
 *         MOUSE_WHEEL_MOVED: 'Mouse wheel moved',
 *         MOUSE_BUTTON_PRESSED: 'Mouse button pressed',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__KEY_RELEASED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_88)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":774
 *         KEY_PRESSED: 'Key pressed',
 *         KEY_RELEASED: 'Key released',
 *         MOUSE_WHEEL_MOVED: 'Mouse wheel moved',             # <<<<<<<<<<<<<<
 *         MOUSE_BUTTON_PRESSED: 'Mouse button pressed',
 *         MOUSE_BUTTON_RELEASED: 'Mouse button released',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__MOUSE_WHEEL_MOVED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_89)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":775
 *         KEY_RELEASED: 'Key released',
 *         MOUSE_WHEEL_MOVED: 'Mouse wheel moved',
 *         MOUSE_BUTTON_PRESSED: 'Mouse button pressed',             # <<<<<<<<<<<<<<
 *         MOUSE_BUTTON_RELEASED: 'Mouse button released',
 *         MOUSE_MOVED: 'Mouse moved',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_19); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_90)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":776
 *         MOUSE_WHEEL_MOVED: 'Mouse wheel moved',
 *         MOUSE_BUTTON_PRESSED: 'Mouse button pressed',
 *         MOUSE_BUTTON_RELEASED: 'Mouse button released',             # <<<<<<<<<<<<<<
 *         MOUSE_MOVED: 'Mouse moved',
 *         MOUSE_ENTERED: 'Mouse entered',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s_20); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 776; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_91)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":777
 *         MOUSE_BUTTON_PRESSED: 'Mouse button pressed',
 *         MOUSE_BUTTON_RELEASED: 'Mouse button released',
 *         MOUSE_MOVED: 'Mouse moved',             # <<<<<<<<<<<<<<
 *         MOUSE_ENTERED: 'Mouse entered',
 *         MOUSE_LEFT: 'Mouse left',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__MOUSE_MOVED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_92)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":778
 *         MOUSE_BUTTON_RELEASED: 'Mouse button released',
 *         MOUSE_MOVED: 'Mouse moved',
 *         MOUSE_ENTERED: 'Mouse entered',             # <<<<<<<<<<<<<<
 *         MOUSE_LEFT: 'Mouse left',
 *         JOY_BUTTON_PRESSED: 'Joystick button pressed',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__MOUSE_ENTERED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_93)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":779
 *         MOUSE_MOVED: 'Mouse moved',
 *         MOUSE_ENTERED: 'Mouse entered',
 *         MOUSE_LEFT: 'Mouse left',             # <<<<<<<<<<<<<<
 *         JOY_BUTTON_PRESSED: 'Joystick button pressed',
 *         JOY_BUTTON_RELEASED: 'Joystick button released',
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__MOUSE_LEFT); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_94)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":780
 *         MOUSE_ENTERED: 'Mouse entered',
 *         MOUSE_LEFT: 'Mouse left',
 *         JOY_BUTTON_PRESSED: 'Joystick button pressed',             # <<<<<<<<<<<<<<
 *         JOY_BUTTON_RELEASED: 'Joystick button released',
 *         JOY_MOVED: 'Joystick moved'
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__JOY_BUTTON_PRESSED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_95)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":781
 *         MOUSE_LEFT: 'Mouse left',
 *         JOY_BUTTON_PRESSED: 'Joystick button pressed',
 *         JOY_BUTTON_RELEASED: 'Joystick button released',             # <<<<<<<<<<<<<<
 *         JOY_MOVED: 'Joystick moved'
 *         }
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__JOY_BUTTON_RELEASED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_96)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "sf.pyx":782
 *         JOY_BUTTON_PRESSED: 'Joystick button pressed',
 *         JOY_BUTTON_RELEASED: 'Joystick button released',
 *         JOY_MOVED: 'Joystick moved'             # <<<<<<<<<<<<<<
 *         }
 * 
 */
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_n_s__JOY_MOVED); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_t_2, ((PyObject *)__pyx_kp_s_97)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s__NAMES, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "sf.pyx":785
 *         }
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         """Return a short description of the event."""
 * 
 */
  __pyx_t_1 = __pyx_binding_PyCFunctionType_NewEx(&__pyx_mdef_2sf_5Event___str__, NULL, __pyx_n_s__sf); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 785; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetItem(__pyx_t_3, __pyx_n_s____str__, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 785; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "sf.pyx":747
 * 
 * 
 * class Event:             # <<<<<<<<<<<<<<
 *     CLOSED = declevent.Closed
 *     RESIZED = declevent.Resized
 */
  __pyx_t_1 = __Pyx_CreateClass(((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_3), __pyx_n_s__Event, __pyx_n_s__sf); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__Event, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;

  /* "sf.pyx":948
 *     cdef bint delete_this
 * 
 *     DEFAULT_FONT = wrap_font_instance(<decl.Font*>&decl.GetDefaultFont(), False)             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self):
 */
  __pyx_t_3 = ((PyObject *)__pyx_f_2sf_wrap_font_instance(((sf::Font *)(&sf::Font::GetDefaultFont())), 0)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 948; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Font->tp_dict, __pyx_n_s__DEFAULT_FONT, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 948; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Font);

  /* "sf.pyx":959
 * 
 *     @classmethod
 *     def load_from_file(cls, char* filename):             # <<<<<<<<<<<<<<
 *         cdef decl.Font *p = new decl.Font()
 * 
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Font, __pyx_n_s__load_from_file); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Font->tp_dict, __pyx_n_s__load_from_file, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Font);

  /* "sf.pyx":968
 * 
 *     @classmethod
 *     def load_from_memory(cls, char* data):             # <<<<<<<<<<<<<<
 *         cdef decl.Font *p = new decl.Font()
 * 
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Font, __pyx_n_s__load_from_memory); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Font->tp_dict, __pyx_n_s__load_from_memory, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Font);

  /* "sf.pyx":1052
 * 
 *     @classmethod
 *     def load_from_file(cls, char *filename):             # <<<<<<<<<<<<<<
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Image, __pyx_n_s__load_from_file); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Image->tp_dict, __pyx_n_s__load_from_file, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Image);

  /* "sf.pyx":1061
 * 
 *     @classmethod
 *     def load_from_screen(cls, RenderWindow window, IntRect source_rect=None):             # <<<<<<<<<<<<<<
 *         """Return a new image with the screen content."""
 * 
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Image, __pyx_n_s__load_from_screen); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1060; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Image->tp_dict, __pyx_n_s__load_from_screen, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Image);

  /* "sf.pyx":1079
 * 
 *     @classmethod
 *     def load_from_memory(cls, char* mem):             # <<<<<<<<<<<<<<
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Image, __pyx_n_s__load_from_memory); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1078; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Image->tp_dict, __pyx_n_s__load_from_memory, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Image);

  /* "sf.pyx":1088
 * 
 *     @classmethod
 *     def load_from_pixels(cls, int width, int height, char *pixels):             # <<<<<<<<<<<<<<
 *         cdef decl.Image *p_cpp_instance = new decl.Image()
 * 
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Image, __pyx_n_s__load_from_pixels); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Image->tp_dict, __pyx_n_s__load_from_pixels, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Image);

  /* "sf.pyx":1097
 * 
 *     @classmethod
 *     def get_maximum_size(cls):             # <<<<<<<<<<<<<<
 *         return decl.GetMaximumSize()
 * 
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Image, __pyx_n_s__get_maximum_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Image->tp_dict, __pyx_n_s__get_maximum_size, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Image);

  /* "sf.pyx":1104
 * 
 *     def copy(self, Image source, int dest_x, int dest_y,
 *              source_rect=None, bint apply_alpha=None):             # <<<<<<<<<<<<<<
 *         cdef decl.IntRect cpp_source_rect
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(Py_None); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_34 = __pyx_t_4;

  /* "sf.pyx":1298
 *     cdef bint is_unicode
 * 
 *     REGULAR = declstyle.Regular             # <<<<<<<<<<<<<<
 *     BOLD = declstyle.Bold
 *     ITALIC = declstyle.Italic
 */
  __pyx_t_1 = PyInt_FromLong(sf::Text::Regular); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Text->tp_dict, __pyx_n_s__REGULAR, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Text);

  /* "sf.pyx":1299
 * 
 *     REGULAR = declstyle.Regular
 *     BOLD = declstyle.Bold             # <<<<<<<<<<<<<<
 *     ITALIC = declstyle.Italic
 *     UNDERLINED = declstyle.Underlined
 */
  __pyx_t_1 = PyInt_FromLong(sf::Text::Bold); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Text->tp_dict, __pyx_n_s__BOLD, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Text);

  /* "sf.pyx":1300
 *     REGULAR = declstyle.Regular
 *     BOLD = declstyle.Bold
 *     ITALIC = declstyle.Italic             # <<<<<<<<<<<<<<
 *     UNDERLINED = declstyle.Underlined
 * 
 */
  __pyx_t_1 = PyInt_FromLong(sf::Text::Italic); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Text->tp_dict, __pyx_n_s__ITALIC, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Text);

  /* "sf.pyx":1301
 *     BOLD = declstyle.Bold
 *     ITALIC = declstyle.Italic
 *     UNDERLINED = declstyle.Underlined             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, string=None, Font font=None, int character_size=0):
 */
  __pyx_t_1 = PyInt_FromLong(sf::Text::Underlined); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Text->tp_dict, __pyx_n_s__UNDERLINED, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Text);

  /* "sf.pyx":1420
 *     def __cinit__(self, Image image=None, tuple position=(0,0),
 *                   tuple scale=(1,1), float rotation=0.0,
 *                   Color color=Color.WHITE):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f cpp_position
 *         cdef decl.Vector2f cpp_scale
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)((PyObject*)__pyx_ptype_2sf_Color)), __pyx_n_s__WHITE); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_2sf_Color))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_k_47 = ((struct __pyx_obj_2sf_Color *)__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "sf.pyx":1585
 * 
 *     @classmethod
 *     def get_desktop_mode(cls):             # <<<<<<<<<<<<<<
 *         cdef decl.VideoMode *p = new decl.VideoMode()
 *         p[0] = decl.GetDesktopMode()
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_VideoMode, __pyx_n_s__get_desktop_mode); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_VideoMode->tp_dict, __pyx_n_s__get_desktop_mode, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_VideoMode);

  /* "sf.pyx":1592
 * 
 *     @classmethod
 *     def get_fullscreen_modes(cls):             # <<<<<<<<<<<<<<
 *         cdef list ret = []
 *         cdef vector[decl.VideoMode] v = decl.GetFullscreenModes()
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_VideoMode, __pyx_n_s_98); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_VideoMode->tp_dict, __pyx_n_s_98, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_VideoMode);

  /* "sf.pyx":1692
 * 
 *     @classmethod
 *     def from_center_and_size(cls, tuple center, tuple size):             # <<<<<<<<<<<<<<
 *         cdef decl.Vector2f cpp_center
 *         cdef decl.Vector2f cpp_size
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_View, __pyx_n_s_99); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_View->tp_dict, __pyx_n_s_99, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_View);

  /* "sf.pyx":1704
 * 
 *     @classmethod
 *     def from_rect(cls, FloatRect rect):             # <<<<<<<<<<<<<<
 *         cdef decl.View *p = new decl.View(rect.p_this[0])
 * 
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_View, __pyx_n_s__from_rect); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_View->tp_dict, __pyx_n_s__from_rect, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_View);

  /* "sf.pyx":1736
 *     cdef decl.Shader *p_this
 * 
 *     IS_AVAILABLE = decl.IsAvailable()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self):
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(sf::Shader::IsAvailable()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Shader->tp_dict, __pyx_n_s__IS_AVAILABLE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Shader);

  /* "sf.pyx":1745
 * 
 *     @classmethod
 *     def load_from_file(cls, char *filename):             # <<<<<<<<<<<<<<
 *         cdef decl.Shader *p = new decl.Shader()
 * 
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Shader, __pyx_n_s__load_from_file); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Shader->tp_dict, __pyx_n_s__load_from_file, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Shader);

  /* "sf.pyx":1754
 * 
 *     @classmethod
 *     def load_from_memory(cls, char* shader):             # <<<<<<<<<<<<<<
 *         cdef decl.Shader *p = new decl.Shader()
 * 
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Shader, __pyx_n_s__load_from_memory); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Shader->tp_dict, __pyx_n_s__load_from_memory, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Shader);

  /* "sf.pyx":1995
 *     cdef decl.RenderImage *p_this
 * 
 *     IS_AVAILABLE = decl.RenderImageIsAvailable()             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self):
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(sf::RenderImage::IsAvailable()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_RenderImage->tp_dict, __pyx_n_s__IS_AVAILABLE, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_RenderImage);

  /* "sf.pyx":2219
 * 
 *     @classmethod
 *     def line(cls, float p1x, float p1y, float p2x, float p2y, float thickness,             # <<<<<<<<<<<<<<
 *              Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Shape, __pyx_n_s__line); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Shape->tp_dict, __pyx_n_s__line, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Shape);

  /* "sf.pyx":2229
 * 
 *     @classmethod
 *     def rectangle(cls, float left, float top, float width, float height,             # <<<<<<<<<<<<<<
 *                   Color color, float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Shape, __pyx_n_s__rectangle); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Shape->tp_dict, __pyx_n_s__rectangle, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Shape);

  /* "sf.pyx":2241
 * 
 *     @classmethod
 *     def rectangle_from_rect(cls, FloatRect rect, Color color, float outline=0.0,             # <<<<<<<<<<<<<<
 *                             Color outline_color=None):
 *         if outline_color is None:
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Shape, __pyx_n_s__rectangle_from_rect); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Shape->tp_dict, __pyx_n_s__rectangle_from_rect, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_2sf_Shape);

  /* "sf.pyx":2253
 * 
 *     @classmethod
 *     def circle(cls, float x, float y, float radius, Color color,             # <<<<<<<<<<<<<<
 *                float outline=0.0, Color outline_color=None):
 *         if outline_color is None:
 */
  __pyx_t_3 = __Pyx_GetName((PyObject *)__pyx_ptype_2sf_Shape, __pyx_n_s__circle); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_2sf_Shape->tp_dict, __pyx_n_s__circle, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_2sf_Shape);

  /* "sf.pyx":1
 * # -*- python -*-             # <<<<<<<<<<<<<<
 * # -*- coding: utf-8 -*-
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    __Pyx_AddTraceback("init sf");
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init sf");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result)
        PyErr_SetObject(PyExc_NameError, name);
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;

    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    /* unexpected keyword found */
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *number, *more_or_less;

    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    number = (num_expected == 1) ? "" : "s";
    PyErr_Format(PyExc_TypeError,
        #if PY_VERSION_HEX < 0x02050000
            "%s() takes %s %d positional argument%s (%d given)",
        #else
            "%s() takes %s %zd positional argument%s (%zd given)",
        #endif
        func_name, more_or_less, num_expected, number, num_found);
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}


static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();

    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}

static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;

    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}


#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    /* First, check the traceback argument, replacing None with NULL. */
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    /* Next, replace a missing value with None */
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        /* Raising an instance.  The value should be a dummy. */
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        /* Normalize to raise <class>, <instance> */
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }

    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}

#else /* Python 3+ */

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;

    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (!PyExceptionClass_Check(type)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }

    PyErr_SetObject(type, value);

    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }

bad:
    return;
}
#endif

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
                 "need more than %d value%s to unpack", (int)index,
        #else
                 "need more than %zd value%s to unpack", index,
        #endif
                 (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
            "too many values to unpack (expected %d)", (int)expected);
        #else
            "too many values to unpack (expected %zd)", expected);
        #endif
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #else
        if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key)))
        #endif
            goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    return 0;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static PyObject *__Pyx_FindPy2Metaclass(PyObject *bases) {
    PyObject *metaclass;
    /* Default metaclass */
#if PY_MAJOR_VERSION < 3
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = PyObject_GetAttrString(base, "__class__");
        if (!metaclass) {
            PyErr_Clear();
            metaclass = (PyObject*) Py_TYPE(base);
        }
    } else {
        metaclass = (PyObject *) &PyClass_Type;
    }
#else
    if (PyTuple_Check(bases) && PyTuple_GET_SIZE(bases) > 0) {
        PyObject *base = PyTuple_GET_ITEM(bases, 0);
        metaclass = (PyObject*) Py_TYPE(base);
    } else {
        metaclass = (PyObject *) &PyType_Type;
    }
#endif
    Py_INCREF(metaclass);
    return metaclass;
}

static PyObject *__Pyx_CreateClass(PyObject *bases, PyObject *dict, PyObject *name,
                                   PyObject *modname) {
    PyObject *result;
    PyObject *metaclass;

    if (PyDict_SetItemString(dict, "__module__", modname) < 0)
        return NULL;

    /* Python2 __metaclass__ */
    metaclass = PyDict_GetItemString(dict, "__metaclass__");
    if (metaclass) {
        Py_INCREF(metaclass);
    } else {
        metaclass = __Pyx_FindPy2Metaclass(bases);
    }
    result = PyObject_CallFunctionObjArgs(metaclass, name, bases, dict, NULL);
    Py_DECREF(metaclass);
    return result;
}

static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
    /* It appears that PyMethodDescr_Type is not anywhere exposed in the Python/C API */
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = __Pyx_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    if (PyObject_TypeCheck(method, methoddescr_type)) { /* cdef classes */
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
    else if (PyMethod_Check(method)) { /* python classes */
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else if (PyCFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#ifdef __pyx_binding_PyCFunctionType_USED
    else if (PyObject_TypeCheck(method, __pyx_binding_PyCFunctionType)) { /* binded CFunction */
        return PyClassMethod_New(method);
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "Class-level classmethod() can only be called on "
                 "a method_descriptor or instance method.");
    return NULL;
}


static PyObject *__pyx_binding_PyCFunctionType_NewEx(PyMethodDef *ml, PyObject *self, PyObject *module) {
	__pyx_binding_PyCFunctionType_object *op = PyObject_GC_New(__pyx_binding_PyCFunctionType_object, __pyx_binding_PyCFunctionType);
    if (op == NULL)
        return NULL;
	op->func.m_ml = ml;
	Py_XINCREF(self);
	op->func.m_self = self;
	Py_XINCREF(module);
	op->func.m_module = module;
	PyObject_GC_Track(op);
	return (PyObject *)op;
}

static void __pyx_binding_PyCFunctionType_dealloc(__pyx_binding_PyCFunctionType_object *m) {
	PyObject_GC_UnTrack(m);
	Py_XDECREF(m->func.m_self);
	Py_XDECREF(m->func.m_module);
    PyObject_GC_Del(m);
}

static PyObject *__pyx_binding_PyCFunctionType_descr_get(PyObject *func, PyObject *obj, PyObject *type) {
	if (obj == Py_None)
		obj = NULL;
	return PyMethod_New(func, obj, type);
}

static int __pyx_binding_PyCFunctionType_init(void) {
    __pyx_binding_PyCFunctionType_type = PyCFunction_Type;
    __pyx_binding_PyCFunctionType_type.tp_name = __Pyx_NAMESTR("cython_binding_builtin_function_or_method");
    __pyx_binding_PyCFunctionType_type.tp_dealloc = (destructor)__pyx_binding_PyCFunctionType_dealloc;
    __pyx_binding_PyCFunctionType_type.tp_descr_get = __pyx_binding_PyCFunctionType_descr_get;
    if (PyType_Ready(&__pyx_binding_PyCFunctionType_type) < 0) {
        return -1;
    }
    __pyx_binding_PyCFunctionType = &__pyx_binding_PyCFunctionType_type;
    return 0;

}

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_sf__Int16(sf::Int16 val) {
    const sf::Int16 neg_one = (sf::Int16)-1, const_zero = (sf::Int16)0;
    const int is_unsigned = const_zero < neg_one;
    if ((sizeof(sf::Int16) == sizeof(char))  ||
        (sizeof(sf::Int16) == sizeof(short))) {
        return PyInt_FromLong((long)val);
    } else if ((sizeof(sf::Int16) == sizeof(int)) ||
               (sizeof(sf::Int16) == sizeof(long))) {
        if (is_unsigned)
            return PyLong_FromUnsignedLong((unsigned long)val);
        else
            return PyInt_FromLong((long)val);
    } else if (sizeof(sf::Int16) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG)val);
        else
            return PyLong_FromLongLong((PY_LONG_LONG)val);
    } else {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        return _PyLong_FromByteArray(bytes, sizeof(sf::Int16), 
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static void __Pyx_WriteUnraisable(const char *name) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItemString(dict, "__pyx_vtable__", ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"

static void __Pyx_AddTraceback(const char *funcname) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyObject *py_globals = 0;
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;

    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(__pyx_filename);
    #else
    py_srcfile = PyUnicode_FromString(__pyx_filename);
    #endif
    if (!py_srcfile) goto bad;
    if (__pyx_clineno) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_code = PyCode_New(
        0,            /*int argcount,*/
        #if PY_MAJOR_VERSION >= 3
        0,            /*int kwonlyargcount,*/
        #endif
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        __pyx_lineno,   /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    if (!py_code) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = __pyx_lineno;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
